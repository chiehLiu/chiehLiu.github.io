<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Chieh Liu&#39;s Blog</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-03-20T17:36:15.089Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Chieh Liu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JS-The Weird Part Of Javascript - part 2</title>
    <link href="http://example.com/2021/03/21/JS-The%20Weird%20Part%20Of%20Javascript%20-%20part%202/"/>
    <id>http://example.com/2021/03/21/JS-The%20Weird%20Part%20Of%20Javascript%20-%20part%202/</id>
    <published>2021-03-20T17:35:53.016Z</published>
    <updated>2021-03-20T17:36:15.089Z</updated>
    
    <content type="html"><![CDATA[<h1 id="The-Weird-Part-Of-Javascript-part-2"><a href="#The-Weird-Part-Of-Javascript-part-2" class="headerlink" title="The Weird Part Of Javascript - part 2"></a>The Weird Part Of Javascript - part 2</h1><h2 id="tags-Javascript-relate"><a href="#tags-Javascript-relate" class="headerlink" title="tags: Javascript relate"></a>tags: Javascript relate</h2><h6 id="tags-Javascript"><a href="#tags-Javascript" class="headerlink" title="tags: Javascript"></a>tags: <code>Javascript</code></h6><h1 id="物件與函式-Objects-And-Functions"><a href="#物件與函式-Objects-And-Functions" class="headerlink" title="物件與函式 (Objects And Functions)"></a>物件與函式 (Objects And Functions)</h1><blockquote><p>在其他程式語言中物件、函式是兩種完全不同的存在，但是在JS裡面它們非常相似</p></blockquote><h2 id="Objects-And-The-Dot"><a href="#Objects-And-The-Dot" class="headerlink" title="Objects And The Dot"></a>Objects And The Dot</h2><ul><li>物件(objects)是鍵值配對 (name:value pair) 的集合(不一定只有一對)</li><li>物件內可以包含有純值(Primitives)、另一個物件(Objects)、函式Function(或稱方法method)</li><li>上面標示的0x001是記憶體內部位置的範例，就像是它們的地址</li></ul><p><img src="https://i.imgur.com/zt3XHMD.png"></p><h3 id="範例"><a href="#範例" class="headerlink" title="範例"></a>範例</h3><p>這邊是為了作範例而這樣製作物件，不過會有更好的方式會在後面的章節介紹</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> person = <span class="keyword">new</span> <span class="built_in">Object</span>();</span><br><span class="line"></span><br><span class="line">person[<span class="string">&quot;firstname&quot;</span>] = <span class="string">&quot;Tony&quot;</span>;</span><br><span class="line">person[<span class="string">&quot;lastname&quot;</span>] = <span class="string">&quot;Alicea&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> firstNameProperty = <span class="string">&quot;firstname&quot;</span>;</span><br><span class="line"></span><br><span class="line">person.address = <span class="keyword">new</span> <span class="built_in">Object</span>();</span><br><span class="line">person.address.street = <span class="string">&quot;111 Main St.&quot;</span>;</span><br><span class="line">person.address.city = <span class="string">&quot;London&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(person); <span class="comment">//得到object</span></span><br><span class="line"><span class="built_in">console</span>.log(person[<span class="string">&quot;firstname&quot;</span>]); <span class="comment">//得到Tony</span></span><br><span class="line"><span class="built_in">console</span>.log(person[firstNameProperty])<span class="comment">//得到Tony</span></span><br><span class="line"><span class="built_in">console</span>.log(person.firstname);<span class="comment">//得到Tony</span></span><br><span class="line"><span class="built_in">console</span>.log(person.address.street); <span class="comment">//得到111 Main St.</span></span><br><span class="line"><span class="built_in">console</span>.log(person.address.city);<span class="comment">//得到London</span></span><br></pre></td></tr></table></figure><ol><li>我們設置一個物件person，並且新增兩個屬性firstname,lastname</li><li>把firstname指派給變數，一樣可以使用變數取得新增的內容</li><li>使用(.)可以更方便的新增屬性以及取得物件內容</li><li>使用 [ ] , (.) 這兩個運算子都能取得物件內容以及新增屬性</li></ol><p><img src="https://i.imgur.com/tLJUO9h.png"></p><p>[ ]  運算子</p><ul><li>需要使用字串型態</li><li>可使用變數指派的方式使用</li></ul><p>(.) 運算子</p><ul><li>編譯器可以直接閱讀不需要使用字串型態</li><li>不可使用變數指派方式使用</li><li>更簡潔易讀</li></ul><p><img src="https://i.imgur.com/QFtKBuI.png"></p><h1 id="物件、物件實字-Objects-And-Object-Literals"><a href="#物件、物件實字-Objects-And-Object-Literals" class="headerlink" title="物件、物件實字(Objects And Object Literals)"></a>物件、物件實字(Objects And Object Literals)</h1><ul><li>為了創造物件我們可以使用{ } 是 <code>new Object();</code>的縮寫</li><li>{} 不是運算子</li><li>JS引擎會判斷使用{ } 就是正在創造物件</li><li>只要用{ } 來建立物件的語法，就稱為物件實字 (Object Literals)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> Tony = &#123;<span class="attr">firstname</span>:<span class="string">&#x27;Tony&#x27;</span>,<span class="attr">lastname</span>:<span class="string">&#x27;Alicea&#x27;</span>&#125;;</span><br><span class="line"><span class="built_in">console</span>.log(Tony);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> Tony = <span class="keyword">new</span> <span class="built_in">Object</span>();</span><br><span class="line">person.firstname = <span class="string">&quot;Tony&quot;</span>;</span><br><span class="line">person.lastname = <span class="string">&quot;Alicea&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(Tony);</span><br></pre></td></tr></table></figure><p>會印出一樣的結果<br><img src="https://i.imgur.com/aUcJqIY.png"></p><p><strong>物件創建在物件之內</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> Tony = &#123;</span><br><span class="line">    firstname:<span class="string">&quot;Tony&quot;</span></span><br><span class="line">    address:&#123;</span><br><span class="line">        street:<span class="string">&#x27;111 Main St.&#x27;</span>,</span><br><span class="line">        city:<span class="string">&#x27;New York&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>創建在函式內部</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">greet</span>(<span class="params">person</span>)</span>&#123;</span><br><span class="line"> <span class="built_in">console</span>.log(<span class="string">&#x27;HI&#x27;</span> + person)</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">greet(&#123;</span><br><span class="line">firstname:<span class="string">&#x27;Mary&#x27;</span>,</span><br><span class="line">lastname:<span class="string">&#x27;Doe&#x27;</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>使用在增添屬性上面</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Tony.company = &#123;</span><br><span class="line">    street: <span class="string">&#x27;333 Second St.&#x27;</span>,</span><br><span class="line">    companyName: <span class="string">&#x27;Sucess&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="框架小叮嚀-Framework-Aside"><a href="#框架小叮嚀-Framework-Aside" class="headerlink" title="框架小叮嚀(Framework Aside)"></a>框架小叮嚀(Framework Aside)</h1><ul><li>JS是沒有namespace，因為{ }的關係不需要</li><li>可以使用{ } 創造出物件來假扮命名空間</li><li>在框架或是函式庫的原始碼中很常看到這樣的使用方式</li></ul><h2 id="Faking-Namespaces"><a href="#Faking-Namespaces" class="headerlink" title="Faking Namespaces"></a>Faking Namespaces</h2><h3 id="命名空間-Namespace"><a href="#命名空間-Namespace" class="headerlink" title="命名空間(Namespace)"></a>命名空間(Namespace)</h3><p>專門給變數以及函式使用的空間，讓同樣名字的變數或是函式可以做區隔</p><h3 id="範例-1"><a href="#範例-1" class="headerlink" title="範例"></a>範例</h3><p>兩個變數名稱一樣時上方的變數會被複寫，因此印出Hola!</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> greet = <span class="string">&#x27;Hello!&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> greet = <span class="string">&#x27;Hola!&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(greet); <span class="comment">// Renders Hola!</span></span><br></pre></td></tr></table></figure><p>為了避免上面的複寫情況發生，我們可以使用Faking Namespaces，創造一個物件來包裹住這些變數，這樣就能避免變數或是函式之間名字相同的衝突或是複寫的狀況發生摟!</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> greet = <span class="string">&#x27;Hello!&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> greet = <span class="string">&#x27;Hola!&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> english = &#123;&#125;;</span><br><span class="line"><span class="keyword">var</span> spanish = &#123;&#125;;</span><br><span class="line"></span><br><span class="line">english.greet = <span class="string">&#x27;Hello!&#x27;</span>;</span><br><span class="line">spanish.greet = <span class="string">&#x27;Hola!&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="範例二"><a href="#範例二" class="headerlink" title="範例二"></a>範例二</h3><p>命名空稱使用的{ }物件可以做很多層:</p><p>把greet包裹在greeting裡面</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> greet = <span class="string">&#x27;Hello!&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> english = &#123;&#125;;</span><br><span class="line"></span><br><span class="line">english.greeting = &#123;&#125;;</span><br><span class="line">english.greeting.greet = <span class="string">&#x27;Hello!&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(english);</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/xHDptD5.png"></p><p>也可以使用物件實字:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> greet = <span class="string">&#x27;Hello!&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> english = &#123;</span><br><span class="line">    greeting:&#123;</span><br><span class="line">        greet:<span class="string">&quot;Hello!&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(english);</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/MNGbIRI.png"></p><h1 id="JSON以及物件實字-JSON-And-Object-Literals"><a href="#JSON以及物件實字-JSON-And-Object-Literals" class="headerlink" title="JSON以及物件實字(JSON And Object Literals)"></a>JSON以及物件實字(JSON And Object Literals)</h1><ul><li>JSON (JavaScript Object Notation)</li><li>跟物件的型態非常相似</li><li>有數個方法可以使用來轉換JSON</li></ul><p>一般物件型態:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> objectLiteral = &#123;</span><br><span class="line">    firstname: <span class="string">&#x27;Mary&#x27;</span>,</span><br><span class="line">    isAProgrammer: <span class="literal">true</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>JSON型態:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;firstname&quot;</span>: <span class="string">&quot;Mary&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isAProgrammer&quot;</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>轉換物件成JSON格式可以使用<code>JSON.stringify()</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">JSON</span>.stringify(objectLiteral);</span><br></pre></td></tr></table></figure><p>轉換JSON為物件給JS使用<code>JSON.parse()</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> jsonValue = <span class="built_in">JSON</span>.parse(<span class="string">&#x27;&#123; &quot;firstname&quot;: &quot;Mary&quot;, &quot;isAProgrammer&quot;: true &#125;&#x27;</span>);</span><br></pre></td></tr></table></figure><h1 id="函式就是物件-Function-Are-Objects"><a href="#函式就是物件-Function-Are-Objects" class="headerlink" title="函式就是物件(Function Are Objects)"></a>函式就是物件(Function Are Objects)</h1><h2 id="First-Class-Functions"><a href="#First-Class-Functions" class="headerlink" title="First Class Functions"></a>First Class Functions</h2><ul><li>你可以對函式做對於其他類型(字串、數字、物件、布林值等)都可以做的事情</li><li>可以指派函式為變數</li><li>可以把函式當成參數給其他函式使用</li><li>可以在literal syntax中使用函式</li></ul><p><img src="https://i.imgur.com/Uc94cSq.png"></p><p>函式是一種特殊的物件，但正因為它是物件所以他可以使用純值、物件、函式</p><p>以及兩種特殊的屬性 </p><ol><li>name(非必須，有匿名函式)</li><li>code也就是使用者撰寫的程式碼並且它是可以被呼叫的”Invocable”()</li></ol><h2 id="範例-2"><a href="#範例-2" class="headerlink" title="範例"></a>範例</h2><p>能成功地給函式加上屬性代表函式真的是一種物件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">greet</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;h1&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">greet.language = <span class="string">&#x27;English&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(greet.language);</span><br></pre></td></tr></table></figure><ol><li>設置一個函式greet，內容為印出hi</li><li>給函式加上屬性</li><li>印出greet.language</li></ol><p>得出結果 正是加上去的屬性<br><img src="https://i.imgur.com/31dfkx9.png"></p><h2 id="“Invocable”"><a href="#“Invocable”" class="headerlink" title="“Invocable”()"></a>“Invocable”()</h2><p><img src="https://i.imgur.com/eyOntey.png"></p><ul><li>當創造這個greet 函式時，它會被放到記憶體裡(以目前的例子會放到全域物件裡)</li><li>函式會有個名字屬性 greet</li><li>函式會有code屬性也就是 <code>console.log(&quot;h1&quot;);</code></li><li>然而當呼叫greet()這邊使用括弧來呼叫函式</li></ul><h2 id="作者非常強調"><a href="#作者非常強調" class="headerlink" title="作者非常強調"></a>作者非常強調</h2><blockquote><p>JS的函式就是物件</p></blockquote><h1 id="函式陳述式、函式表達式-Function-Statements-And-Function-Expressions"><a href="#函式陳述式、函式表達式-Function-Statements-And-Function-Expressions" class="headerlink" title="函式陳述式、函式表達式(Function Statements And Function Expressions)"></a>函式陳述式、函式表達式(Function Statements And Function Expressions)</h1><h2 id="表達式-Expression"><a href="#表達式-Expression" class="headerlink" title="表達式(Expression)"></a>表達式(Expression)</h2><ul><li>它不必須存在變數之中</li><li>一段會創造值(value)的程式碼</li></ul><h3 id="表達式範例"><a href="#表達式範例" class="headerlink" title="表達式範例"></a>表達式範例</h3><ul><li>(=),(+)運算子都會回傳結果，因此他們兩個都是表達式</li></ul><p><code>var a;</code></p><p><img src="https://i.imgur.com/QWDWw1J.png"></p><ul><li>只要有回傳值就是表達式(下方回傳物件)</li></ul><p><img src="https://i.imgur.com/Nwn6KsN.png"></p><h2 id="陳述式-statement"><a href="#陳述式-statement" class="headerlink" title="陳述式(statement)"></a>陳述式(statement)</h2><p>判斷式if 就是個很好的例子</p><ul><li>不會返回值</li><li>無法把if判斷式指派給變數</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(a ===<span class="number">3</span>)&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="函式陳述式範例"><a href="#函式陳述式範例" class="headerlink" title="函式陳述式範例"></a>函式陳述式範例</h2><ul><li>一開始就會被寫進記憶體中</li><li>具有Hoisting特性</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">greet</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;h1&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>這段函式它不會回傳值因為它沒有被呼叫，所以它就是個函式陳述式，只代表它被放置於記憶體中，也就代表著<strong>Hositing</strong></p><p>因此我們可以這樣使用:</p><ol><li>先呼叫函式</li><li>撰寫函式本體</li><li>依舊可以印出結果</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">greet();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">greet</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;h1&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="函式表達式範例"><a href="#函式表達式範例" class="headerlink" title="函式表達式範例"></a>函式表達式範例</h2><ul><li><p>一開始不會被寫進記憶體</p></li><li><p>執行時建立這個函數物件使用指向該函數記憶體的變數進行呼叫(也就是指派給變數做呼叫)</p></li><li><p>匿名函式的部分就是函式表達式</p><p><img src="https://i.imgur.com/T0hnU0W.png"></p></li></ul><p>注意: 這邊可以發現匿名函式的部分就是函式表達式，因為它會產生值</p><ol><li>創造匿名函式</li><li>把函式指派給變數 anonymousGreet</li><li>使用”()”  anonymousGreet()</li><li>就可以呼叫此匿名函式瞜</li></ol><p>#關於匿名函式的部分，其實可以命名，但是基於程式碼簡潔的關係以及其實函式位置已經綁訂於變數所以命名這部分是比較多餘的</p><h2 id="函式表達式無法做Hoisting"><a href="#函式表達式無法做Hoisting" class="headerlink" title="函式表達式無法做Hoisting"></a>函式表達式無法做Hoisting</h2><ul><li>因為變數的預設值為undefined</li><li>要到變數被執行了才會知道它的值，所以只會先顯示undefined那當然不是個函式</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">anonymousGreet();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> anonymousGreet = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;h1 &#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/OtTr7EZ.png"></p><h2 id="把函式作為參數丟進另一個函式"><a href="#把函式作為參數丟進另一個函式" class="headerlink" title="把函式作為參數丟進另一個函式"></a>把函式作為參數丟進另一個函式</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">log</span>(<span class="params">a</span>) </span>&#123;</span><br><span class="line">    a();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">log(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;h1&#x27;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>把函式做完參數傳送</li><li>這樣的寫法其實就是下方範例，也就是<a href="#First-Class-Functions">First Class Functions</a>的概念</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;h1&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">a();</span><br></pre></td></tr></table></figure><h1 id="Conceptual-Aside"><a href="#Conceptual-Aside" class="headerlink" title="Conceptual Aside"></a>Conceptual Aside</h1><h2 id="By-Value-vs-By-reference"><a href="#By-Value-vs-By-reference" class="headerlink" title="By Value vs By reference"></a>By Value vs By reference</h2><ul><li>這邊主要談論的都是指變數</li><li>reference 像是記憶體中的地址</li><li>value 代表變數的值</li></ul><h3 id="By-Value"><a href="#By-Value" class="headerlink" title="By Value"></a>By Value</h3><blockquote><p>讓兩個變數有相同的value藉由複製value的方式但是有兩個不同的reference</p></blockquote><ul><li>所有純值都是傳值(By value)</li></ul><ol><li>設置 a = 純值(數字、字串)</li><li>這時候純值會有個reference就像是它的地址讓變數a可以找到它</li><li>讓 新的變數b b = a </li><li>這時候b就會複製純值的value到不一樣的地址b</li></ol><p><img src="https://i.imgur.com/pPMboQa.png"></p><h3 id="By-Value-範例"><a href="#By-Value-範例" class="headerlink" title="By Value 範例"></a>By Value 範例</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// by value(primitives)</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">var</span> b;</span><br><span class="line"></span><br><span class="line">b = a;</span><br><span class="line"></span><br><span class="line">a = <span class="number">2</span>;</span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br><span class="line"><span class="built_in">console</span>.log(b);</span><br></pre></td></tr></table></figure><p>印出結果<br><img src="https://i.imgur.com/piUJv9Y.png"></p><p>因為by value只會複製值不會複製reference所以，b還是保持在新的地址，a的變化跟b無關</p><h3 id="Mutate"><a href="#Mutate" class="headerlink" title="Mutate"></a>Mutate</h3><p>改變某樣東西</p><ul><li>Immutable 代表無法被改變</li></ul><h3 id="By-reference"><a href="#By-reference" class="headerlink" title="By reference"></a>By reference</h3><blockquote><p>讓兩個物件有相同的物件藉由給予同樣的reference並不是複製同樣的內容</p></blockquote><ul><li>所有的物件都是傳址(by reference)</li><li>不管是處理把他們(物件)設置相等或是傳入函式</li></ul><ol><li>設置 a = 純值(數字、字串)</li><li>這時候純值會有個reference就像是它的地址讓變數a可以找到它</li><li>讓 新的變數b b = a </li><li>這時候b會藉由原本 a 的reference找到其value</li></ol><p><img src="https://i.imgur.com/JMYnTYu.png"></p><h3 id="By-reference-範例"><a href="#By-reference-範例" class="headerlink" title="By reference 範例"></a>By reference 範例</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// by reference(all objects(including function))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> c = &#123;</span><br><span class="line">    greeting: <span class="string">&#x27;hi&#x27;</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> d;</span><br><span class="line"></span><br><span class="line">d = c;</span><br><span class="line">c.greeting = <span class="string">&#x27;hello&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(c);</span><br><span class="line"><span class="built_in">console</span>.log(d);</span><br></pre></td></tr></table></figure><p>印出結果:<br><img src="https://i.imgur.com/1ixoIdP.png"></p><p>因為By reference 傳遞的是地址，所以兩個物件c d 基本上是在一樣的地址一樣的內容，修改其一另一個一樣也被修改</p><h3 id="By-reference-even-as-parameters-範例"><a href="#By-reference-even-as-parameters-範例" class="headerlink" title="By reference(even as parameters) 範例"></a>By reference(even as parameters) 範例</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">changeGreeting</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line">    obj.greeting = <span class="string">&#x27;Hola&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">changeGreeting(d);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(c);</span><br><span class="line"><span class="built_in">console</span>.log(d);</span><br></pre></td></tr></table></figure><p>印出結果:<br><img src="https://i.imgur.com/VjO4C4H.png"></p><p>把物件使用參數做傳遞，一樣是傳址，因此兩個傳遞對象是一樣的地址，修改一個其他都會修改</p><h3 id="By-reference-使用-指派-範例-特例"><a href="#By-reference-使用-指派-範例-特例" class="headerlink" title="By reference 使用(=)指派 範例(特例)"></a>By reference 使用(=)指派 範例(特例)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">c = &#123;</span><br><span class="line">    greeting: <span class="string">&#x27;Howdy&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(c);</span><br><span class="line"><span class="built_in">console</span>.log(d);</span><br></pre></td></tr></table></figure><p>印出結果:<br><img src="https://i.imgur.com/2Mbfcfb.png"></p><ul><li>這邊可以看到不是說reference是傳址，所以兩方物件應該會一樣?</li><li>但是(=)運算子可以設定新的記憶體地址給c因此c,d印出來的結果不同了</li></ul><h1 id="物件、函式以及’this’-Objects-Functions-And-‘this’"><a href="#物件、函式以及’this’-Objects-Functions-And-‘this’" class="headerlink" title="物件、函式以及’this’(Objects, Functions, And ‘this’)"></a>物件、函式以及’this’(Objects, Functions, And ‘this’)</h1><p><img src="https://i.imgur.com/RIdUSQV.png"></p><ul><li>函式就是物件: 其中有兩個特殊屬性 code, name</li><li>當函式被呼叫時(也就是code的部分)，會創造出執行背景(Execution Context)，接著會被擺入執行堆(Execution stack)，這會決定這個函式會如何被執行</li><li>當執行背景被創造出來時，內部都會有variable Environment也就是變數被創造在函式內部</li><li>也會有Outer Environment也就是當在函式內部找不到變數使用時，會往外部尋找參考一直找到全域變數為止(再來也沒了)</li><li>但我們也知道每天JS引擎創造執行背景時都會創造’this’這個變數，甚至我們不需要輸入任何內容</li><li>而這個this會指向(代表)不同的物件取決於這個函式是如何被呼叫</li></ul><h2 id="‘this’的指向"><a href="#‘this’的指向" class="headerlink" title="‘this’的指向"></a>‘this’的指向</h2><h3 id="範例一"><a href="#範例一" class="headerlink" title="範例一"></a>範例一</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">this</span>);</span><br><span class="line">    <span class="built_in">this</span>.newvariable = <span class="string">&#x27;hello&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> b = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">a();</span><br><span class="line"><span class="built_in">console</span>.log(newvariable);</span><br><span class="line">b();</span><br></pre></td></tr></table></figure><p>這邊設置了三種情況</p><ol><li>一定有的golbal object</li><li>函式陳述式</li><li>函式表達式</li></ol><p>結果印出來:</p><p>全部都指向window這個global object<br>並且可以直接給global object加上屬性都沒問題</p><p><img src="https://i.imgur.com/DlKoeZ0.png"></p><ul><li>當值是純值的時候被稱為property</li><li>當值是函式的時候被稱為method</li></ul><h3 id="範例二-例外"><a href="#範例二-例外" class="headerlink" title="範例二(例外)"></a>範例二(例外)</h3><p>這邊把this使用在物件內部的函式也就是methods</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> c = &#123;</span><br><span class="line">    name: <span class="string">&#x27;The c object&#x27;</span>,</span><br><span class="line">    log: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">c.log();</span><br></pre></td></tr></table></figure><p>印出結果:<br><img src="https://i.imgur.com/q1ClvKP.png"></p><p>竟然是指向了object</p><p>並且可以這樣使用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> c = &#123;</span><br><span class="line">    name: <span class="string">&#x27;The c object&#x27;</span>,</span><br><span class="line">    log: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.name = <span class="string">&quot;I can change name&quot;</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">c.log();</span><br></pre></td></tr></table></figure><p>印出結果:<br><img src="https://i.imgur.com/rBANwZ9.png"></p><p>竟然可以通過this的指向來操作物件的內容key的部分</p><h3 id="範例三-類似bug"><a href="#範例三-類似bug" class="headerlink" title="範例三(類似bug)"></a>範例三(類似bug)</h3><p>於是我們找到一個類似於JS引擎比較類似缺點的地方:</p><p>透過函式表達式的方式使用變數傳遞函式在物件內部的methods內，並且使用this再次改寫一次name屬性，這邊理論上應該會使”I can change name”修改成’change name again’</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> c = &#123;</span><br><span class="line">    name: <span class="string">&#x27;The c object&#x27;</span>,</span><br><span class="line">    log: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.name = <span class="string">&quot;I can change name&quot;</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">this</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> setname = <span class="function"><span class="keyword">function</span> (<span class="params">newname</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.name = newname;</span><br><span class="line">        &#125;</span><br><span class="line">        setname(<span class="string">&#x27;change name again&#x27;</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">c.log();</span><br></pre></td></tr></table></figure><p>印出結果:</p><p>沒有任何變化<br>剛剛以為透過物件內部的methods內部的this會指向物件本身，但是這邊的this卻指向別的地方</p><p><img src="https://i.imgur.com/p3yMbyc.png"></p><p>打開window全域物件查看發現，這邊的this竟然指向的位置是全域物件window<br><img src="https://i.imgur.com/S0rUjDo.png"></p><h3 id="範例四-範例三的解答"><a href="#範例四-範例三的解答" class="headerlink" title="範例四(範例三的解答)"></a>範例四(範例三的解答)</h3><p>如何避免這樣的情況發生呢?</p><p>把this的位置好好綁訂好並且把每個地方的this都使用變數確認是使用同一個this指向同一個地方就可以解決這個問題摟!</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> c = &#123;</span><br><span class="line">    name: <span class="string">&#x27;The c object&#x27;</span>,</span><br><span class="line">    log: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> self = <span class="built_in">this</span>;</span><br><span class="line"></span><br><span class="line">        self.name = <span class="string">&quot;I can change name&quot;</span></span><br><span class="line">        <span class="built_in">console</span>.log(self);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> setname = <span class="function"><span class="keyword">function</span> (<span class="params">newname</span>) </span>&#123;</span><br><span class="line">            self.name = newname;</span><br><span class="line">        &#125;</span><br><span class="line">        setname(<span class="string">&#x27;change name again&#x27;</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(self);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">c.log();</span><br></pre></td></tr></table></figure><p>印出結果:</p><p>這次的this就正常的指向物件本身因此可以修改name屬性搂!</p><p><img src="https://i.imgur.com/Xq4GGwA.png"></p><h1 id="Conceptual-Aside-1"><a href="#Conceptual-Aside-1" class="headerlink" title="Conceptual Aside"></a>Conceptual Aside</h1><h2 id="Arrays-Collection-of-Anything"><a href="#Arrays-Collection-of-Anything" class="headerlink" title="Arrays Collection of Anything"></a>Arrays Collection of Anything</h2><p>創造一個array<br><code>var arr = new Array();</code></p><p>使用array literal syntax<br><code>var arr = [];</code></p><p>JS的array是以0為基底的:</p><p><code>console.log(arr[0])</code></p><p>可以印出array第一個元素</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;The-Weird-Part-Of-Javascript-part-2&quot;&gt;&lt;a href=&quot;#The-Weird-Part-Of-Javascript-part-2&quot; class=&quot;headerlink&quot; title=&quot;The Weird Part Of Java</summary>
      
    
    
    
    <category term="Javascript" scheme="http://example.com/categories/Javascript/"/>
    
    
    <category term="Javascript" scheme="http://example.com/tags/Javascript/"/>
    
  </entry>
  
  <entry>
    <title>JS-The Weird Part Of Javascript - part 1</title>
    <link href="http://example.com/2021/03/21/JS-The%20Weird%20Part%20Of%20Javascript%20-%20part%201/"/>
    <id>http://example.com/2021/03/21/JS-The%20Weird%20Part%20Of%20Javascript%20-%20part%201/</id>
    <published>2021-03-20T17:34:44.108Z</published>
    <updated>2021-03-20T17:35:37.685Z</updated>
    
    <content type="html"><![CDATA[<h1 id="The-Weird-Part-Of-Javascript-part-1"><a href="#The-Weird-Part-Of-Javascript-part-1" class="headerlink" title="The Weird Part Of Javascript - part 1"></a>The Weird Part Of Javascript - part 1</h1><h2 id="tags-Javascript-relate"><a href="#tags-Javascript-relate" class="headerlink" title="tags: Javascript relate"></a>tags: Javascript relate</h2><h6 id="tags-Javascript"><a href="#tags-Javascript" class="headerlink" title="tags: Javascript"></a>tags: <code>Javascript</code></h6><h1 id="Conceptual-Aside"><a href="#Conceptual-Aside" class="headerlink" title="Conceptual Aside"></a>Conceptual Aside</h1><blockquote><p>當我們寫好JS程式時，在執行時，我們宣告的變數、函式，就會呈現在記憶體中，由電腦去運作使用。</p></blockquote><h2 id="語法解析器-Syntax-Parsers"><a href="#語法解析器-Syntax-Parsers" class="headerlink" title="語法解析器 (Syntax Parsers)"></a>語法解析器 (Syntax Parsers)</h2><p>翻譯程式:</p><ul><li>直譯器(Interpreter)</li><li>編譯器(Compiler)</li></ul><p>一個程式用來翻譯JS code成電腦可以理解的語法</p><h2 id="詞彙環境-Lexical-Environment"><a href="#詞彙環境-Lexical-Environment" class="headerlink" title="詞彙環境 (Lexical Environment)"></a>詞彙環境 (Lexical Environment)</h2><ul><li>代表程式碼在程式中的實際位置</li><li>那些”翻譯程式”非常注重你把那些程式碼寫在哪以及當下環境是什麼</li></ul><h2 id="執行背景-Execution-Contexts"><a href="#執行背景-Execution-Contexts" class="headerlink" title="執行背景 (Execution Contexts)"></a>執行背景 (Execution Contexts)</h2><ul><li>別人寫好的程式來驗證以及執行使用者的程式碼</li><li>管理哪段程式碼先執行</li><li>管理的內容不只是使用者撰寫的還有更多</li></ul><h1 id="Conceptual-Aside-1"><a href="#Conceptual-Aside-1" class="headerlink" title="Conceptual Aside"></a>Conceptual Aside</h1><h2 id="鍵值配-Name-Value-Pairs"><a href="#鍵值配-Name-Value-Pairs" class="headerlink" title="鍵值配(Name/ Value Pairs)"></a>鍵值配(Name/ Value Pairs)</h2><ul><li>一個name 會配對到 一個 value</li><li>值(value) 也可以是 數個 name:value 的配對(也就是objects)</li></ul><h2 id="物件-Objects"><a href="#物件-Objects" class="headerlink" title="物件(Objects)"></a>物件(Objects)</h2><ul><li>是數個name:value 配對的組合</li></ul><p>address的值 裏面包含了數個鍵值配</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">address:&#123;</span><br><span class="line">    street:<span class="string">&#x27;Main&#x27;</span>,</span><br><span class="line">    <span class="built_in">Number</span>:<span class="string">&#x27;100&#x27;</span>,</span><br><span class="line">    Apartment:&#123;</span><br><span class="line">        Floor:<span class="number">3</span>,</span><br><span class="line">        <span class="built_in">Number</span>:<span class="number">301</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="The-Global-Environment-and-The-Global-Object"><a href="#The-Global-Environment-and-The-Global-Object" class="headerlink" title="The Global Environment and The Global Object"></a>The Global Environment and The Global Object</h1><blockquote><p>不論使用者的JS程式碼何時執行，它都會跑在執行背景(Execution Context)裡面，意味著別人已經寫好的程式會來驗證以及執行使用者的程式碼</p></blockquote><h2 id="基礎執行背景-Base-Execution-Context也就是Global-Execution-Context"><a href="#基礎執行背景-Base-Execution-Context也就是Global-Execution-Context" class="headerlink" title="基礎執行背景(Base Execution Context也就是Global Execution Context)"></a>基礎執行背景(Base Execution Context也就是Global Execution Context)</h2><ul><li>代表整段程式的任何地方都可以取用它們</li><li>基礎執行環境創造了兩個事情 1.Global Object 2.特殊變數 this</li></ul><p><img src="https://i.imgur.com/0AtZF3g.png"></p><p>就算使用者沒有撰寫任程式碼，JS引擎也會直接創造它們兩個</p><p>1.window(Global Object)(但如果在node.js運行的話會不一樣)<br>2.特殊變數 this</p><p><img src="https://i.imgur.com/brA2yZq.png"></p><h2 id="Global"><a href="#Global" class="headerlink" title="Global"></a>Global</h2><blockquote><p>不在函式裡面就是Global<br>Not Inside a Function</p></blockquote><p>我們在IDE中輸入變數以及函式，會讓它們跟Glbal Object產生連結而我們剛剛設置的變數以及函式就變成了Global Object，因為它們都不在函式內部</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="string">&quot;Hello World!&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">b</span>(<span class="params"></span>) </span>&#123;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/IbYW4PQ.png"></p><p>Execution Context會包裹住這些內容:</p><ul><li>Global Object(window)</li><li>‘this’變數</li><li>Outer Environment - Execution Context的外部環境</li><li>Your Code(如果寫的位置不在任何函式內部)</li></ul><p><img src="https://i.imgur.com/UkmvpH1.png"></p><h1 id="The-Execution-Context-Creation-And-‘Hoisting’"><a href="#The-Execution-Context-Creation-And-‘Hoisting’" class="headerlink" title="The Execution Context: Creation And ‘Hoisting’"></a>The Execution Context: Creation And ‘Hoisting’</h1><h2 id="Hoisting-範例說明"><a href="#Hoisting-範例說明" class="headerlink" title="Hoisting 範例說明"></a>Hoisting 範例說明</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="string">&quot;Hello World!&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">b</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;Called b!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">b();</span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br></pre></td></tr></table></figure><p>我們會預期這樣的程式碼得到下面的結果</p><p><img src="https://i.imgur.com/z16LB4L.png"></p><hr><p>但如果我們做些一些改變呢?</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">b();</span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a = <span class="string">&quot;Hello World!&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">b</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;Called b!&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果有學過其他的語言應該會覺得這邊會直接出錯，因為程式碼應該是一行一行執行的，並且還沒宣告b函式所以b函式應該無法使用</p><p>但結果如下:</p><ul><li>他執行了函式b()</li><li>a的部份沒有出錯卻顯示undefined</li></ul><p>所以儘管b函式在下方才宣告卻還是執行了，以及a的部份還是可以使用的雖然它目前是一個值undefined(尚未定義)，**這樣的現象被稱為’Hoisting’**，但並不是把宣告內容提升到最上方那麼單純!</p><p><img src="https://i.imgur.com/kUSKFDe.png"></p><p>那我們直接把a移除會發生甚麼事呢?</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">b();</span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">b</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;Called b!&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>出現錯誤訊息:a is not defined(沒有被定義)</p><p><img src="https://i.imgur.com/vg4o9Ru.png"></p><hr><h2 id="Execution-Context-is-Created-Creation-Phase創造階段"><a href="#Execution-Context-is-Created-Creation-Phase創造階段" class="headerlink" title="Execution Context is Created(Creation Phase創造階段)"></a>Execution Context is Created(Creation Phase創造階段)</h2><blockquote><p>變數或是函式沒有值卻還是可以取用<br>JS會這樣運作是因為執行背景被分為兩個階段</p></blockquote><h3 id="第一階段創造-Creation-Phase"><a href="#第一階段創造-Creation-Phase" class="headerlink" title="第一階段創造(Creation Phase)"></a>第一階段創造(Creation Phase)</h3><p><img src="https://i.imgur.com/C7YYlAm.png"></p><p><strong>在記憶體內部設定好空間給變數以及函式被稱為’Hoisting’</strong></p><p>他的意思不是把程式碼移到最上方!!</p><p>而是在逐行執行程式碼之前也就是第一階段，JS引擎已經把變數以及函式設定好空間給它們了，也就是變數以及函式已經存在記憶體中，所以當程式逐行執行時，就可以使用它們</p><h3 id="變數的不同點"><a href="#變數的不同點" class="headerlink" title="變數的不同點"></a>變數的不同點</h3><p>不過變數的情況比較不一樣</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">b();</span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a = <span class="string">&quot;Hello World!&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">b</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;Called b!&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>函式b()已經全部都在記憶體內了，代表他已經被執行了</li><li>但是JS騰出空間給變數a時，JS不知道它的值是什麼直到被執行了才知道所以會先放入undefined代表還不知道它的值就跟完全不設值的情況一樣</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">b();</span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">b</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;Called b!&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一樣會取得undefinded<br><img src="https://i.imgur.com/qTbIzIe.png"></p><h3 id="結論"><a href="#結論" class="headerlink" title="結論"></a>結論</h3><ul><li><strong>所有的JS變數一開始都會被設定成undefined</strong></li><li><strong>函式則是會被完全設定好放進記憶體裡</strong></li><li>所以盡量還是不要太依賴’Hoisting’，好好讓程式逐行執行的順序比較好!</li></ul><h1 id="Conceptual-Aside-2"><a href="#Conceptual-Aside-2" class="headerlink" title="Conceptual Aside"></a>Conceptual Aside</h1><h2 id="Javascript-and-Undefined"><a href="#Javascript-and-Undefined" class="headerlink" title="Javascript and Undefined"></a>Javascript and Undefined</h2><ul><li>undefined 是一個JS內建的特殊的值，代表這個變數還沒被設定</li><li>undefined 是一個值並且實際佔據記憶體空間 代表一個變數的初始值</li><li>undefined 是一個在變數再創造階段會被設定的值也就是(未設定)</li></ul><p>下方程式碼代表undefine是一個特殊值不需要加上””</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (a === <span class="literal">undefined</span>) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;a is undefined&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;a is defined&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果我們不宣告變數內容會得到undefined結果</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/ZnYKpex.png"></p><h2 id="作者建議"><a href="#作者建議" class="headerlink" title="作者建議"></a>作者建議</h2><p>永遠不要設定變數為undefined，因為你其實可以這樣做並且不會出錯，但你會不知道出現的undefined是你設定好的還是程式碼中那些地方有出錯，最好使用的方式就是不設定它併用它來除錯</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a;</span><br><span class="line"></span><br><span class="line">a = <span class="literal">undefined</span>; <span class="comment">// 永遠別這樣做</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br></pre></td></tr></table></figure><h1 id="The-Execution-Context-Code-Execution"><a href="#The-Execution-Context-Code-Execution" class="headerlink" title="The Execution Context: Code Execution"></a>The Execution Context: Code Execution</h1><blockquote><p>第一個階段是創造階段，第二個部分是執行</p></blockquote><ul><li>在創造階段就已經設定好所有東西</li><li>執行階段會執行使用者寫的程式碼<strong>逐行</strong>轉譯、轉換成電腦可以理解的內容</li></ul><p><img src="https://i.imgur.com/RMVW6WP.png"></p><h2 id="範例說明"><a href="#範例說明" class="headerlink" title="範例說明"></a>範例說明</h2><p>從下方程式碼以及結果可以理解:</p><ul><li>程式碼逐行執行</li></ul><p>第七行的a暫時還未指派因此印出結果為undefined<br>然後經過第九行新指派a = “Hello World!”，因此在11行重新印出a 的時候就印出被指派的內容Hello World!</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">b</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;Called b!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">b();</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a = <span class="string">&quot;Hello World!&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/89oShvj.png"></p><h1 id="Conceptual-Aside-3"><a href="#Conceptual-Aside-3" class="headerlink" title="Conceptual Aside"></a>Conceptual Aside</h1><h2 id="單執行緒-Single-Threaded"><a href="#單執行緒-Single-Threaded" class="headerlink" title="單執行緒(Single Threaded)"></a>單執行緒(Single Threaded)</h2><ul><li>一次執行一個指令(使用者的視角)</li><li>瀏覽器下有很多程序在執行所以用瀏覽器的角度看的時候就不能這樣理解</li></ul><h2 id="同步執行-Synchronous-Execution"><a href="#同步執行-Synchronous-Execution" class="headerlink" title="同步執行(Synchronous Execution)"></a>同步執行(Synchronous Execution)</h2><ul><li>一次執行一行程式碼</li><li>並且按照順序</li><li>在JS中一次只會發生一件事情</li></ul><h1 id="Funciton-Invocation-and-The-Execution-Stack"><a href="#Funciton-Invocation-and-The-Execution-Stack" class="headerlink" title="Funciton Invocation and The Execution Stack"></a>Funciton Invocation and The Execution Stack</h1><h2 id="函式呼叫-Funciton-Invocation"><a href="#函式呼叫-Funciton-Invocation" class="headerlink" title="函式呼叫(Funciton Invocation)"></a>函式呼叫(Funciton Invocation)</h2><h3 id="Invocation"><a href="#Invocation" class="headerlink" title="Invocation"></a>Invocation</h3><blockquote><p>代表執行或是呼叫函式，會使用括號<code>()</code></p></blockquote><p>比方說要執行函式app可以這樣使用:</p><p><code>app();</code></p><h2 id="執行堆-Execution-Stack"><a href="#執行堆-Execution-Stack" class="headerlink" title="執行堆(Execution Stack)"></a>執行堆(Execution Stack)</h2><ul><li>每個函式會多創造一層Execution Context</li><li>會逐行且同步地執行程式碼</li><li>執行結束後會從最上層開始拋棄</li></ul><h3 id="範例說明-1"><a href="#範例說明-1" class="headerlink" title="範例說明"></a>範例說明</h3><p>橘色部分就是執行堆<br><img src="https://i.imgur.com/mduoRi5.png"></p><p>每一層都會創造一個新的Execution Context都會經歷創造階段然後逐行執行程式，這邊就是函式被呼叫之後做事情</p><ol><li>Global Execution Context 會處理所有的全域項目變數、函式等等</li><li>a() 這邊會創造一個嶄新的Execution Context 代表函式 a內的變數、函式</li><li>b() 這邊會創造一個嶄新的Execution Context 代表函式 b內的變數、函式</li></ol><h3 id="範例說明二"><a href="#範例說明二" class="headerlink" title="範例說明二"></a>範例說明二</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  b();</span><br><span class="line">  <span class="keyword">var</span> c;</span><br><span class="line">  <span class="built_in">console</span>.log(c + <span class="string">&quot; is c&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">b</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> d;</span><br><span class="line">  <span class="built_in">console</span>.log(d + <span class="string">&quot; is d&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">a();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> e;</span><br><span class="line"><span class="built_in">console</span>.log(e + <span class="string">&quot; is e&quot;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>這邊可以先忽略undefined畢竟都沒指派內容當然都會是預設值，可以先注意印出順序<br><img src="https://i.imgur.com/dOdzoLW.png"></p><blockquote><p>執行堆最上方的程式就是正在執行的程式，逐行、同步地在被處理中</p></blockquote><p>從上方程式碼可以理解函式呼叫以及執行堆的順序:</p><ol><li>呼叫 a();</li><li>進到a的內部，這邊呼叫b()</li><li>進到b的內部，印出 d (第一個印出結果)</li><li>因為b()內部執行完成，所以從執行堆中移除換執行函式a()</li><li>印出函式a()，印出 c (第二個印出結果)</li><li>因為a()內部執行完成，所以從執行堆中移除換執行Global object(也就是最下面的e)並且印出</li></ol><h1 id="Function-Context-and-Variable-Environments"><a href="#Function-Context-and-Variable-Environments" class="headerlink" title="Function, Context, and Variable Environments"></a>Function, Context, and Variable Environments</h1><h2 id="變數環境-Variable-Environments"><a href="#變數環境-Variable-Environments" class="headerlink" title="變數環境(Variable Environments)"></a>變數環境(Variable Environments)</h2><blockquote><p>描述使用者創造變數的位置以及在記憶體中與其他變數的關聯，所以當你想到這個詞基本上就是在想變數在哪裡?</p></blockquote><ul><li>變數環境 = 變數的位置以及與其他變數的關聯</li><li>每個執行背景內部(Execution Context)的變數是不會彼此影響的</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">b</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> myVar;</span><br><span class="line">  <span class="built_in">console</span>.log(myVar);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> myVar = <span class="number">2</span>;</span><br><span class="line">  <span class="built_in">console</span>.log(myVar);</span><br><span class="line">  b();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> myVar = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">console</span>.log(myVar);</span><br><span class="line">a();</span><br><span class="line"><span class="built_in">console</span>.log(myVar);</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/1mC8Hv5.png"></p><p>上方的程式碼可以這樣理解:</p><blockquote><p>每個執行背景內部的變數是不會彼此影響的</p></blockquote><ol><li>印出13行結果 myVar = 1</li><li>跑呼叫a()，內部函式印出結果 2，並且呼叫 b()</li><li>進入函式b()，內部函式結果印出undefined</li><li>執行堆移除函式b =&gt; 移除函式a =&gt; 回到Global Execution，15行在印出一次myVar = 1</li></ol><h1 id="範圍鏈-The-Scope-Chain"><a href="#範圍鏈-The-Scope-Chain" class="headerlink" title="範圍鏈(The Scope Chain)"></a>範圍鏈(The Scope Chain)</h1><ul><li>簡單來說明就是當函式內部找不到變數時就會往外找(outer environment)而這個過程就是範圍鏈</li><li>函式的位置決定它的外部環境(outer environment)</li></ul><p><img src="https://i.imgur.com/7yVQZtW.png"></p><h2 id="範例"><a href="#範例" class="headerlink" title="範例"></a>範例</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">b</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(myVar);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> myVar = <span class="number">2</span>;</span><br><span class="line">  b();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> myVar = <span class="number">1</span>;</span><br><span class="line">a();</span><br></pre></td></tr></table></figure><p>印出myVar的結果是1<br><img src="https://i.imgur.com/x6DtNiM.png"></p><p>由範例可以得知:</p><ol><li>呼叫a()</li><li>進入函式a()，呼叫函式b()</li><li>進入函式b()，內容需要印出myVar但內容沒有變數於是往外找</li><li>函式b()的outer environment是Global Execution因此印出結果 1</li></ol><h2 id="範例二"><a href="#範例二" class="headerlink" title="範例二"></a>範例二</h2><p>我們把函式b()整個移進去函式a()內部</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">b</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(myVar);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> myVar = <span class="number">2</span>;</span><br><span class="line">  b();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> myVar = <span class="number">1</span>;</span><br><span class="line">b();</span><br></pre></td></tr></table></figure><p>印出結果是錯誤 b is not defined<br><img src="https://i.imgur.com/KJcmUHs.png"></p><p>由範例二可以得知:</p><ul><li>呼叫函式b()位於Global Execution的環境中</li><li>位於Global Execution的環境中找不到函式b()，因為我們把它移動到函式a()裡面了</li><li>當呼叫函式找不到東西時就會顯示錯誤 <code>&#39;XXX is not defined&#39;</code></li></ul><h2 id="範例三"><a href="#範例三" class="headerlink" title="範例三"></a>範例三</h2><p>函式b()的外層是函式a()</p><p><img src="https://i.imgur.com/vvRCywU.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">b</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(myVar);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> myVar = <span class="number">2</span>;</span><br><span class="line">  b();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> myVar = <span class="number">1</span>;</span><br><span class="line">a();</span><br></pre></td></tr></table></figure><p>印出myVar的結果是2<br><img src="https://i.imgur.com/Gj4zC6Q.png"></p><p>由範例三可以得知:</p><p>由於函式b()內部找不到變數因此往外層找到a()的<code>var myVar = 2;</code>故印出結果為2</p><h2 id="範例四"><a href="#範例四" class="headerlink" title="範例四"></a>範例四</h2><p>去掉<code>var myVar = 2</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">b</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(myVar);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  b();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> myVar = <span class="number">1</span>;</span><br><span class="line">a();</span><br></pre></td></tr></table></figure><p>由範例四可以得知:</p><p>所以當 <code>var myVar = 2</code> 又被拉掉的時候，就會得到結果 1，因為又會繼續往外找<br>b的外層是a a的外層是Global Execution</p><h1 id="Scope-Es6-And-let"><a href="#Scope-Es6-And-let" class="headerlink" title="Scope, Es6, And let"></a>Scope, Es6, And let</h1><h2 id="範圍-Scope"><a href="#範圍-Scope" class="headerlink" title="範圍(Scope)"></a>範圍(Scope)</h2><ul><li>指的是變數可以被取用的區域</li><li>呼叫兩個函式它會各自有一個執行背景</li><li>如果有兩個看起來相同的變數但在記憶體中其實是兩個不同的變數(因為環境不同)</li></ul><h3 id="範例-1"><a href="#範例-1" class="headerlink" title="範例"></a>範例</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">b</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(myVar); <span class="comment">// 步驟 4</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">b</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(myVar); <span class="comment">// 步驟2</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> myVar = <span class="number">2</span>;</span><br><span class="line">  b();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> myVar = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">a();</span><br><span class="line"><span class="built_in">console</span>.log(myVar); <span class="comment">// 步驟 3</span></span><br><span class="line">b();</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/LcmlEqh.png"></p><p>從範例可以得知:</p><ul><li>叫了兩遍一樣的函示b() 第11行、18行，他們會各有一個執行背景</li><li>這邊的變數myVar雖然變數名稱一樣但是結果完全不同</li><li>因為它們的範圍(scope)不同，並且處在不同的函式中彼此的變數不會互相干擾</li></ul><ol><li>呼叫a() =&gt; 進去a()內部呼叫b()(位於a()內部)</li><li>b()內部的console找不到變數因此往外(函式a()是外部)找 故印出2</li><li>接下來回到外層印出 Global Execution的 myVar = 1 故印出1</li><li>最後又呼叫一次b()，很明顯地這次直接找尋了跟Global Execution位於同一層的b()(位於第一行)故印出結果往外找到myVar = 1 故印出1</li></ol><h2 id="let簡介"><a href="#let簡介" class="headerlink" title="let簡介"></a>let簡介</h2><ul><li>區塊範圍(Block Scope) - 變數的作用範圍只限在大括號間<code>&#123;&#125;</code></li></ul><h3 id="範例-2"><a href="#範例-2" class="headerlink" title="範例"></a>範例</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`迴圈跑第<span class="subst">$&#123;i&#125;</span>次`</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(i);</span><br></pre></td></tr></table></figure><p>很明顯的地方是外面的var i = 0被裡面的迴圈汙染到所以傳回來的結果是10<br><img src="https://i.imgur.com/wexESY7.png"></p><p>所以改成let做操作時因為其作用域是{}因此沒有汙染到外面來</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`迴圈跑第<span class="subst">$&#123;i&#125;</span>次`</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(i);</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/za2DaSb.png"></p><h1 id="What-About-Asynchronous-Callbacks"><a href="#What-About-Asynchronous-Callbacks" class="headerlink" title="What About Asynchronous Callbacks?"></a>What About Asynchronous Callbacks?</h1><ul><li>JS引擎的內部處理方式是同步的，但是與外部引擎的合作就是非同步的</li><li>非同步的部分只是在於瀏覽器會把非同步的東西放進去Event Queue但JS依舊一行一行執行</li><li>Event Queue的執行會排在執行堆任務執行完並且執行背景清除了才會動作</li></ul><h2 id="非同步-Asynchronous"><a href="#非同步-Asynchronous" class="headerlink" title="非同步(Asynchronous)"></a>非同步(Asynchronous)</h2><ul><li>代表不只一件事情同時發生</li></ul><p>但前面有說JS是同步的，那它會怎麼處理非同步事件呢?</p><p><img src="https://i.imgur.com/ecNSwqe.jpg"></p><p>JS引擎其實在運行的時候，在瀏覽器下面還有其他的引擎同時在運行:</p><ul><li>呈現引擎(Rendering Engine) - 處理畫面的呈現在螢幕上</li><li>HTTP Request - 處理瀏覽器的HTTP請求，以及獲取資料</li></ul><h3 id="結論-1"><a href="#結論-1" class="headerlink" title="結論"></a>結論</h3><p>所以我們可以理解的是JS引擎的內部處理方式是同步的，但是與外部引擎的合作就是非同步的(在瀏覽器下)</p><h2 id="事件佇列-Event-Queue"><a href="#事件佇列-Event-Queue" class="headerlink" title="事件佇列(Event Queue)"></a>事件佇列(Event Queue)</h2><ul><li><p>當執行堆是空的 JS 才會注意事件佇列</p><p>當在瀏覽器中有一個事件需要被JS引擎處理時，就會被放在Event Queue排隊並且會被事件監聽並等待函式做處不過就是要等待在Event Queue之中<br><img src="https://i.imgur.com/mfkOqWu.png"></p></li></ul><p>上面提到Event Queue在排隊其實是在等Execution stack的任務處理完之後，才會輪到Event Queue的函式創造新的執行背景<code>clickHandler()</code>處理click事件接下來輪到HTTP Request(以圖片舉例)<br><img src="https://i.imgur.com/9tyPbPp.png"></p><h3 id="範例-3"><a href="#範例-3" class="headerlink" title="範例"></a>範例</h3><p><img src="https://i.imgur.com/gEUKBJ8.gif"></p><p>這個範例可以看出被放在Event Queue的事件(clickHandler)一直到執行堆的任務完成(3秒)之後才會執行，要等三秒函式完成並且清空execution stacks，才會跑Event Queue內的click事件。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">waitThreeSeconds</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> ms = <span class="keyword">new</span> <span class="built_in">Date</span>().getTime() + <span class="number">3000</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span> (<span class="keyword">new</span> <span class="built_in">Date</span>() &lt; ms) &#123;&#125;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;finished function&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">clickHandler</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;click event!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.addEventListener(<span class="string">&quot;click&quot;</span>, clickHandler);</span><br><span class="line"></span><br><span class="line">waitThreeSeconds();</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;finished execution&quot;</span>);</span><br></pre></td></tr></table></figure><h1 id="Conceptual-Aside-4"><a href="#Conceptual-Aside-4" class="headerlink" title="Conceptual Aside"></a>Conceptual Aside</h1><h2 id="靜態型別-Static-Typing"><a href="#靜態型別-Static-Typing" class="headerlink" title="靜態型別(Static Typing)"></a>靜態型別(Static Typing)</h2><p>常用在Java或是C#<br>代表必須在一開始就告訴編譯器目前使用的變數是甚麼型別</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">bool isNew = <span class="string">&quot;hello&quot;</span>; </span><br><span class="line"></span><br><span class="line"><span class="comment">// 前方就指示型別</span></span><br><span class="line"><span class="comment">// 明顯這邊會報錯因為&#x27;Hello&#x27;是字串不是布林值</span></span><br></pre></td></tr></table></figure><h2 id="動態型別-Dynamic-Typing"><a href="#動態型別-Dynamic-Typing" class="headerlink" title="動態型別(Dynamic Typing)"></a>動態型別(Dynamic Typing)</h2><p>意味著你不需告訴JS引擎你使用的變數型別(字串、數字、布林值等等)，當程式執行時它會自己做辨識</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> isNew = <span class="literal">true</span>; <span class="comment">//不會報錯</span></span><br><span class="line">isNew = <span class="string">&#x27;yup!&#x27;</span>;</span><br><span class="line">isNew = <span class="number">1</span>;</span><br></pre></td></tr></table></figure><h2 id="型別-Types-And-Javascirpt"><a href="#型別-Types-And-Javascirpt" class="headerlink" title="型別(Types And Javascirpt)"></a>型別(Types And Javascirpt)</h2><h3 id="純值-Primitive-Types"><a href="#純值-Primitive-Types" class="headerlink" title="純值(Primitive Types)"></a>純值(Primitive Types)</h3><ul><li>是一種資料型態並且只代表一個值意味著不是物件</li></ul><ol><li>undefined</li></ol><ul><li>是所有變數的初始值</li><li>代表其值還尚未存在(千萬不要設到變裡)</li><li>會一直保持undefined直到你給變數設定值為止</li></ul><ol start="2"><li>null</li></ol><ul><li>代表其值”不存在”為空(可以設到變數裡)</li></ul><ol start="3"><li>Boolean</li></ol><ul><li>代表true or false其中一種可能</li></ul><ol start="4"><li>number</li></ol><ul><li>在JS中只有一種數字型態number(其他語言不是這樣可能有整數或其他類型)</li><li>它是一種浮點數代表後面總會有小數位</li><li>會讓數學在JS裡面比較奇怪</li></ul><ol start="5"><li>string</li></ol><ul><li>一連串的文字並且使用單引號或是雙引號包裹住</li><li>Es6可以使用<code>(``)</code>包裹住文字並且使用變數在裡面</li></ul><ol start="6"><li>symbol</li></ol><ul><li>使用在ES6中尚未被全部瀏覽器支援</li><li>在後面的bouns課程會講解</li></ul><h1 id="Conceptual-Aside-5"><a href="#Conceptual-Aside-5" class="headerlink" title="Conceptual Aside"></a>Conceptual Aside</h1><h2 id="運算子-Operators"><a href="#運算子-Operators" class="headerlink" title="運算子(Operators)"></a>運算子(Operators)</h2><ul><li>是種特殊的function並且在語法、寫法上都不一樣</li><li>一般來說運算子取兩個參數並且返回一個結果</li></ul><h3 id="範例-4"><a href="#範例-4" class="headerlink" title="範例"></a>範例</h3><p>(+)加號運算子 做代表(-,&gt;,&lt;,% 這些也是一樣)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">3</span> + <span class="number">4</span>;</span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br></pre></td></tr></table></figure><p>實際上 (+)的部分是是一個函式:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> +(<span class="params">a,b</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a+b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是我們要呼叫函式不是應該這樣寫嗎?</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">3</span> + <span class="number">4</span>;</span><br><span class="line"></span><br><span class="line">+(<span class="number">3</span>,<span class="number">4</span>);</span><br></pre></td></tr></table></figure><p>不過太惱人了對嗎? 還好JS提供了<strong>中綴表示法 (Infix notation)</strong></p><p>讓我們可以把呼叫的部分寫在參數中間，讓程式看起來更人性化</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span>+<span class="number">4</span></span><br></pre></td></tr></table></figure><h1 id="運算子的優先性與相依姓-Operator-Precedence-and-Associativity"><a href="#運算子的優先性與相依姓-Operator-Precedence-and-Associativity" class="headerlink" title="運算子的優先性與相依姓(Operator Precedence and Associativity)"></a>運算子的優先性與相依姓(Operator Precedence and Associativity)</h1><h2 id="運算子的優先性"><a href="#運算子的優先性" class="headerlink" title="運算子的優先性"></a>運算子的優先性</h2><ul><li>代表哪個運算子會被優先使用</li><li>當同一行程式有不只一個運算子時，函式會依序被呼叫</li><li>具備高優先性的運算子優先運算</li></ul><h2 id="運算子的相依姓"><a href="#運算子的相依姓" class="headerlink" title="運算子的相依姓"></a>運算子的相依姓</h2><ul><li>當優先順序都相同時才會使用到相依姓</li><li>代表運算子被呼叫的順序</li><li>左到右、右到左</li></ul><h2 id="範例-5"><a href="#範例-5" class="headerlink" title="範例"></a>範例</h2><ul><li>從下圖可以理解 *(乘號)的優先序高於 +(加號)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">3</span> + <span class="number">4</span> * <span class="number">5</span>;</span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br><span class="line"></span><br><span class="line"><span class="comment">// a 為23</span></span><br></pre></td></tr></table></figure><p>擷取自mdn<br><img src="https://i.imgur.com/8UTEPpN.png"></p><ul><li>grouping - ()</li></ul><p>相依姓最高的運算子，會優先計算括號內部的運算子</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = (<span class="number">3</span> + <span class="number">4</span>) * <span class="number">5</span>;</span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br><span class="line"></span><br><span class="line"><span class="comment">// a為35</span></span><br></pre></td></tr></table></figure><p>擷取自mdn<br><img src="https://i.imgur.com/duIO03J.png"></p><p><a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Operators/Operator_Precedence">運算子優先序參考 - MDN</a></p><h2 id="範例二-1"><a href="#範例二-1" class="headerlink" title="範例二"></a>範例二</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">2</span>, b =<span class="number">3</span>, c=<span class="number">4</span>;</span><br><span class="line"></span><br><span class="line">a = b = c;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br><span class="line"><span class="built_in">console</span>.log(b);</span><br><span class="line"><span class="built_in">console</span>.log(c);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 結果 4, 4, 4</span></span><br></pre></td></tr></table></figure><ul><li>印出結果都是四，因為他們都是相同的運算子具有相同的相同的優先性所以必須使用相依姓來處理，因此以MDN網站上的結果顯示必須從右到左執行</li><li>a = b = c, 會先處理右邊的 等號(=) 所以會這樣執行:<br>a = (b=c)，必須先求出b=c，因c = 4，所以b = 4，外面則 a = 4</li></ul><p><img src="https://i.imgur.com/rg1yoF9.png"></p><h1 id="Conceptual-Aside-6"><a href="#Conceptual-Aside-6" class="headerlink" title="Conceptual Aside"></a>Conceptual Aside</h1><h2 id="強制轉型-Coercion"><a href="#強制轉型-Coercion" class="headerlink" title="強制轉型(Coercion)"></a>強制轉型(Coercion)</h2><ul><li> 轉換一個值從一個形態到另一個<br>(ex.你可能有的Number類型別被轉換成String)</li><li> 在JS很常發生因為其為動態型別</li></ul><h2 id="隱性-vs-顯性-Implicit-vs-explicit-coercion"><a href="#隱性-vs-顯性-Implicit-vs-explicit-coercion" class="headerlink" title="隱性 vs. 顯性 (Implicit vs. explicit coercion)"></a>隱性 vs. 顯性 (Implicit vs. explicit coercion)</h2><h3 id="顯性-explicit"><a href="#顯性-explicit" class="headerlink" title="顯性(explicit)"></a>顯性(explicit)</h3><p>會直接顯示出要轉換的型別</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Number</span>(value)</span><br></pre></td></tr></table></figure><h3 id="隱性-implicit"><a href="#隱性-implicit" class="headerlink" title="隱性(implicit)"></a>隱性(implicit)</h3><p>當指派運算子時:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> == <span class="literal">null</span>, <span class="number">2</span>/’<span class="number">5</span><span class="string">&#x27;, null + new Date()</span></span><br></pre></td></tr></table></figure><p>當被轉換成boolean時:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (value) &#123;…&#125;</span><br><span class="line"><span class="string">``</span><span class="string">``</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 三種強制轉換(Three types of conversion)</span><br><span class="line"></span><br><span class="line">純值以及物件都只會有這三種轉換但是它們工作方式不太一樣</span><br><span class="line"></span><br><span class="line">* to string</span><br><span class="line">* to boolean</span><br><span class="line">* to number</span><br><span class="line"></span><br><span class="line">### 解釋純值轉型(Type coercion for primitives)</span><br><span class="line"></span><br><span class="line">#### String conversion</span><br><span class="line"></span><br><span class="line">* 顯性使用 <span class="built_in">String</span>()函式直接轉換成字串</span><br><span class="line">* 隱性使用 (+) 做轉換成字串，當兩個運算元(operand)有一方為字串就會觸發轉換成字串</span><br><span class="line"></span><br><span class="line"><span class="string">``</span><span class="string">`javascript=</span></span><br><span class="line"><span class="string">String(123) // explicit</span></span><br><span class="line"><span class="string">123 + &#x27;&#x27;    // implicit</span></span><br></pre></td></tr></table></figure><ul><li>所有的純值都可以被轉換成字串</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">String</span>(<span class="number">123</span>)                   <span class="comment">// &#x27;123&#x27;</span></span><br><span class="line"><span class="built_in">String</span>(-<span class="number">12.3</span>)                 <span class="comment">// &#x27;-12.3&#x27;</span></span><br><span class="line"><span class="built_in">String</span>(<span class="literal">null</span>)                  <span class="comment">// &#x27;null&#x27;</span></span><br><span class="line"><span class="built_in">String</span>(<span class="literal">undefined</span>)             <span class="comment">// &#x27;undefined&#x27;</span></span><br><span class="line"><span class="built_in">String</span>(<span class="literal">true</span>)                  <span class="comment">// &#x27;true&#x27;</span></span><br><span class="line"><span class="built_in">String</span>(<span class="literal">false</span>)                 <span class="comment">// &#x27;false&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>Symbol 比較特別只能使用顯性的coercion</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">String</span>(<span class="built_in">Symbol</span>(<span class="string">&#x27;my symbol&#x27;</span>))   <span class="comment">// &#x27;Symbol(my symbol)&#x27;</span></span><br><span class="line"><span class="string">&#x27;&#x27;</span> + <span class="built_in">Symbol</span>(<span class="string">&#x27;my symbol&#x27;</span>)      <span class="comment">// TypeError is thrown</span></span><br></pre></td></tr></table></figure><ul><li>Symbol 使用所有數學運算子都會報錯</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">let uid &#x3D; Symbol.for(&quot;uid&quot;),</span><br><span class="line">    sum &#x3D; uid &#x2F; 1;            &#x2F;&#x2F; error!</span><br></pre></td></tr></table></figure><p><a href="https://leanpub.com/understandinges6/read/#leanpub-auto-symbol-coercion">Symbol coercion - 參考</a></p><h4 id="Boolean-conversion"><a href="#Boolean-conversion" class="headerlink" title="Boolean conversion"></a>Boolean conversion</h4><ul><li>顯性的使用<code>Boolean()</code></li><li>隱性的必須使用在邏輯運算子的環境下或是被邏輯運算子直接影響</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Boolean</span>(<span class="number">2</span>)          <span class="comment">// explicit</span></span><br><span class="line"><span class="keyword">if</span> (<span class="number">2</span>) &#123; ... &#125;      <span class="comment">// implicit due to logical context</span></span><br><span class="line">!!<span class="number">2</span>                 <span class="comment">// implicit due to logical operator</span></span><br><span class="line"><span class="number">2</span> || <span class="string">&#x27;hello&#x27;</span>        <span class="comment">// implicit due to logical operator</span></span><br></pre></td></tr></table></figure><ul><li>需要注意的是 ||以及&amp;&amp;運算子它們是會返回運算元的值的也就是不會返回true or false</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 返回123而不是true</span></span><br><span class="line"><span class="comment">// &#x27;hello&#x27; and 123 在內部依舊是布林值來計算這個表達式</span></span><br><span class="line"><span class="keyword">let</span> x = <span class="string">&#x27;hello&#x27;</span> &amp;&amp; <span class="number">123</span>;   <span class="comment">// x === 123</span></span><br></pre></td></tr></table></figure><ul><li>下方列表以外的值都是返回true</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Boolean</span>(<span class="string">&#x27;&#x27;</span>)           <span class="comment">// false</span></span><br><span class="line"><span class="built_in">Boolean</span>(<span class="number">0</span>)            <span class="comment">// false     </span></span><br><span class="line"><span class="built_in">Boolean</span>(-<span class="number">0</span>)           <span class="comment">// false</span></span><br><span class="line"><span class="built_in">Boolean</span>(<span class="literal">NaN</span>)          <span class="comment">// false</span></span><br><span class="line"><span class="built_in">Boolean</span>(<span class="literal">null</span>)         <span class="comment">// false</span></span><br><span class="line"><span class="built_in">Boolean</span>(<span class="literal">undefined</span>)    <span class="comment">// false</span></span><br><span class="line"><span class="built_in">Boolean</span>(<span class="literal">false</span>)        <span class="comment">// false</span></span><br></pre></td></tr></table></figure><ul><li>物件、陣列、Symbol、Date、自定義function都會返回true</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Boolean</span>(&#123;&#125;)             <span class="comment">// true</span></span><br><span class="line"><span class="built_in">Boolean</span>([])             <span class="comment">// true</span></span><br><span class="line"><span class="built_in">Boolean</span>(<span class="built_in">Symbol</span>())       <span class="comment">// true</span></span><br><span class="line">!!<span class="built_in">Symbol</span>()              <span class="comment">// true</span></span><br><span class="line"><span class="built_in">Boolean</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;)  <span class="comment">// true</span></span><br></pre></td></tr></table></figure><h4 id="Numeric-conversion"><a href="#Numeric-conversion" class="headerlink" title="Numeric conversion"></a>Numeric conversion</h4><ul><li>顯性的使用<code>Number()</code>函式</li></ul><p>隱性的比較麻煩有多種觸發方式:</p><ul><li>使用比較運算子(&gt;, &lt;, &lt;=,&gt;=)</li><li>使用位元算子( | &amp; ^ ~)</li><li>算數運算子 (- + * / % )(注意當+包含的運算元有字串時會轉成字串)</li><li>單一使用+運算子</li><li>使用(==,!=)(注意當兩邊運算元都是字串時不會觸發數字轉型)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Number</span>(<span class="string">&#x27;123&#x27;</span>)   <span class="comment">// explicit</span></span><br><span class="line">+<span class="string">&#x27;123&#x27;</span>          <span class="comment">// implicit</span></span><br><span class="line"><span class="number">123</span> != <span class="string">&#x27;456&#x27;</span>    <span class="comment">// implicit</span></span><br><span class="line"><span class="number">4</span> &gt; <span class="string">&#x27;5&#x27;</span>         <span class="comment">// implicit</span></span><br><span class="line"><span class="number">5</span>/<span class="literal">null</span>          <span class="comment">// implicit</span></span><br><span class="line"><span class="literal">true</span> | <span class="number">0</span>        <span class="comment">// implicit</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Number</span>(<span class="literal">null</span>)                   <span class="comment">// 0</span></span><br><span class="line"><span class="built_in">Number</span>(<span class="literal">undefined</span>)              <span class="comment">// NaN</span></span><br><span class="line"><span class="built_in">Number</span>(<span class="literal">true</span>)                   <span class="comment">// 1</span></span><br><span class="line"><span class="built_in">Number</span>(<span class="literal">false</span>)                  <span class="comment">// 0</span></span><br><span class="line"><span class="built_in">Number</span>(<span class="string">&quot; 12 &quot;</span>)                 <span class="comment">// 12</span></span><br><span class="line"><span class="built_in">Number</span>(<span class="string">&quot;-12.34&quot;</span>)               <span class="comment">// -12.34</span></span><br><span class="line"><span class="built_in">Number</span>(<span class="string">&quot;\n&quot;</span>)                   <span class="comment">// 0</span></span><br><span class="line"><span class="built_in">Number</span>(<span class="string">&quot; 12s &quot;</span>)                <span class="comment">// NaN</span></span><br><span class="line"><span class="built_in">Number</span>(<span class="number">123</span>)                    <span class="comment">// 123</span></span><br></pre></td></tr></table></figure><ul><li>跳脫字元的部分如果內含不是數字則顯示NaN，為空則顯示0</li><li>null, undefined比較特別需要特別記憶</li><li>Symbols不能轉換為Number會直接報錯<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Number</span>(<span class="string">&quot;\n&quot;</span>)                   <span class="comment">// 0</span></span><br><span class="line"><span class="built_in">Number</span>(<span class="literal">null</span>)                   <span class="comment">// 0</span></span><br><span class="line"><span class="built_in">Number</span>(<span class="literal">undefined</span>)              <span class="comment">// NaN</span></span><br><span class="line">+sym or sym | <span class="number">0</span>                <span class="comment">// TypeError</span></span><br></pre></td></tr></table></figure></li></ul><p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#symbol_type_conversions">Symbol type conversions -MDN</a></p><ul><li>當== 應用到null, undefined時數字轉換不會進行</li><li>null = null, null = undefined但不等於0</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">null</span> == <span class="number">0</span>               <span class="comment">// false, null is not converted to 0</span></span><br><span class="line"><span class="literal">null</span> == <span class="literal">null</span>            <span class="comment">// true</span></span><br><span class="line"><span class="literal">undefined</span> == <span class="literal">undefined</span>  <span class="comment">// true</span></span><br><span class="line"><span class="literal">null</span> == <span class="literal">undefined</span>       <span class="comment">// true</span></span><br></pre></td></tr></table></figure><ul><li>NaN不等於任何東西連自己都不等於</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (value !== value) &#123; <span class="built_in">console</span>.log(<span class="string">&quot;we&#x27;re dealing with NaN here&quot;</span>) &#125;</span><br><span class="line"></span><br><span class="line"><span class="literal">NaN</span> === <span class="literal">NaN</span></span><br><span class="line"><span class="comment">// return false</span></span><br></pre></td></tr></table></figure><h3 id="解釋物件轉型-Type-coercion-for-objects"><a href="#解釋物件轉型-Type-coercion-for-objects" class="headerlink" title="解釋物件轉型(Type coercion for objects)"></a>解釋物件轉型(Type coercion for objects)</h3><h4 id="傳換成Boolean值"><a href="#傳換成Boolean值" class="headerlink" title="傳換成Boolean值"></a>傳換成Boolean值</h4><ul><li>非純值的值都會轉成true</li><li>物件、陣列、空都會返回true</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Boolean</span>([<span class="literal">NaN</span>])</span><br><span class="line"><span class="built_in">Boolean</span>([<span class="number">123</span>])</span><br><span class="line"><span class="built_in">Boolean</span>([<span class="string">&#x27;123&#x27;</span>])</span><br><span class="line"><span class="built_in">Boolean</span>([<span class="literal">false</span>])</span><br><span class="line"><span class="built_in">Boolean</span>([<span class="literal">undefined</span>])</span><br><span class="line"></span><br><span class="line"><span class="built_in">Boolean</span>(&#123;<span class="literal">NaN</span>&#125;)</span><br><span class="line"><span class="built_in">Boolean</span>(&#123;<span class="number">123</span>:<span class="number">123</span>&#125;)</span><br><span class="line"><span class="built_in">Boolean</span>(&#123;<span class="string">&#x27;123&#x27;</span>:<span class="number">123</span>&#125;)</span><br><span class="line"><span class="built_in">Boolean</span>(&#123;<span class="literal">undefined</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//全部輸出都為true</span></span><br></pre></td></tr></table></figure><h4 id="轉換成Number-String"><a href="#轉換成Number-String" class="headerlink" title="轉換成Number, String"></a>轉換成Number, String</h4><ul><li>物件會轉為純值藉由內部的<code>[[ToPrimitive]]</code>方法</li><li><code>ToPrimitive(input, PreferredType?)</code>(PreferredType可以為Number or String)</li><li>使用<code>valueOf</code> 、<code>toString</code> </li></ul><p>一般來說演算法如下:</p><ol><li>如果input已經是純值則直接返回</li><li>呼叫input.toString() 如果結果是純值則返回</li><li>呼叫input.valueOf() 如果解果是純值則返回</li><li>都不是則產出TypeError</li></ol><ul><li>字串轉型 先呼叫 toString() 隨後 valueOf() </li><li>數字轉型 先呼叫 valueOf() 隨後 toString()</li></ul><p>過程是這樣的：</p><p>一個物件 obj 透過呼叫 ToPrimitive(obj, Number) 轉換成原始型別，接著在使用 ToNumber() 取得最後的結果</p><p>一個物件 obj 透過調用 ToPrimitive(obj, String) 轉換為原始型別，然後 ToString() 取得最後結果</p><ul><li>可以觀察這個實作理解其觸發順序:<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">  valueOf: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;valueOf&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> &#123;&#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  toString: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;toString&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> &#123;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">Number</span>(obj); <span class="comment">// 先印valueOf, 在接toString</span></span><br><span class="line"><span class="built_in">String</span>(obj); <span class="comment">// 先印toString, 在接valueOf</span></span><br></pre></td></tr></table></figure></li></ul><ul><li>大多數的build-in type方法不包含<code>valueOf()</code>或是會返回this.object(也就是會把同樣的元素回傳)然而並不是純值而被忽略，所以數字或是字串轉型可能都會返回呼叫<code>toString()</code>的內容<br>舉例:<br><img src="https://i.imgur.com/1Xcp7FK.png"></li></ul><h4 id="loose-equality-這兩個運算子有特別之處"><a href="#loose-equality-這兩個運算子有特別之處" class="headerlink" title="loose equality(==), (+)這兩個運算子有特別之處"></a>loose equality(==), (+)這兩個運算子有特別之處</h4><ul><li>大多數的情況當這兩個運算子出現時都會預設使用Number 轉換</li><li>除了Date()<br>預設Date()會出現現在時間的字串<br><img src="https://i.imgur.com/yDrcFGu.png"></li></ul><h2 id="小練習"><a href="#小練習" class="headerlink" title="小練習"></a>小練習</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">true</span> + <span class="literal">false</span>             <span class="comment">// 1</span></span><br><span class="line"><span class="number">12</span> / <span class="string">&quot;6&quot;</span>                 <span class="comment">// 2</span></span><br><span class="line"><span class="string">&quot;number&quot;</span> + <span class="number">15</span> + <span class="number">3</span>        <span class="comment">// &#x27;number153&#x27;</span></span><br><span class="line"><span class="number">15</span> + <span class="number">3</span> + <span class="string">&quot;number&quot;</span>        <span class="comment">// &#x27;18number&#x27;</span></span><br><span class="line">[<span class="number">1</span>] &gt; <span class="literal">null</span>               <span class="comment">// true</span></span><br><span class="line"><span class="string">&quot;foo&quot;</span> + + <span class="string">&quot;bar&quot;</span>          <span class="comment">// &#x27;fooNaN&#x27;</span></span><br><span class="line"><span class="string">&#x27;true&#x27;</span> == <span class="literal">true</span>           <span class="comment">// false</span></span><br><span class="line"><span class="literal">false</span> == <span class="string">&#x27;false&#x27;</span>         <span class="comment">// false</span></span><br><span class="line"><span class="literal">null</span> == <span class="string">&#x27;&#x27;</span>               <span class="comment">// false</span></span><br><span class="line">!!<span class="string">&quot;false&quot;</span> == !!<span class="string">&quot;true&quot;</span>    <span class="comment">// true</span></span><br><span class="line">[<span class="string">&#x27;x&#x27;</span>] == <span class="string">&#x27;x&#x27;</span>             <span class="comment">// true </span></span><br><span class="line">[] + <span class="literal">null</span> + <span class="number">1</span>            <span class="comment">// &#x27;null1&#x27;</span></span><br><span class="line">[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>] == [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]       <span class="comment">// false</span></span><br><span class="line">&#123;&#125;+[]+&#123;&#125;+[<span class="number">1</span>]             <span class="comment">// &#x27;0[object Object]1&#x27;</span></span><br><span class="line">!+[]+[]+![]              <span class="comment">// &#x27;truefalse&#x27;</span></span><br><span class="line"><span class="keyword">new</span> <span class="built_in">Date</span>(<span class="number">0</span>) - <span class="number">0</span>          <span class="comment">// 0</span></span><br><span class="line"><span class="keyword">new</span> <span class="built_in">Date</span>(<span class="number">0</span>) + <span class="number">0</span>          <span class="comment">// &#x27;Thu Jan 01 1970 02:00:00(EET)0&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="題目解題"><a href="#題目解題" class="headerlink" title="題目解題"></a>題目解題</h3><ul><li>true + false             // 1</li></ul><p>使用 + 運算子會轉換成Numbe轉換<br>true = 1<br>false = 0</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">true</span> + <span class="literal">false</span></span><br><span class="line">==&gt; <span class="number">1</span> + <span class="number">0</span></span><br><span class="line">==&gt; <span class="number">1</span></span><br></pre></td></tr></table></figure><ul><li>12 / “6”                 // 2</li></ul><p>算數運算子 / 會轉換成Number轉換</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">12</span> / <span class="string">&#x27;6&#x27;</span></span><br><span class="line">==&gt; <span class="number">12</span> / <span class="number">6</span></span><br><span class="line">==&gt;&gt; <span class="number">2</span></span><br></pre></td></tr></table></figure><ul><li>“number” + 15 + 3        // ‘number153’</li></ul><p>(+) 運算子的相依姓是由左自右</p><ol><li>所以這邊會先處理”number” + 15</li><li>因為+號兩側有字串直接轉成字串”number15”</li><li>在來處理 “number15” + 3 =&gt; “number153”</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">“number” + <span class="number">15</span> + <span class="number">3</span> </span><br><span class="line">==&gt; <span class="string">&quot;number15&quot;</span> + <span class="number">3</span> </span><br><span class="line">==&gt; <span class="string">&quot;number153&quot;</span></span><br></pre></td></tr></table></figure><ul><li>15 + 3 + “number”        // ‘18number’</li></ul><ol><li>15+3 這邊就正常運算</li><li>18+’number’因為有字串所以就變成’18number’</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">15</span> + <span class="number">3</span> + <span class="string">&quot;number&quot;</span> </span><br><span class="line">==&gt; <span class="number">18</span> + <span class="string">&quot;number&quot;</span> </span><br><span class="line">==&gt; <span class="string">&quot;18number&quot;</span></span><br></pre></td></tr></table></figure><ul><li>[1] &gt; null //true</li></ul><p>比較運算子(&gt;)會觸發Number轉換</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">1</span>] &gt; <span class="literal">null</span></span><br><span class="line">==&gt; <span class="string">&#x27;1&#x27;</span> &gt; <span class="number">0</span></span><br><span class="line">==&gt; <span class="number">1</span> &gt; <span class="number">0</span></span><br><span class="line">==&gt; <span class="literal">true</span></span><br></pre></td></tr></table></figure><ul><li>“foo” + + “bar”   //“fooNaN”</li></ul><ol><li>單位元的 (+)運算子的優先級高於二進制(+)</li><li>故+”bar” 先處理 因為轉型Number後內容物不是number故產出NaN</li><li>跟”foo”串接觸發字串轉換故結果為”fooNaN”</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;foo&quot;</span> + + <span class="string">&quot;bar&quot;</span> </span><br><span class="line">==&gt; <span class="string">&quot;foo&quot;</span> + (+<span class="string">&quot;bar&quot;</span>) </span><br><span class="line">==&gt; <span class="string">&quot;foo&quot;</span> + <span class="literal">NaN</span> </span><br><span class="line">==&gt; <span class="string">&quot;fooNaN&quot;</span></span><br></pre></td></tr></table></figure><ul><li>‘true’ == true  //false</li><li>false == ‘false’    //false</li></ul><ol><li>== 運算子觸發Number轉換</li><li>‘true’ 轉換成Number轉換 因內容不是數字因此為NaN</li><li>布林值 true的部分轉換成數字為1/ false為0</li><li>所以他們不相等</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;true&#x27;</span> == <span class="literal">true</span></span><br><span class="line">==&gt; <span class="literal">NaN</span> == <span class="number">1</span></span><br><span class="line">==&gt; <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="literal">false</span> == <span class="string">&#x27;false&#x27;</span>   </span><br><span class="line">==&gt; <span class="number">0</span> == <span class="literal">NaN</span></span><br><span class="line">==&gt; <span class="literal">false</span></span><br></pre></td></tr></table></figure><ul><li>null == ‘’   //false</li></ul><p>Null比較特別</p><ul><li>當== 應用到null, undefined時數字轉換不會進行</li><li>null = null, null = undefined但不等於0</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">null</span> == <span class="string">&#x27;&#x27;</span></span><br><span class="line">==&gt; <span class="literal">false</span></span><br></pre></td></tr></table></figure><ul><li>!!”false” == !!”true” //true</li><li>兩個驚嘆號代表如果內容為true則會顯示true</li><li>一般字串沒有為空的話是會顯示true的</li><li>下面是會顯示false的範例:</li></ul><ol><li>null;</li><li>NaN;</li><li>0;</li><li>empty string (“” or ‘’ or ``);</li><li>undefined.</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">!!<span class="string">&quot;false&quot;</span> == !!<span class="string">&quot;true&quot;</span>  </span><br><span class="line">==&gt; <span class="literal">true</span> == <span class="literal">true</span></span><br><span class="line">==&gt; <span class="literal">true</span></span><br></pre></td></tr></table></figure><ul><li>[‘x’] == ‘x’   //true</li></ul><ol><li>== 觸發Number轉換</li><li>[‘x’].valueOf()會得出他自己[“x”] 這並不是純值所以不會返回結果</li><li>故使用toString()得到”x”因此相等</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">&#x27;x&#x27;</span>] == <span class="string">&#x27;x&#x27;</span>  </span><br><span class="line">==&gt; <span class="string">&#x27;x&#x27;</span> == <span class="string">&#x27;x&#x27;</span></span><br><span class="line">==&gt;  <span class="literal">true</span></span><br></pre></td></tr></table></figure><ul><li>[] + null + 1    // ‘null1’</li></ul><ol><li>(+)號運算子觸發Number轉換給[]</li><li>然而陣列做Number轉換後因為陣列做<code>valueOf()</code>得出自己不是純值無法返回</li><li>因此使用<code>toString()</code>空陣列轉為’’空字串</li><li>‘’ 空字串出現在 (+)運算子中所以變成’null’+1 在得出結果’null1’</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[] + <span class="literal">null</span> + <span class="number">1</span>  </span><br><span class="line">==&gt;  <span class="string">&#x27;&#x27;</span> + <span class="literal">null</span> + <span class="number">1</span>  </span><br><span class="line">==&gt;  <span class="string">&#x27;null&#x27;</span> + <span class="number">1</span>  </span><br><span class="line">==&gt; <span class="string">&#x27;null1&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>0 || “0” &amp;&amp; {}     //{}</li></ul><ol><li>邏輯運算子會轉換運算元為布林值(內部)但會返回原本的值</li><li>0為false, “0”字串為true因為不為空, 空物件為true</li><li>|| 運算子只要有false則取其左邊的值，&amp;&amp; 運算子如果運算元都為true取右邊的值故為{}</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span> || <span class="string">&quot;0&quot;</span> &amp;&amp; &#123;&#125;  </span><br><span class="line">==&gt;  (<span class="number">0</span> || <span class="string">&quot;0&quot;</span>) &amp;&amp; &#123;&#125;</span><br><span class="line">==&gt; (<span class="literal">false</span> || <span class="literal">true</span>) &amp;&amp; <span class="literal">true</span>  <span class="comment">// internally</span></span><br><span class="line">==&gt; <span class="string">&quot;0&quot;</span> &amp;&amp; &#123;&#125;</span><br><span class="line">==&gt; <span class="literal">true</span> &amp;&amp; <span class="literal">true</span>             <span class="comment">// internally</span></span><br><span class="line">==&gt; &#123;&#125;</span><br></pre></td></tr></table></figure><ul><li>[1,2,3] == [1,2,3]   /false</li></ul><ol><li>不需要強制轉型因為兩邊的型別一樣</li><li>==會確認物件的id然而兩個array是不同的instance,id一定不同所以答出false</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>] == [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">==&gt;  <span class="literal">false</span></span><br></pre></td></tr></table></figure><ul><li>{}+[]+{}+[1] //‘0[object Object]1’</li></ul><ol><li>(+)觸發Number轉型(但是因為物件以及陣列都會切換成toString())從最左邊開始轉換</li><li>第一個{}轉換成””(透過toString())但因為沒有+在前面轉換成數字所以先不理</li><li>+[]會轉換成0</li><li>{}會轉換成字串’[object Object]’</li><li>[1]toString()會變成’1’</li><li>最後做字串串接得出’0[object Object]1’<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#125;+[]+&#123;&#125;+[<span class="number">1</span>]</span><br><span class="line">==&gt; +[]+&#123;&#125;+[<span class="number">1</span>]</span><br><span class="line">==&gt; <span class="number">0</span> + &#123;&#125; + [<span class="number">1</span>]</span><br><span class="line">==&gt; <span class="number">0</span> + <span class="string">&#x27;[object Object]&#x27;</span> + [<span class="number">1</span>]</span><br><span class="line">==&gt; <span class="string">&#x27;0[object Object]&#x27;</span> + [<span class="number">1</span>]</span><br><span class="line">==&gt; <span class="string">&#x27;0[object Object]&#x27;</span> + <span class="string">&#x27;1&#x27;</span></span><br><span class="line">==&gt; <span class="string">&#x27;0[object Object]1&#x27;</span></span><br></pre></td></tr></table></figure></li></ol><ul><li>!+[]+[]+![]    //‘truefalse’</li></ul><ol><li>驚嘆號邏輯運算子優先權大於(+)</li><li>故有驚嘆號的地方先處理(!+[]) + [] + (![])</li><li>!+[] =&gt; !=false, +[] = 0 = false ,兩個false則為true</li><li>![] =&gt; []為true, 故得出false</li><li>[] =&gt; 做Number轉後轉成’’</li><li>三個串起來’truefalse’</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">!+[]+[]+![]  </span><br><span class="line">==&gt; (!+[]) + [] + (![])</span><br><span class="line">==&gt; !<span class="number">0</span> + [] + <span class="literal">false</span></span><br><span class="line">==&gt; <span class="literal">true</span> + [] + <span class="literal">false</span></span><br><span class="line">==&gt; <span class="literal">true</span> + <span class="string">&#x27;&#x27;</span> + <span class="literal">false</span></span><br><span class="line">==&gt; <span class="string">&#x27;truefalse&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>new Date(0) - 0 //0</li></ul><p>new Date(0).valueOf()會取得毫秒</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="built_in">Date</span>(<span class="number">0</span>) - <span class="number">0</span></span><br><span class="line">==&gt; <span class="number">0</span> - <span class="number">0</span></span><br><span class="line">==&gt; <span class="number">0</span></span><br></pre></td></tr></table></figure><ul><li>new Date(0) + 0 //‘Thu Jan 01 1970 02:00:00 GMT+0200 (EET)0’</li></ul><ol><li>new Date(0) 會出字串</li><li>把0做String轉型</li><li>串接得出答案’Thu Jan 01 1970 02:00:00 GMT+0200 (EET)0’</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="built_in">Date</span>(<span class="number">0</span>) + <span class="number">0</span></span><br><span class="line">==&gt; <span class="string">&#x27;Thu Jan 01 1970 02:00:00 GMT+0200 (EET)&#x27;</span> + <span class="number">0</span></span><br><span class="line">==&gt; <span class="string">&#x27;Thu Jan 01 1970 02:00:00 GMT+0200 (EET)0&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="本篇參考來源"><a href="#本篇參考來源" class="headerlink" title="本篇參考來源:"></a>本篇參考來源:</h2><p><a href="https://www.freecodecamp.org/news/js-type-coercion-explained-27ba3d9a2839/">JavaScript type coercion explained</a></p><h1 id="比較運算子-Comparison-Operators"><a href="#比較運算子-Comparison-Operators" class="headerlink" title="比較運算子(Comparison Operators)"></a>比較運算子(Comparison Operators)</h1><h2 id="範例-6"><a href="#範例-6" class="headerlink" title="範例"></a>範例</h2><ul><li>兩個範例的優先順序都是一樣的(畢竟符號都一樣)</li><li>故比較的是相依姓(&lt;)，(&gt;)排序是由左至右</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="number">1</span>&lt;<span class="number">2</span>&lt;<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 結果得出 true</span></span><br></pre></td></tr></table></figure><p>第一題處理:</p><ol><li>1&lt;2 會得到 true, 接著處理true&lt;3</li><li>比較運算子會做Number強制轉型 true轉型為數字為1<img src="https://i.imgur.com/gw7Dkeg.png"></li><li>故1&lt;3 為true</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="number">3</span>&lt;<span class="number">2</span>&lt;<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 結果得出 true</span></span><br></pre></td></tr></table></figure><p>第二題處理:</p><ol><li>3&lt;2 會得到 false, 接著處理false&lt;1</li><li>比較運算子會做Number強制轉型 false轉型為數字為0 <img src="https://i.imgur.com/9vLEghi.png"></li><li>故0&lt;1 為true</li></ol><h2 id="null-undefined-是特別的"><a href="#null-undefined-是特別的" class="headerlink" title="null, undefined 是特別的"></a>null, undefined 是特別的</h2><ul><li><p>當== 應用到null, undefined時數字轉換不會進行</p></li><li><p>null = null, null = undefined但不等於0</p></li><li><p>雖然使用Number()函式來取得數值 null有取得0，undefined取得NaN但是還是不能應用在(==)<br><img src="https://i.imgur.com/tzWiWI3.png"></p></li><li><p>不過null&lt;1是得出true <img src="https://i.imgur.com/JxDpW2I.png"></p></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">null</span> == <span class="literal">null</span>            <span class="comment">// true</span></span><br><span class="line"><span class="literal">undefined</span> == <span class="literal">undefined</span>  <span class="comment">// true</span></span><br><span class="line"><span class="literal">null</span> == <span class="literal">undefined</span>       <span class="comment">// true</span></span><br></pre></td></tr></table></figure><p>但是當情況越演越烈:</p><p>這樣強制型別轉換會讓程式碼難以預期，於是我們往下介紹**(===)Strict Equality**</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">null</span>&lt;<span class="number">1</span> <span class="comment">// tru</span></span><br><span class="line"><span class="string">&quot;&quot;</span> == <span class="number">0</span> <span class="comment">//true</span></span><br><span class="line"><span class="string">&quot;&quot;</span> == <span class="literal">false</span> <span class="comment">// true</span></span><br></pre></td></tr></table></figure><h2 id="Strict-Equality"><a href="#Strict-Equality" class="headerlink" title="(===)Strict Equality"></a>(===)Strict Equality</h2><p>這個符號他不會強制轉換型別，如果運算元型別不同就會直接跑false</p><p><img src="https://i.imgur.com/PqvIMJD.png"></p><h2 id="作者建議-1"><a href="#作者建議-1" class="headerlink" title="作者建議"></a>作者建議</h2><ul><li>大多數的時間使用 (===)Strict Equality</li><li>除非你真的需要強制轉型來做一些功能不然不要輕易使用(==)</li><li>作者推薦文章 <a href="http://www-lia.deis.unibo.it/materiale/JS/developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness.html">內含(==, ===)比對表格 MDN</a></li></ul><h1 id="存在以及布林值-Existence-and-Booleans"><a href="#存在以及布林值-Existence-and-Booleans" class="headerlink" title="存在以及布林值(Existence and Booleans)"></a>存在以及布林值(Existence and Booleans)</h1><ul><li>如果我們試著轉化null, undefined,”” 成布林值都會取得false</li><li>因此可以利用這個狀況使用if判斷式來尋找是否變數存在於內容之中<br>如果a存在的話則印出console.log()的內容</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a; <span class="comment">// a is undefined</span></span><br><span class="line"><span class="keyword">if</span> (a) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;Something is there.&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="預設值-Default-Values"><a href="#預設值-Default-Values" class="headerlink" title="預設值(Default Values)"></a>預設值(Default Values)</h1><p>如果我們使用這個函式並且不輸入參數會發生什麼事呢?</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">greet</span>(<span class="params">name</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&#x27;Hello&#x27;</span> + name);</span><br><span class="line">&#125;</span><br><span class="line">greet();</span><br></pre></td></tr></table></figure><p>會印出Helloundefined，因為變數在這邊沒有被指定的情況下，預設值就會是undefined，然後碰上(+)運算子只要前方有字串就會把純值undefined轉換成字串因此得出這個結果<br><img src="https://i.imgur.com/sGylF11.png"></p><p>但我們可以這樣寫讓這個預設值更有功能性:</p><ul><li>使用 or 運算子</li><li>因為or運算子的優先級高於 (=)所以右邊會先處理</li><li>當name為undeined時因為or運算子會回傳true的結果也就是’Your name here’</li><li>當name不為undefined時就立即回傳，因為當兩邊都為ture時會回傳左側</li><li>唯一例外則為使用 0 因為 0 會回傳false</li><li>最後記得ES6有新的方法可以做參考使用</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">greet</span>(<span class="params">name</span>) </span>&#123;</span><br><span class="line">   name = name || <span class="string">&#x27;Your name here&#x27;</span>;</span><br><span class="line">   <span class="built_in">console</span>.log(<span class="string">&#x27;Hello&#x27;</span> + name);</span><br><span class="line">&#125;</span><br><span class="line">greet(<span class="string">&#x27;Joan&#x27;</span>);</span><br></pre></td></tr></table></figure><h1 id="框架小叮嚀-Framework-Aside"><a href="#框架小叮嚀-Framework-Aside" class="headerlink" title="框架小叮嚀(Framework Aside)"></a>框架小叮嚀(Framework Aside)</h1><p>想像一種情況當我們要使用複數個框架或是函式庫時，其中的變數名稱重複了，這時候撰寫位置於下方的程式會複寫上方的:</p><p>以下方的範例舉例的話，Lib2的變數內容會取代Lib1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src&#x3D;&quot;Lib1.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;Lib2.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;app.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>所以常常會看到函式庫使用預設值來避免這種被取代的現象發生:</p><ul><li>如果變數已經存在(libraryName)則會使用現有的library的變數，如果沒有則使用Lib2</li><li>這樣的使用預設值的方式就是在檢查全域命名空間(global namespace)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.libraryName = <span class="built_in">window</span>.libraryName || <span class="string">&quot;Lib2&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;The-Weird-Part-Of-Javascript-part-1&quot;&gt;&lt;a href=&quot;#The-Weird-Part-Of-Javascript-part-1&quot; class=&quot;headerlink&quot; title=&quot;The Weird Part Of Java</summary>
      
    
    
    
    <category term="Javascript" scheme="http://example.com/categories/Javascript/"/>
    
    
    <category term="Javascript" scheme="http://example.com/tags/Javascript/"/>
    
  </entry>
  
  <entry>
    <title>CSS-for beginner</title>
    <link href="http://example.com/2021/03/21/CSS-CSS%20for%20beginner/"/>
    <id>http://example.com/2021/03/21/CSS-CSS%20for%20beginner/</id>
    <published>2021-03-20T17:33:22.553Z</published>
    <updated>2021-03-21T18:21:59.438Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CSS-for-beginner"><a href="#CSS-for-beginner" class="headerlink" title="CSS for beginner"></a>CSS for beginner</h1><hr><h2 id="tags-HTML-CSS-relate"><a href="#tags-HTML-CSS-relate" class="headerlink" title="tags: HTML CSS relate"></a>tags: HTML CSS relate</h2><h6 id="tags-HTML-CSS"><a href="#tags-HTML-CSS" class="headerlink" title="tags: HTML, CSS"></a>tags: <code>HTML, CSS</code></h6><p>參考學習資源連結:<a href="https://www.htmldog.com/guides/css/beginner/">https://www.htmldog.com/guides/css/beginner/</a></p><p><strong>CSS(Cascading Styles Sheets) is a way to style and present HTML</strong></p><p>Cascading </p><p>其中一個含意是寫在下面的code會覆蓋掉上面的</p><p><img src="https://i.imgur.com/kLEaN8L.png"></p><p><img src="https://i.imgur.com/FEDJlV2.png"></p><hr><p>1.Inline CSS(幾乎不太用到)<br>An inline CSS is used to apply a unique “style” to <strong>a single HTML element</strong>.<br>**<br>An inline CSS <strong>uses the style attribute of an HTML element</strong>.</p><p>The following example sets the text color of the element to blue, and the text color of the element to red:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;h1 style&#x3D;&quot;color:blue;&quot;&gt;A Blue Heading&lt;&#x2F;h1&gt;</span><br><span class="line"></span><br><span class="line">&lt;p style&#x3D;&quot;color:red;&quot;&gt;A red paragraph.&lt;&#x2F;p&gt;</span><br></pre></td></tr></table></figure><hr><p>2.Internal CSS</p><p>An internal CSS is used to define a style for a <strong>single HTML page</strong>.</p><p>An internal CSS is <strong>defined in the head section of an HTML page</strong>, within a style element.</p><p>The following example sets the text color of ALL the h1 elements (on that page) to blue, and the text color of ALL the p elements to red. In addition, the page will be displayed with a “powderblue” background color: </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">body &#123;background-color: powderblue;&#125;</span><br><span class="line">h1   &#123;color: blue;&#125;</span><br><span class="line">p    &#123;color: red;&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;h1&gt;This is a heading&lt;&#x2F;h1&gt;</span><br><span class="line">&lt;p&gt;This is a paragraph.&lt;&#x2F;p&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><hr><p>3.External CSS(最重要的用法)</p><p>An external style sheet is used to define the style for <strong>many HTML pages</strong>.</p><p>To use an external style sheet, <strong>add a link to it in the head section of each HTML page</strong>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;styles.css&quot;&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;h1&gt;This is a heading&lt;&#x2F;h1&gt;</span><br><span class="line">&lt;p&gt;This is a paragraph.&lt;&#x2F;p&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h1 id="Selectors-Properties-and-Values"><a href="#Selectors-Properties-and-Values" class="headerlink" title="Selectors, Properties, and Values"></a>Selectors, Properties, and Values</h1><p>CSS選擇器的組成</p><p><img src="https://i.imgur.com/YjuuJlS.png"></p><p>Whereas HTML has tags, CSS has selectors. <strong>Selectors are the names given to styles in internal and external style sheets</strong>.</p><p>For each selector there are “<strong>properties</strong>” inside curly brackets, which simply take the form of words such as <strong>color, font-weight or background-color</strong>.</p><p>A <strong>value</strong> is given to the property following a colon (NOT an “equals” sign). Semi-colons are used to separate the properties.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">body &#123;</span><br><span class="line">    font-size: 14px;</span><br><span class="line">    color: navy;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="Lengths-and-Percentages"><a href="#Lengths-and-Percentages" class="headerlink" title="Lengths and Percentages"></a>Lengths and Percentages</h1><p>一些單位參考</p><p>px (such as font-size: 12px) is the unit for pixels.</p><p>em (such as font-size: 2em) is the unit for the calculated size of a font. So “2em”, for example, is two times the current font size.</p><p>pt (such as font-size: 12pt) is the unit for points, for measurements typically in printed media.</p><p>% (such as width: 80%) is the unit for percentages.</p><p>Other units include pc (picas), cm (centimeters), mm (millimeters) and in (inches).</p><p>When a value is zero, you do not need to state a unit. For example, if you wanted to specify no border, it would be border: 0.</p><hr><h1 id="Colors"><a href="#Colors" class="headerlink" title="Colors"></a>Colors</h1><p>CSS brings 16,777,216 colors to your disposal. They can take the form of a <strong>name</strong>(Ex.red), an <strong>RGB (255,0,0) value</strong> or a <strong>hex code</strong>(#f0000).</p><p>The following values, to specify full-on as red-as-red-can-be, all produce the same result:</p><p>a color name - like “red”<br>a HEX value - like “#ff0000”<br>an RGB value - like “rgb(255,0,0)”</p><p>吸色工具是可以很好模仿他人顏色的工具，或是從開發者瀏覽器工具裡面去看人家的程式碼使用甚麼顏色</p><p><strong>color and background-color</strong></p><p>Colors can be applied by using color and background-color</p><p>A blue background and yellow text could look like this:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">h1 &#123;</span><br><span class="line">    color: yellow;</span><br><span class="line">    background-color: blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="Text"><a href="#Text" class="headerlink" title="Text"></a>Text</h1><p>這邊的東西可以在開發者工具裡面檢視，多熟練開發者工具！</p><p>You can alter the size and shape of the text on a web page with a range of properties.</p><p><strong>font-family</strong></p><p>各種字體選擇使用它</p><p>This is the font itself, such as Times New Roman, Arial, or Verdana.</p><p><img src="https://i.imgur.com/sZOTIrA.png"></p><p>字形參考網站:<a href="https://fonts.google.com/">https://fonts.google.com/</a></p><p><strong>font-size</strong></p><p>Font size. Size of a font. Font? The size of it.(字體大小)</p><p><code>p &#123; font-size: 16px; &#125;</code></p><p><strong>font-weight</strong></p><p>Bold or light text.(粗體字跟淡體字)</p><p><code>.chubbybaby &#123; font-weight: bold; &#125;</code></p><p><strong>font-style</strong></p><p>Italic or oblique text.(斜體字)</p><p><code>.warning &#123; font-style: italic; &#125;</code></p><p><strong>text-decoration</strong></p><p>Underlined, overlined, and struck-through text.(底線、上斜線、刪除線)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.oldfangled a:hover &#123; text-decoration: none &#125;</span><br><span class="line"></span><br><span class="line">.newfangled a:hover &#123; text-decoration: underline overline line-through wavy #f99 &#125; </span><br></pre></td></tr></table></figure><p><strong>text-transform</strong></p><p>轉換大小寫</p><p>text-transform will change the case of the text.</p><p>Converts the case of letters — to uppercase, lowercase, or capitalized.</p><p><code>h1 &#123; text-transform: uppercase; &#125;</code></p><h1 id="Text-spacing"><a href="#Text-spacing" class="headerlink" title="Text spacing"></a>Text spacing</h1><p>The <strong>letter-spacing</strong> and <strong>word-spacing</strong> properties are for <strong>spacing between letters or words</strong>. The value can be a length or normal.(字母以及單字間的空白)</p><p>The <strong>line-height</strong> property sets the height of the lines in an element, such as a paragraph, without adjusting the size of the font. It can be a number (which specifies a multiple of the font size, so “2” will be two times the font size, for example), a length, a percentage, or normal.(行高)</p><p>The <strong>text-align</strong> property will align the text inside an element to left, right, center, or justify.(文字置中偏左偏又等等)</p><p>The <strong>text-indent</strong> property will indent the first line of a paragraph, for example, to a given length or percentage. This is a style traditionally used in print, but rarely in digital media such as the web.(常用在印刷品少用在網頁，例如寫作文開頭要空幾個字下來)</p><hr><h1 id="Margins-and-Padding"><a href="#Margins-and-Padding" class="headerlink" title="Margins and Padding"></a>Margins and Padding</h1><p>A <strong>margin</strong> is the space outside something, whereas <strong>padding</strong> is the space inside something.</p><ul><li><p>margin是指一個物件外面的空間</p></li><li><p>padding是指一個物件內裡的空間</p></li></ul><p>The four sides of an element can also be set individually. margin-top, margin-right, margin-bottom, margin-left, padding-top, padding-right, padding-bottom and padding-left are the self-explanatory properties you can use.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">h2 &#123;</span><br><span class="line">    font-size: 1.5em;</span><br><span class="line">    background-color: #ccc;</span><br><span class="line">    margin: 20px;</span><br><span class="line">    padding: 40px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="The-Box-Model"><a href="#The-Box-Model" class="headerlink" title="The Box Model"></a>The Box Model</h1><p>Margins, padding and borders are all part of what’s known as the Box Model. </p><p>The Box Model works like this: in the middle you have the content area (let’s say an image), surrounding that you have the padding, surrounding that you have the border and surrounding that you have the margin. It can be visually represented like this:</p><p><img src="https://i.imgur.com/AY0cGAQ.png"></p><h1 id="Borders"><a href="#Borders" class="headerlink" title="Borders"></a>Borders</h1><p>To make a border around an element, all you need is border-style. The values can be solid, dotted, dashed, double, groove, ridge, inset and outset.</p><p><img src="https://i.imgur.com/uyxOXNP.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">h2 &#123;</span><br><span class="line">    border-style: dashed;</span><br><span class="line">    border-width: 3px;</span><br><span class="line">    border-left-width: 10px;</span><br><span class="line">    border-right-width: 10px;</span><br><span class="line">    border-color: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;CSS-for-beginner&quot;&gt;&lt;a href=&quot;#CSS-for-beginner&quot; class=&quot;headerlink&quot; title=&quot;CSS for beginner&quot;&gt;&lt;/a&gt;CSS for beginner&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&quot;tags</summary>
      
    
    
    
    <category term="CSS" scheme="http://example.com/categories/CSS/"/>
    
    
    <category term="CSS" scheme="http://example.com/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>HTML-簡介</title>
    <link href="http://example.com/2021/03/21/HTML-HTML%E7%B0%A1%E4%BB%8B/"/>
    <id>http://example.com/2021/03/21/HTML-HTML%E7%B0%A1%E4%BB%8B/</id>
    <published>2021-03-20T17:30:10.008Z</published>
    <updated>2021-03-21T18:22:03.787Z</updated>
    
    <content type="html"><![CDATA[<h1 id="HTML簡介"><a href="#HTML簡介" class="headerlink" title="HTML簡介"></a>HTML簡介</h1><hr><h2 id="tags-HTML-CSS-relate"><a href="#tags-HTML-CSS-relate" class="headerlink" title="tags: HTML CSS relate"></a>tags: HTML CSS relate</h2><h6 id="tags-HTML-CSS"><a href="#tags-HTML-CSS" class="headerlink" title="tags: HTML, CSS"></a>tags: <code>HTML, CSS</code></h6><h2 id="他的程式架構"><a href="#他的程式架構" class="headerlink" title="他的程式架構"></a>他的程式架構</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;Hello Pages!!&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h1&gt;Hello pages!!&lt;&#x2F;h1&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="DOCTYPE-html"><a href="#DOCTYPE-html" class="headerlink" title="!DOCTYPE html"></a>!DOCTYPE html</h2><p>這個表示它們的類型</p><p>是HTML5，也是現行的大多數的瀏覽器都相容的格式</p><h2 id="html"><a href="#html" class="headerlink" title="html"></a>html</h2><p>被稱為根元素，基本上會把整個網站的內容包在裡面</p><h2 id="head"><a href="#head" class="headerlink" title="head"></a>head</h2><p>網頁的描述 EX.字元集、標題、縮圖</p><h2 id="title"><a href="#title" class="headerlink" title="title"></a>title</h2><p>網頁的標題</p><h2 id="charset"><a href="#charset" class="headerlink" title="charset"></a>charset</h2><p>一個資料格式</p><h2 id="body"><a href="#body" class="headerlink" title="body"></a>body</h2><p>網頁瀏覽器的眼前的內容，文字、圖片、影片都是</p><hr><h2 id="headings"><a href="#headings" class="headerlink" title="headings"></a>headings</h2><p>像是h1<del>h2</del>h3(數字越小字體越大)這些東西都是，有著各種粗體跟大小的字體會讓文字顯示在網頁上</p><p><code>&lt;h1&gt;&lt;/h1&gt;</code></p><p><img src="https://i.imgur.com/XeigVbl.png"></p><h2 id="paragarph-block元素"><a href="#paragarph-block元素" class="headerlink" title="paragarph(block元素)"></a>paragarph(block元素)</h2><p>段落，每個段落都會有個空間存在，他的文字不會都黏在一起</p><p><code>&lt;P&gt; &lt;/P&gt;</code></p><p><img src="https://i.imgur.com/pUvlW87.png"></p><hr><h2 id="img"><a href="#img" class="headerlink" title="img"></a>img</h2><p>這是代表圖片的標籤<br>如果中間也沒有文字的話可以為了節省時間變成這樣寫</p><p><code>&lt;img src=&quot;裡面可以放入圖片的位置/&gt;</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">這個是正常寫法</span><br><span class="line">&lt;img src&#x3D;&quot;裡面可以放入圖片的位置&gt;&lt;&#x2F;img&gt;</span><br></pre></td></tr></table></figure><h2 id="ul、li"><a href="#ul、li" class="headerlink" title="ul、li"></a>ul、li</h2><p>代表列表 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;UL&gt;</span><br><span class="line">    &lt;li&gt;中間輸入內容&lt;&#x2F;li&gt;</span><br><span class="line">    &lt;li&gt;中間輸入內容&lt;&#x2F;li&gt;</span><br><span class="line">&lt;&#x2F;UL&gt;</span><br></pre></td></tr></table></figure><h2 id="a"><a href="#a" class="headerlink" title="a"></a>a</h2><p>這個標籤可以代表網頁的超連結</p><p><code>&lt;a href=放入超連結的網址&gt;名稱如.GOOGLE&lt;/a&gt;</code></p><h2 id="table"><a href="#table" class="headerlink" title="table"></a>table</h2><p>代表表格 tr 裡面是那列的內容，td表示那一欄的內容</p><p>border=”1” 這個屬性會讓格線出現<br>width=”400” 這個屬性表示表格寬度<br>cellpadding=”5” 這個屬性代表表格框框內容的填塞(可以讓內容不那麼擁擠)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;table border&#x3D;&quot;1&quot; width&#x3D;&quot;400&quot; cellpadding&#x3D;&quot;5&quot;&gt;</span><br><span class="line">    &lt;tr&gt;這裡代表表格的第一列</span><br><span class="line">        &lt;td&gt;這邊是第一欄&lt;&#x2F;td&gt;</span><br><span class="line">    &lt;&#x2F;tr&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;tr&gt;這裡代表表格的第二列</span><br><span class="line">        &lt;td&gt;這邊是第一欄&lt;&#x2F;td&gt;</span><br><span class="line">    &lt;&#x2F;tr&gt;</span><br><span class="line">    </span><br></pre></td></tr></table></figure><hr><h2 id="b"><a href="#b" class="headerlink" title="b"></a>b</h2><p>這個標籤的功能是讓文字變成粗體字</p><p><code>&lt;b&gt;中間放入要變粗體字的內容&lt;/b&gt;</code></p><p>u 這個標籤的功能是給文字加入底線</p><p><code>&lt;u&gt;中間放入要加入底線的內容&lt;/u&gt;</code></p><p>兩個功能合併的話可以又粗體又底線</p><p><code>&lt;u&gt;&lt;b&gt;中間放入要加入又粗體又底線的內容&lt;/b&gt;&lt;/u&gt;</code></p><hr><h2 id="hr"><a href="#hr" class="headerlink" title="hr"></a>hr</h2><p>這個標籤的功能是加入斜線區格</p><p>因為這個功能常常中間是沒有文字的，就可以把後面那個<code>&lt;/hr&gt;</code>整個去掉變成<code>&lt;hr/&gt;</code><br>這樣可以代替並節省時間</p><p><code>&lt;hr&gt;&lt;/hr&gt;</code></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;HTML簡介&quot;&gt;&lt;a href=&quot;#HTML簡介&quot; class=&quot;headerlink&quot; title=&quot;HTML簡介&quot;&gt;&lt;/a&gt;HTML簡介&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&quot;tags-HTML-CSS-relate&quot;&gt;&lt;a href=&quot;#tags-HTML-CS</summary>
      
    
    
    
    <category term="HTML" scheme="http://example.com/categories/HTML/"/>
    
    
    <category term="HTML" scheme="http://example.com/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>Bootstrap 5-First Look</title>
    <link href="http://example.com/2021/03/21/Bootstrap-Bootstrap%205%20-%20First%20Look/"/>
    <id>http://example.com/2021/03/21/Bootstrap-Bootstrap%205%20-%20First%20Look/</id>
    <published>2021-03-20T17:22:07.626Z</published>
    <updated>2021-03-21T18:21:52.566Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Bootstrap-5-First-Look"><a href="#Bootstrap-5-First-Look" class="headerlink" title="Bootstrap 5 - First Look"></a>Bootstrap 5 - First Look</h1><hr><h2 id="tags-HTML-CSS-Bootstrap-relate"><a href="#tags-HTML-CSS-Bootstrap-relate" class="headerlink" title="tags: HTML CSS Bootstrap relate"></a>tags: HTML CSS Bootstrap relate</h2><h6 id="tags-HTML-CSS-Bootstrap"><a href="#tags-HTML-CSS-Bootstrap" class="headerlink" title="tags: HTML, CSS, Bootstrap"></a>tags: <code>HTML, CSS, Bootstrap</code></h6><h1 id="bootstrap-5-特色"><a href="#bootstrap-5-特色" class="headerlink" title="bootstrap 5 特色"></a>bootstrap 5 特色</h1><h2 id="官方文件的更新與改進"><a href="#官方文件的更新與改進" class="headerlink" title="官方文件的更新與改進"></a>官方文件的更新與改進</h2><p>新的外觀<br>Customization新增更多解釋<br>增加v4版本 主題的頁數以及新增內容<br>新增npm project</p><h2 id="擴充color-palette"><a href="#擴充color-palette" class="headerlink" title="擴充color palette"></a>擴充color palette</h2><p><img src="https://i.imgur.com/y2VfRW8.png"></p><h2 id="不需要再引入jQuery"><a href="#不需要再引入jQuery" class="headerlink" title="不需要再引入jQuery"></a>不需要再引入jQuery</h2><ul><li>JS的插件依舊支援</li><li>減少檔案大小</li><li>不支援IE瀏覽器</li></ul><h2 id="CSS-custom-properties"><a href="#CSS-custom-properties" class="headerlink" title="CSS custom properties"></a>CSS custom properties</h2><p><img src="https://i.imgur.com/27ThtQm.png"></p><h2 id="升級Forms"><a href="#升級Forms" class="headerlink" title="升級Forms"></a>升級Forms</h2><ul><li>更多自主化設定的空間</li><li>文件的部分新增內容</li><li>重新設計form controls</li></ul><h2 id="強化Grid-system"><a href="#強化Grid-system" class="headerlink" title="強化Grid system"></a>強化Grid system</h2><ul><li>新的格式xxl tier</li><li>.gutter class被修改</li><li>form layout 被新的grid system取代</li><li>新增vertical class</li><li>column不再預設position:relative</li></ul><h2 id="新增icon-library"><a href="#新增icon-library" class="headerlink" title="新增icon-library"></a>新增icon-library</h2><p><a href="https://icons.getbootstrap.com/">取用位置</a></p><h1 id="啟用bootstrap-5"><a href="#啟用bootstrap-5" class="headerlink" title="啟用bootstrap 5"></a>啟用bootstrap 5</h1><h2 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h2><p><strong>使用連結嵌入網址:</strong><br>缺點客製化能力比較差</p><p><a href="%5B%E5%8F%96%E7%94%A8%E4%BD%8D%E7%BD%AE%5D(https://icons.getbootstrap.com/)">網址</a></p><p><img src="https://i.imgur.com/9DaDKUc.png"></p><p><strong>使用npm:</strong></p><p>客製化能力比較好</p><p>這邊會下載到最新版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i bootstrap@next</span><br></pre></td></tr></table></figure><p>下載icon library</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i bootstrap-icons</span><br></pre></td></tr></table></figure><p>裝好之後我們看到這邊<br><img src="https://i.imgur.com/I33IubM.png"></p><p>引入js的檔案<br><img src="https://i.imgur.com/C3kwixS.png"></p><p>所有可用的icons<br><img src="https://i.imgur.com/m779H3T.png"></p><p>引入sass的關鍵檔案<br><img src="https://i.imgur.com/bE2CTiT.png"></p><h2 id="推薦使用插件"><a href="#推薦使用插件" class="headerlink" title="推薦使用插件"></a>推薦使用插件</h2><p>live sass compiler</p><p>如果有使用live server(基本上一定有這個必裝)<br>一鍵開關watch功能</p><p><img src="https://i.imgur.com/JcJHf6d.png"></p><p><img src="https://i.imgur.com/RZ2grSP.png"></p><p>到vscode裡面做設定<br>點擊json設定檔</p><p><img src="https://i.imgur.com/pawih09.png"></p><p>設定檔案存檔路徑以及不產生source map</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&quot;liveSassCompile.settings.formats&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;format&quot;: &quot;compressed&quot;,</span><br><span class="line">      &quot;extensionName&quot;: &quot;.css&quot;,</span><br><span class="line">      &quot;savePath&quot;: &quot;&#x2F;css&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  &quot;liveSassCompile.settings.generateMap&quot;: false</span><br></pre></td></tr></table></figure><p>設立資料夾如下<br><img src="https://i.imgur.com/v5SIVHu.png"></p><p>在main.scss引入bootstap.scss<br><img src="https://i.imgur.com/mjam0ly.png"></p><p>會把所有的scss元素轉換成css使用</p><p>點擊watch Sass後就可以開始專案摟!<br><img src="https://i.imgur.com/JcJHf6d.png"></p><p><img src="https://i.imgur.com/nGAydGK.png"></p><h1 id="專案內容"><a href="#專案內容" class="headerlink" title="專案內容"></a>專案內容</h1><p>專案圖示<br><img src="https://i.imgur.com/mG0HCTV.png"></p><p>簡單的製作登入頁面(無功能)</p><h2 id="客製化"><a href="#客製化" class="headerlink" title="客製化"></a>客製化</h2><p>針對顏色 客製化</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$primary: #401f7c;</span><br><span class="line">$secondary: #f4f4f4;</span><br></pre></td></tr></table></figure><p>針對border 客製化</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$border-radius:0;</span><br><span class="line">$border-radius-sm:0;</span><br><span class="line">$border-radius-lg:0;</span><br></pre></td></tr></table></figure><p>針對utilities 客製化</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; Utilities</span><br><span class="line">$utilities:() !default;</span><br><span class="line">$utilities:map-merge((&#39;input-padding&#39;:(property:padding,</span><br><span class="line">            class:ip,</span><br><span class="line">            values:(0:0,</span><br><span class="line">                1:0.3rem,</span><br><span class="line">                2:0.5rem,</span><br><span class="line">                3:0.7rem,</span><br><span class="line">                4:0.9rem,</span><br><span class="line">                5:1rem,</span><br><span class="line">            ),</span><br><span class="line">        )),</span><br><span class="line">    $utilities);</span><br></pre></td></tr></table></figure><h2 id="html"><a href="#html" class="headerlink" title="html"></a>html</h2><h3 id="body"><a href="#body" class="headerlink" title="body"></a>body</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;body class&#x3D;&quot;d-flex text-center bg-secondary&quot;&gt;</span><br></pre></td></tr></table></figure><p>直接使用flexbox並且文字置中並設定背景顏色</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">d-flex &#x3D; display : flex </span><br><span class="line">text-center</span><br><span class="line">bg-secondary &#x3D; backgroup-color : $secondary</span><br></pre></td></tr></table></figure><h3 id="logo"><a href="#logo" class="headerlink" title="logo"></a>logo</h3><p>則直接取用icon-library</p><p><code>src=&quot;/bs5-landingpage/scss/node_modules/bootstrap-icons/icons/bootstrap.svg&quot;</code></p><p>並且使用<code>mb-4</code>增加下方一點空間</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.mb-4 &#123;</span><br><span class="line">  margin-bottom: $spacer * 1.5 !important;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="h1"><a href="#h1" class="headerlink" title="h1"></a>h1</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;h1 class&#x3D;&quot;h3 mb-3 font-weight-normal&quot;&gt;Bootstrap 5 Login&lt;&#x2F;h1&gt;</span><br></pre></td></tr></table></figure><p>重新設定為h3</p><p>字體設定<code>font-weight-normal</code></p><p>也可以縮寫成 <code>fw-normal</code></p><h3 id="label"><a href="#label" class="headerlink" title="label"></a>label</h3><p><code>sr-only</code> screen-reader(幫助聽障人士使用對畫面不影響)</p><h3 id="input"><a href="#input" class="headerlink" title="input"></a>input</h3><p><code>form-control</code> 不加大小的話則為預設</p><p>form-control的樣板<br><img src="https://i.imgur.com/znnj3CG.png"></p><p>ip-3 在上方使用自訂的工具</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; Utilities</span><br><span class="line">$utilities:() !default;</span><br><span class="line">$utilities:map-merge((&#39;input-padding&#39;:(property:padding,</span><br><span class="line">            class:ip,</span><br><span class="line">            values:(0:0,</span><br><span class="line">                1:0.3rem,</span><br><span class="line">                2:0.5rem,</span><br><span class="line">                3:0.7rem,</span><br><span class="line">                4:0.9rem,</span><br><span class="line">                5:1rem,</span><br><span class="line">            ),</span><br><span class="line">        )),</span><br><span class="line">    $utilities);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type&#x3D;&quot;email&quot; id&#x3D;&quot;inputEmail&quot; class&#x3D;&quot;form-control mb-2 ip-3&quot; placeholder&#x3D;&quot;Email Address&quot; required</span><br><span class="line">            autofocus&gt;</span><br></pre></td></tr></table></figure><h3 id="btn"><a href="#btn" class="headerlink" title="btn"></a>btn</h3><p>btn樣板們<br><img src="https://i.imgur.com/wfM8nhO.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;button class&#x3D;&quot;btn btn-lg btn-primary btn-block&quot; type&#x3D;&quot;submit&quot;&gt;Login&lt;&#x2F;button&gt;</span><br></pre></td></tr></table></figure><h3 id="完整程式碼"><a href="#完整程式碼" class="headerlink" title="完整程式碼"></a>完整程式碼</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;body class&#x3D;&quot;d-flex text-center bg-secondary&quot;&gt;</span><br><span class="line">    &lt;form class&#x3D;&quot;form-login&quot;&gt;&lt;img src&#x3D;&quot;&#x2F;bs5-landingpage&#x2F;scss&#x2F;node_modules&#x2F;bootstrap-icons&#x2F;icons&#x2F;bootstrap.svg&quot;</span><br><span class="line">            height&#x3D;&quot;72&quot; width&#x3D;&quot;72&quot; class&#x3D;&quot;mb-4&quot;&gt;</span><br><span class="line">        &lt;h1 class&#x3D;&quot;h3 mb-3 font-weight-normal&quot;&gt;Bootstrap 5 Login&lt;&#x2F;h1&gt;</span><br><span class="line">        &lt;label for&#x3D;&quot;inpuEmail&quot; class&#x3D;&quot;sr-only&quot;&gt;Email Address&lt;&#x2F;label&gt;</span><br><span class="line"></span><br><span class="line">        &lt;input type&#x3D;&quot;email&quot; id&#x3D;&quot;inputEmail&quot; class&#x3D;&quot;form-control mb-2 ip-3&quot; placeholder&#x3D;&quot;Email Address&quot; required</span><br><span class="line">            autofocus&gt;</span><br><span class="line">        &lt;label for&#x3D;&quot;inputPassword&quot; class&#x3D;&quot;sr-only&quot;&gt;Password&lt;&#x2F;label&gt;</span><br><span class="line">        &lt;input type&#x3D;&quot;password&quot; id&#x3D;&quot;inputPassword&quot; class&#x3D;&quot;form-control mb-2&quot; placeholder&#x3D;&quot;Password&quot; required&gt;</span><br><span class="line"></span><br><span class="line">        &lt;div class&#x3D;&quot;checkbox mb-3&quot;&gt;</span><br><span class="line">            &lt;label&gt;</span><br><span class="line">                &lt;input type&#x3D;&quot;checkbox&quot; value&#x3D;&quot;remember-me&quot;&gt;Remember Me&lt;&#x2F;input&gt;</span><br><span class="line">            &lt;&#x2F;label&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;button class&#x3D;&quot;btn btn-lg btn-primary btn-block&quot; type&#x3D;&quot;submit&quot;&gt;Login&lt;&#x2F;button&gt;</span><br><span class="line">    &lt;&#x2F;form&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script src&#x3D;&quot;scss&#x2F;node_modules&#x2F;bootstrap&#x2F;dist&#x2F;js&#x2F;bootstrap.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;scss&#x2F;node_modules&#x2F;popper.js&#x2F;dist&#x2F;umd&#x2F;popper.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Bootstrap-5-First-Look&quot;&gt;&lt;a href=&quot;#Bootstrap-5-First-Look&quot; class=&quot;headerlink&quot; title=&quot;Bootstrap 5 - First Look&quot;&gt;&lt;/a&gt;Bootstrap 5 - Firs</summary>
      
    
    
    
    <category term="Bootstrap" scheme="http://example.com/categories/Bootstrap/"/>
    
    
    <category term="Bootstrap" scheme="http://example.com/tags/Bootstrap/"/>
    
  </entry>
  
  <entry>
    <title>Bootstrap 4-Responsive Website Design</title>
    <link href="http://example.com/2021/03/21/Bootstrap%204%20-%20Responsive%20Website%20Design/"/>
    <id>http://example.com/2021/03/21/Bootstrap%204%20-%20Responsive%20Website%20Design/</id>
    <published>2021-03-20T17:12:29.489Z</published>
    <updated>2021-03-21T18:21:40.362Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Bootstrap-4-Responsive-Website-Design"><a href="#Bootstrap-4-Responsive-Website-Design" class="headerlink" title="Bootstrap 4 - Responsive Website Design"></a>Bootstrap 4 - Responsive Website Design</h1><hr><h2 id="tags-HTML-CSS-Bootstrap-relate"><a href="#tags-HTML-CSS-Bootstrap-relate" class="headerlink" title="tags: HTML CSS Bootstrap relate"></a>tags: HTML CSS Bootstrap relate</h2><h6 id="tags-HTML-CSS-Bootstrap"><a href="#tags-HTML-CSS-Bootstrap" class="headerlink" title="tags: HTML, CSS, Bootstrap"></a>tags: <code>HTML, CSS, Bootstrap</code></h6><h1 id="製作一個-使用Bootstrap的網站"><a href="#製作一個-使用Bootstrap的網站" class="headerlink" title="製作一個 使用Bootstrap的網站"></a>製作一個 使用Bootstrap的網站</h1><h2 id="成品"><a href="#成品" class="headerlink" title="成品:"></a>成品:</h2><p><img src="https://i.imgur.com/8X5zcSP.png"></p><p><a href="https://chiehliu.github.io/git-projects/Bootstrap%202020%20Starter%20Files/index.html">成品網址</a></p><h2 id="成品功能"><a href="#成品功能" class="headerlink" title="成品功能:"></a>成品功能:</h2><ol><li>點擊漢堡會有下拉是選單跳出(並且可以開關)</li><li>中間有大圖呈現slide 效果並且點擊或是等待都可以讓slide移動</li><li>呈現一個三欄位/兩欄位的文章區塊</li><li>中間有圖片固定的區域並且點擊按鈕會有跳出視窗</li><li>插頭符號也可以跳出區塊顯示圖片</li><li>jumbotron 區域展示顏色變化以及一段文字及按鈕</li><li>最後是footer區域顯示social icon</li></ol><h1 id="介紹使用到的Bootstrap-4-元素"><a href="#介紹使用到的Bootstrap-4-元素" class="headerlink" title="介紹使用到的Bootstrap 4 元素"></a>介紹使用到的Bootstrap 4 元素</h1><h2 id="margin-padding"><a href="#margin-padding" class="headerlink" title="margin, padding"></a>margin, padding</h2><p>範例</p><p>使用 mr-lg-3<br>代表margin-right: 1rem並且breakpoint在lg</p><p><img src="https://i.imgur.com/KgbVswT.png"></p><h2 id="Navigation-區域"><a href="#Navigation-區域" class="headerlink" title="Navigation 區域"></a>Navigation 區域</h2><ul><li><p>container<br>這邊使用的是預設的版本，所有會有四個breadkpoint(觸發RWD的點)，並且置中</p></li><li><p>col-12<br>使用的是bootstrap內部的gird系統，主要分為12格，這邊這樣使用會有滿版的效果</p></li><li><p>text-right<br>讓文字往右，其中也有搭配RWD的作法，ex.使用text-lg-right 可以讓文字在lg的breadkpoint時取消文字定位</p></li><li><p>navbar<br>使用navbar系列的功能必須先使用這個關鍵字包覆住</p></li><li><p>bg-light<br>讓背景呈現淺色</p></li><li><p>navbar-light<br>讓文字配合淺色背景</p></li><li><p>navbar-expand-lg<br>讓navbar RWD的關鍵，不使用的話會預設滿版</p></li><li><p>navbar-brand<br>使用在公司名稱的部分或是logo</p></li></ul><ul><li>下拉式選單標準作法<br>button是漢堡的部分<br>collapse navbar-collapse的部分是會被隱藏的選單部分</li></ul><p><img src="https://i.imgur.com/BAAEHJn.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;button class&#x3D;&quot;navbar-toggler&quot;&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;span class&#x3D;&quot;navbar-toggler-icon&quot; type&#x3D;&quot;button&quot; data-toggle&#x3D;&quot;collapse&quot; data-target&#x3D;&quot;#navbarResponsive&quot;&gt;&lt;&#x2F;span&gt;</span><br><span class="line">&lt;&#x2F;button&gt;</span><br><span class="line"></span><br><span class="line">&lt;div class&#x3D;&quot;collapse navbar-collapse&quot; id&#x3D;&quot;navbarResponsive&quot;&gt;</span><br><span class="line">        &lt;ul class&#x3D;&quot;navbar-nav ml-auto&quot;&gt;</span><br><span class="line">          &lt;li class&#x3D;&quot;nav-item&quot;&gt;</span><br></pre></td></tr></table></figure><ul><li><p>ml-auto<br>使物件靠右</p></li><li><p>nav-item nav-link<br>在navbar中的物件使用</p></li></ul><h3 id="使用到的CSS"><a href="#使用到的CSS" class="headerlink" title="使用到的CSS"></a>使用到的CSS</h3><p>為了要蓋掉bootstrap原生的顏色要使用 <code>!important</code></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.nav-link</span> &#123;</span><br><span class="line">  <span class="comment">/* 加上驚嘆號去取代bootstrap內建的顏色 */</span></span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#5b5555</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.nav-link</span><span class="selector-class">.active</span>,</span><br><span class="line"><span class="selector-class">.nav-link</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#4981b3</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Carousel-區域"><a href="#Carousel-區域" class="headerlink" title="Carousel 區域"></a>Carousel 區域</h2><ul><li>必須安裝 util.js. 這包boostrap的內容才可以使用</li></ul><p>使用範例</p><p>data-interval的部分是 換張投影片的間隔時間(ms毫秒)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id&#x3D;&quot;carousel&quot; class&#x3D;&quot;carousel slide&quot; data-ride&#x3D;&quot;carousel&quot; data-interval&#x3D;&quot;6500&quot;&gt;</span><br></pre></td></tr></table></figure><ul><li><p>carousel-inner<br>針對投影片區域的圖片區域做包裹的動作</p></li><li><p>carousel-item<br>主要放在carousel-inner裡面，內部設置投影片的內容(圖片文字等等)，並且有active的item為預設值</p></li><li><p>carousel-caption<br>使用在幻燈片如果需要標題時可以嵌入</p></li><li><p>carousel-control-prev(next)<br>選取#carousel後嵌入範例即可使用<br>上一張/下一張 功能並且搭配fontawesome的箭頭作範例</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href&#x3D;&quot;#carousel&quot; class&#x3D;&quot;carousel-control-prev&quot; role&#x3D;&quot;button&quot; data-slide&#x3D;&quot;prev&quot;&gt;</span><br><span class="line">      &lt;span class&#x3D;&quot;fas fa-chevron-left fa-2x&quot;&gt;&lt;&#x2F;span&gt;</span><br><span class="line">&lt;&#x2F;a&gt;</span><br></pre></td></tr></table></figure><h2 id="Emoji-Navbar-區域"><a href="#Emoji-Navbar-區域" class="headerlink" title="Emoji Navbar 區域"></a>Emoji Navbar 區域</h2><p>這兩個區域點擊會觸發下面四個圖片的縮放</p><p><img src="https://i.imgur.com/DKVx8Sa.png"></p><p><img src="https://i.imgur.com/48hoY2E.png"></p><p>主要使用了</p><ul><li><p>a tag的部分<br>href部分抓取#emoji也就是要出現部分的id，並且使用<code>data-toggle=&quot;collapse&quot;</code></p></li><li><p>下方圖片toggle處 使用 class = collapse 以及設置id = emoji</p></li></ul><p>這部分比較特別的地方是插頭的部分在css選取器上，比較特別要去google inspect裡面看才知道</p><h2 id="fixed-img-內部的跳出視窗功能"><a href="#fixed-img-內部的跳出視窗功能" class="headerlink" title="fixed img 內部的跳出視窗功能"></a>fixed img 內部的跳出視窗功能</h2><p>點擊下方藍色跟紅色按鈕會出現的圖片<br><img src="https://i.imgur.com/eaIbItx.png"></p><p>使用modal做到跳出視窗的效果</p><ul><li><p>針對按鈕的部分加入<br><code>data-toggle=&quot;modal&quot; data-target=&quot;#modal1&quot;</code></p></li><li><p>跳出圖片的部分<br>設置被抓取的<code>id = modal1</code><br>並在內容處設置 <code>modal-dialog</code></p></li></ul><h2 id="Jumbotron-區域"><a href="#Jumbotron-區域" class="headerlink" title="Jumbotron 區域"></a>Jumbotron 區域</h2><p>一個簡單並且滿版的區域並且對內部文字按鈕有基本裝飾跟定位</p><ul><li>Jumbotron</li></ul><p><img src="https://i.imgur.com/14tTA2B.png"></p><h1 id="html程式碼"><a href="#html程式碼" class="headerlink" title="html程式碼:"></a>html程式碼:</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot; &#x2F;&gt;</span><br><span class="line">    &lt;meta</span><br><span class="line">      name&#x3D;&quot;viewport&quot;</span><br><span class="line">      content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0, viewport-fit&#x3D;cover&quot;</span><br><span class="line">    &#x2F;&gt;</span><br><span class="line">    &lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;ie&#x3D;edge&quot; &#x2F;&gt;</span><br><span class="line">    &lt;title&gt;HTML5 Website with Bootstrap | Responsive Website Design&lt;&#x2F;title&gt;</span><br><span class="line">    &lt;link rel&#x3D;&quot;shortcut icon&quot; href&#x3D;&quot;img&#x2F;favicon.ico&quot; &#x2F;&gt;</span><br><span class="line">    &lt;!-- Bootstrap 4.5 CSS --&gt;</span><br><span class="line">    &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;css&#x2F;bootstrap.min.css&quot; &#x2F;&gt;</span><br><span class="line">    &lt;!-- Style CSS --&gt;</span><br><span class="line">    &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;css&#x2F;style.css&quot; &#x2F;&gt;</span><br><span class="line">    &lt;!-- Google Fonts --&gt;</span><br><span class="line">    &lt;link</span><br><span class="line">      href&#x3D;&quot;https:&#x2F;&#x2F;fonts.googleapis.com&#x2F;css?family&#x3D;Montserrat:300,400,500,600,700&amp;display&#x3D;swap&quot;</span><br><span class="line">      rel&#x3D;&quot;stylesheet&quot;</span><br><span class="line">    &#x2F;&gt;</span><br><span class="line">  &lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;!-- Top Bar --&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;top-bar&quot;&gt;</span><br><span class="line">      &lt;div class&#x3D;&quot;container&quot;&gt;</span><br><span class="line">        &lt;!-- 這邊col-12代表延續整個頁面 --&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;col-12 text-right&quot;&gt;</span><br><span class="line">          &lt;!-- 因為bootstrap的關係 a 的文字會直接顯示藍色 --&gt;</span><br><span class="line">          &lt;p&gt;&lt;a href&#x3D;&quot;tel:+999123888&quot;&gt; Call us at 1 (800) HTML - CSS&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;!-- End Top Bar --&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- Navigation --&gt;</span><br><span class="line">    &lt;nav class&#x3D;&quot;navbar bg-light navbar-light navbar-expand-large&quot;&gt;</span><br><span class="line">      &lt;div class&#x3D;&quot;container&quot;&gt;</span><br><span class="line">        &lt;a href&#x3D;&quot;index.html&quot; class&#x3D;&quot;navbar-brand&quot;</span><br><span class="line">          &gt;&lt;img src&#x3D;&quot;img&#x2F;logo.png&quot; alt&#x3D;&quot;logo&quot; title&#x3D;&quot;logo&quot;</span><br><span class="line">        &#x2F;&gt;&lt;&#x2F;a&gt;</span><br><span class="line">        &lt;button class&#x3D;&quot;navbar-toggler&quot;&gt;</span><br><span class="line">          &lt;!-- 加入bootstarp js library讓漢堡選單可以使用 --&gt;</span><br><span class="line">          &lt;span</span><br><span class="line">            class&#x3D;&quot;navbar-toggler-icon&quot;</span><br><span class="line">            type&#x3D;&quot;button&quot;</span><br><span class="line">            data-toggle&#x3D;&quot;collapse&quot;</span><br><span class="line">            data-target&#x3D;&quot;#navbarResponsive&quot;</span><br><span class="line">          &gt;&lt;&#x2F;span&gt;</span><br><span class="line">        &lt;&#x2F;button&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;collapse navbar-collapse&quot; id&#x3D;&quot;navbarResponsive&quot;&gt;</span><br><span class="line">          &lt;ul class&#x3D;&quot;navbar-nav ml-auto&quot;&gt;</span><br><span class="line">            &lt;li class&#x3D;&quot;nav-item&quot;&gt;</span><br><span class="line">              &lt;a href&#x3D;&quot;index.html&quot; class&#x3D;&quot;nav-link active&quot;&gt;Home&lt;&#x2F;a&gt;</span><br><span class="line">            &lt;&#x2F;li&gt;</span><br><span class="line">            &lt;li class&#x3D;&quot;nav-item&quot;&gt;&lt;a href&#x3D;&quot;&quot; class&#x3D;&quot;nav-link&quot;&gt;About&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;</span><br><span class="line">            &lt;li class&#x3D;&quot;nav-item&quot;&gt;&lt;a href&#x3D;&quot;&quot; class&#x3D;&quot;nav-link&quot;&gt;Services&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;</span><br><span class="line">            &lt;li class&#x3D;&quot;nav-item&quot;&gt;&lt;a href&#x3D;&quot;&quot; class&#x3D;&quot;nav-link&quot;&gt;Projects&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;</span><br><span class="line">            &lt;li class&#x3D;&quot;nav-item&quot;&gt;&lt;a href&#x3D;&quot;&quot; class&#x3D;&quot;nav-link&quot;&gt;Contact Us&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;</span><br><span class="line">          &lt;&#x2F;ul&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;nav&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- End Navigation --&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- Image Carousel --&gt;</span><br><span class="line">    &lt;!-- 加入bootstarp js library讓slide可以動 --&gt;</span><br><span class="line">    &lt;div</span><br><span class="line">      id&#x3D;&quot;carousel&quot;</span><br><span class="line">      class&#x3D;&quot;carousel slide&quot;</span><br><span class="line">      data-ride&#x3D;&quot;carousel&quot;</span><br><span class="line">      data-interval&#x3D;&quot;6500&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;!-- Carousel Content --&gt;</span><br><span class="line">      &lt;div class&#x3D;&quot;carousel-inner&quot;&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;carousel-item active&quot;&gt;</span><br><span class="line">          &lt;!-- 這邊使用w-100會讓圖片吃到其父母層的100%寬度 --&gt;</span><br><span class="line">          &lt;img src&#x3D;&quot;img&#x2F;carousel&#x2F;1.jpg&quot; alt&#x3D;&quot;&quot; class&#x3D;&quot;w-100&quot; &#x2F;&gt;</span><br><span class="line">          &lt;div class&#x3D;&quot;carousel-caption&quot;&gt;</span><br><span class="line">            &lt;div class&#x3D;&quot;container&quot;&gt;</span><br><span class="line">              &lt;div class&#x3D;&quot;row justify-content-center&quot;&gt;</span><br><span class="line">                &lt;div class&#x3D;&quot;col-8 bg-custom d-none d-md-block py-3 px-0&quot;&gt;</span><br><span class="line">                  &lt;h1&gt;Bootstrap&lt;&#x2F;h1&gt;</span><br><span class="line">                  &lt;div class&#x3D;&quot;border-top border-primay w-50 mx-auto my-3&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">                  &lt;h3 class&#x3D;&quot;pb-3&quot;&gt;Complete Website Design&lt;&#x2F;h3&gt;</span><br><span class="line">                  &lt;a href&#x3D;&quot;#&quot; class&#x3D;&quot;btn btn-danger btn-lg mr-2&quot;&gt;View Demo&lt;&#x2F;a&gt;</span><br><span class="line">                  &lt;a href&#x3D;&quot;#&quot; class&#x3D;&quot;btn btn-primary btn-lg ml-2&quot;&gt;Start Now&lt;&#x2F;a&gt;</span><br><span class="line">                &lt;&#x2F;div&gt;</span><br><span class="line">              &lt;&#x2F;div&gt;</span><br><span class="line">            &lt;&#x2F;div&gt;</span><br><span class="line">          &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;div class&#x3D;&quot;carousel-item&quot;&gt;</span><br><span class="line">          &lt;img src&#x3D;&quot;img&#x2F;carousel&#x2F;2.jpg&quot; alt&#x3D;&quot;&quot; class&#x3D;&quot;w-100&quot; &#x2F;&gt;</span><br><span class="line">          &lt;div class&#x3D;&quot;carousel-caption&quot;&gt;</span><br><span class="line">            &lt;div class&#x3D;&quot;container&quot;&gt;</span><br><span class="line">              &lt;div class&#x3D;&quot;row justify-content-end text-right&quot;&gt;</span><br><span class="line">                &lt;div class&#x3D;&quot;col-5 bg-custom d-none d-lg-block py-3 px-0 pr-3&quot;&gt;</span><br><span class="line">                  &lt;!-- lead會使用font-weight&#x3D;300 --&gt;</span><br><span class="line">                  &lt;p class&#x3D;&quot;lead pb-3&quot;&gt;</span><br><span class="line">                    Lorem ipsum dolor sit amet consectetur.</span><br><span class="line">                  &lt;&#x2F;p&gt;</span><br><span class="line">                  &lt;a href&#x3D;&quot;#&quot; class&#x3D;&quot;btn btn-danger btn-lg mr-2&quot;&gt;See PHone&lt;&#x2F;a&gt;</span><br><span class="line">                &lt;&#x2F;div&gt;</span><br><span class="line">              &lt;&#x2F;div&gt;</span><br><span class="line">            &lt;&#x2F;div&gt;</span><br><span class="line">          &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;div class&#x3D;&quot;carousel-item&quot;&gt;</span><br><span class="line">          &lt;img src&#x3D;&quot;img&#x2F;carousel&#x2F;3.jpg&quot; alt&#x3D;&quot;&quot; class&#x3D;&quot;w-100&quot; &#x2F;&gt;</span><br><span class="line">          &lt;div class&#x3D;&quot;carousel-caption&quot;&gt;</span><br><span class="line">            &lt;div class&#x3D;&quot;container&quot;&gt;</span><br><span class="line">              &lt;div class&#x3D;&quot;row justify-content-center text-left&quot;&gt;</span><br><span class="line">                &lt;div class&#x3D;&quot;col-7 bg-custom d-none d-lg-block py-3 px-0 pl-3&quot;&gt;</span><br><span class="line">                  &lt;h3 class&#x3D;&quot;pb-3&quot;&gt;Lorem, ipsum dolor.&lt;&#x2F;h3&gt;</span><br><span class="line">                  &lt;p class&#x3D;&quot;lead&quot;&gt;</span><br><span class="line">                    Lorem ipsum, dolor sit amet consectetur adipisicing elit.</span><br><span class="line">                  &lt;&#x2F;p&gt;</span><br><span class="line">                  &lt;a href&#x3D;&quot;#&quot; class&#x3D;&quot;btn btn-primary btn-lg ml-2&quot;&gt;Start Now&lt;&#x2F;a&gt;</span><br><span class="line">                &lt;&#x2F;div&gt;</span><br><span class="line">              &lt;&#x2F;div&gt;</span><br><span class="line">            &lt;&#x2F;div&gt;</span><br><span class="line">          &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;!-- End Carousel Content --&gt;</span><br><span class="line"></span><br><span class="line">      &lt;!-- Previous &amp; Next Buttons --&gt;</span><br><span class="line">      &lt;a</span><br><span class="line">        href&#x3D;&quot;#carousel&quot;</span><br><span class="line">        class&#x3D;&quot;carousel-control-prev&quot;</span><br><span class="line">        role&#x3D;&quot;button&quot;</span><br><span class="line">        data-slide&#x3D;&quot;prev&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;span class&#x3D;&quot;fas fa-chevron-left fa-2x&quot;&gt;&lt;&#x2F;span&gt;</span><br><span class="line">      &lt;&#x2F;a&gt;</span><br><span class="line"></span><br><span class="line">      &lt;a</span><br><span class="line">        href&#x3D;&quot;#carousel&quot;</span><br><span class="line">        class&#x3D;&quot;carousel-control-next&quot;</span><br><span class="line">        role&#x3D;&quot;button&quot;</span><br><span class="line">        data-slide&#x3D;&quot;next&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;span class&#x3D;&quot;fas fa-chevron-right fa-2x&quot;&gt;&lt;&#x2F;span&gt;</span><br><span class="line">      &lt;&#x2F;a&gt;</span><br><span class="line">      &lt;!-- End Previous &amp; Next Buttons --&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;!-- End Image Carousel --&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- Main Page Heading --&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;col-12 text-center mt-5&quot;&gt;</span><br><span class="line">      &lt;h1 class&#x3D;&quot;text-dark pt-4&quot;&gt;Built With Ease&lt;&#x2F;h1&gt;</span><br><span class="line">      &lt;div class&#x3D;&quot;border-top border-primay w-25 mx-auto my-3&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">      &lt;p class&#x3D;&quot;lead&quot;&gt;Lorem ipsum, dolor sit amet consectetur adipisicing.&lt;&#x2F;p&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- Three Column Section --&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;container&quot;&gt;</span><br><span class="line">      &lt;div class&#x3D;&quot;row my-5&quot;&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;col-md-4 my-4&quot;&gt;</span><br><span class="line">          &lt;img src&#x3D;&quot;img&#x2F;1.jpg&quot; alt&#x3D;&quot;&quot; class&#x3D;&quot;w-100&quot; &#x2F;&gt;</span><br><span class="line">          &lt;h4 class&#x3D;&quot;my-4&quot;&gt;Lorem, ipsum.&lt;&#x2F;h4&gt;</span><br><span class="line">          &lt;p&gt;</span><br><span class="line">            Lorem ipsum dolor, sit amet consectetur adipisicing elit.</span><br><span class="line">            Aspernatur, iure!</span><br><span class="line">          &lt;&#x2F;p&gt;</span><br><span class="line"></span><br><span class="line">          &lt;a href&#x3D;&quot;#&quot; class&#x3D;&quot;btn btn-outline-dark btn-md&quot;&gt;Our Story&lt;&#x2F;a&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;div class&#x3D;&quot;col-md-4 my-4&quot;&gt;</span><br><span class="line">          &lt;img src&#x3D;&quot;img&#x2F;2.jpg&quot; alt&#x3D;&quot;&quot; class&#x3D;&quot;w-100&quot; &#x2F;&gt;</span><br><span class="line">          &lt;h4 class&#x3D;&quot;my-4&quot;&gt;Lorem, ipsum.&lt;&#x2F;h4&gt;</span><br><span class="line">          &lt;p&gt;</span><br><span class="line">            Lorem ipsum dolor, sit amet consectetur adipisicing elit.</span><br><span class="line">            Aspernatur, iure!</span><br><span class="line">          &lt;&#x2F;p&gt;</span><br><span class="line">          &lt;a href&#x3D;&quot;#&quot; class&#x3D;&quot;btn btn-outline-dark btn-md&quot;&gt;Our Story&lt;&#x2F;a&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;div class&#x3D;&quot;col-md-4 my-4&quot;&gt;</span><br><span class="line">          &lt;img src&#x3D;&quot;img&#x2F;3.jpg&quot; alt&#x3D;&quot;&quot; class&#x3D;&quot;w-100&quot; &#x2F;&gt;</span><br><span class="line">          &lt;h4 class&#x3D;&quot;my-4&quot;&gt;Lorem, ipsum.&lt;&#x2F;h4&gt;</span><br><span class="line">          &lt;p&gt;</span><br><span class="line">            Lorem ipsum dolor, sit amet consectetur adipisicing elit.</span><br><span class="line">            Aspernatur, iure!</span><br><span class="line">          &lt;&#x2F;p&gt;</span><br><span class="line">          &lt;a href&#x3D;&quot;#&quot; class&#x3D;&quot;btn btn-outline-dark btn-md&quot;&gt;Our Story&lt;&#x2F;a&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;!-- End Three Column Section --&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- Emoji Navbar First --&gt;</span><br><span class="line">    &lt;a</span><br><span class="line">      class&#x3D;&quot;navbar bg-primary sticky-top emoji&quot;</span><br><span class="line">      href&#x3D;&quot;#emoju&quot;</span><br><span class="line">      role&#x3D;&quot;button&quot;</span><br><span class="line">      data-toggle&#x3D;&quot;collapse&quot;</span><br><span class="line">    &gt;&lt;&#x2F;a&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- Start Fixed Background IMG --&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;fixed-background&quot;&gt;</span><br><span class="line">      &lt;div class&#x3D;&quot;row text-light py-5&quot;&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;col-12 text-center&quot;&gt;</span><br><span class="line">          &lt;h1&gt;Advance to Next Level&lt;&#x2F;h1&gt;</span><br><span class="line">          &lt;h3&gt;..see what&#39;s on the other side&lt;&#x2F;h3&gt;</span><br><span class="line">          &lt;!-- 這邊使用modal library可以達到跳出視窗的效果 --&gt;</span><br><span class="line">          &lt;button</span><br><span class="line">            type&#x3D;&quot;button&quot;</span><br><span class="line">            data-toggle&#x3D;&quot;modal&quot;</span><br><span class="line">            data-target&#x3D;&quot;#modal1&quot;</span><br><span class="line">            class&#x3D;&quot;btn btn-primary btn-lg mr-2&quot;</span><br><span class="line">          &gt;</span><br><span class="line">            Blue pill</span><br><span class="line">          &lt;&#x2F;button&gt;</span><br><span class="line">          &lt;button</span><br><span class="line">            type&#x3D;&quot;button&quot;</span><br><span class="line">            data-toggle&#x3D;&quot;modal&quot;</span><br><span class="line">            data-target&#x3D;&quot;#modal1&quot;</span><br><span class="line">            class&#x3D;&quot;btn btn-danger btn-lg ml-2&quot;</span><br><span class="line">          &gt;</span><br><span class="line">            Red pill</span><br><span class="line">          &lt;&#x2F;button&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;div class&#x3D;&quot;fixed-wrap&quot;&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;fixed&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;!-- End Fixed Background IMG --&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- Emoji Navbar Second --&gt;</span><br><span class="line">    &lt;a</span><br><span class="line">      class&#x3D;&quot;navbar bg-primary sticky-top emoji&quot;</span><br><span class="line">      href&#x3D;&quot;#emoji&quot;</span><br><span class="line">      role&#x3D;&quot;button&quot;</span><br><span class="line">      data-toggle&#x3D;&quot;collapse&quot;</span><br><span class="line">      &gt;&lt;i class&#x3D;&quot;fas fa-plug&quot;&gt;&lt;&#x2F;i</span><br><span class="line">    &gt;&lt;&#x2F;a&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;collapse&quot; id&#x3D;&quot;emoji&quot;&gt;</span><br><span class="line">      &lt;div class&#x3D;&quot;container&quot;&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;row&quot;&gt;</span><br><span class="line">          &lt;div class&#x3D;&quot;col-sm-6 col-md-3&quot;&gt;</span><br><span class="line">            &lt;img src&#x3D;&quot;img&#x2F;emoji&#x2F;panda.gif&quot; alt&#x3D;&quot;&quot; class&#x3D;&quot;w-100&quot; &#x2F;&gt;</span><br><span class="line">          &lt;&#x2F;div&gt;</span><br><span class="line">          &lt;div class&#x3D;&quot;col-sm-6 col-md-3&quot;&gt;</span><br><span class="line">            &lt;img src&#x3D;&quot;img&#x2F;emoji&#x2F;poo.gif&quot; alt&#x3D;&quot;&quot; class&#x3D;&quot;w-100&quot; &#x2F;&gt;</span><br><span class="line">          &lt;&#x2F;div&gt;</span><br><span class="line">          &lt;div class&#x3D;&quot;col-sm-6 col-md-3&quot;&gt;</span><br><span class="line">            &lt;img src&#x3D;&quot;img&#x2F;emoji&#x2F;unicorn.gif&quot; alt&#x3D;&quot;&quot; class&#x3D;&quot;w-100&quot; &#x2F;&gt;</span><br><span class="line">          &lt;&#x2F;div&gt;</span><br><span class="line">          &lt;div class&#x3D;&quot;col-sm-6 col-md-3&quot;&gt;</span><br><span class="line">            &lt;img src&#x3D;&quot;img&#x2F;emoji&#x2F;chicken.gif&quot; alt&#x3D;&quot;&quot; class&#x3D;&quot;w-100&quot; &#x2F;&gt;</span><br><span class="line">          &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;!-- Modal Popup --&gt;</span><br><span class="line">    &lt;!-- modal連接處 --&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;modal fade&quot; id&#x3D;&quot;modal1&quot;&gt;</span><br><span class="line">      &lt;div class&#x3D;&quot;modal-dialog&quot;&gt;</span><br><span class="line">        &lt;img src&#x3D;&quot;img&#x2F;emoji&#x2F;poo.gif&quot; alt&#x3D;&quot;&quot; class&#x3D;&quot;w-100&quot; &#x2F;&gt;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;!-- Start Two Column Section --&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;container my-5&quot;&gt;</span><br><span class="line">      &lt;div class&#x3D;&quot;row py-4&quot;&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;col-lg-4 mb-4 my-lg-auto&quot;&gt;</span><br><span class="line">          &lt;h1 class&#x3D;&quot;text-dark font-weight&#x3D;bold mb-3&quot;&gt;We&#39;ve Expecting YOu&lt;&#x2F;h1&gt;</span><br><span class="line">          &lt;p class&#x3D;&quot;mb-4&quot;&gt;</span><br><span class="line">            Lorem, ipsum dolor sit amet consectetur adipisicing elit. Sapiente</span><br><span class="line">            tenetur minus illum excepturi beatae neque at numquam a nam</span><br><span class="line">            voluptas!</span><br><span class="line">          &lt;&#x2F;p&gt;</span><br><span class="line">          &lt;a href&#x3D;&quot;#&quot; target&#x3D;&quot;_blank&quot; class&#x3D;&quot;btn btn-outline-dark btn-lg&quot;</span><br><span class="line">            &gt;The Agency THeme&lt;&#x2F;a</span><br><span class="line">          &gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;div class&#x3D;&quot;col-lg-8&quot;&gt;</span><br><span class="line">          &lt;img src&#x3D;&quot;img&#x2F;code.jpg&quot; alt&#x3D;&quot;&quot; class&#x3D;&quot;w-100&quot; &#x2F;&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;!-- End Two Column Section --&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- Start Jumbotron --&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;jumbotron py-5 mb-0&quot;&gt;</span><br><span class="line">      &lt;div class&#x3D;&quot;container&quot;&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;row&quot;&gt;</span><br><span class="line">          &lt;div class&#x3D;&quot;col-md-7 col-lg-8 col-xl-9 my-auto&quot;&gt;</span><br><span class="line">            &lt;h4&gt;Lorem ipsum dolor sit amet.&lt;&#x2F;h4&gt;</span><br><span class="line">          &lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">          &lt;div class&#x3D;&quot;col-md-5 col-lg-4 col-xl-3 pt-4 pt-md-0&quot;&gt;</span><br><span class="line">            &lt;a href&#x3D;&quot;#&quot; class&#x3D;&quot;btn btn-primary btn-lg&quot;&gt;Contact US&lt;&#x2F;a&gt;</span><br><span class="line">          &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;!-- End Jumbotron --&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- Start Footer --&gt;</span><br><span class="line">    &lt;footer&gt;</span><br><span class="line">      &lt;div class&#x3D;&quot;container&quot;&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;row text-light text-center py-4 justify-content-center&quot;&gt;</span><br><span class="line">          &lt;div class&#x3D;&quot;col-sm-10 col-md-8 col-lg-6&quot;&gt;</span><br><span class="line">            &lt;img src&#x3D;&quot;img&#x2F;logo-white.png&quot; alt&#x3D;&quot;&quot; &#x2F;&gt;</span><br><span class="line">            &lt;p&gt;</span><br><span class="line">              Lorem ipsum dolor sit amet consectetur adipisicing elit. Iusto</span><br><span class="line">              laudantium culpa voluptates repellat! Hic rerum error facilis</span><br><span class="line">              sequi natus voluptates enim tenetur. Provident iusto laborum minus</span><br><span class="line">              aliquam, eum placeat?</span><br><span class="line">            &lt;&#x2F;p&gt;</span><br><span class="line">            &lt;ul class&#x3D;&quot;social pt-3 m-auto&quot;&gt;</span><br><span class="line">              &lt;li&gt;</span><br><span class="line">                &lt;a href&#x3D;&quot;#&quot;&gt;&lt;i class&#x3D;&quot;fab fa-facebook&quot;&gt;&lt;&#x2F;i&gt;&lt;&#x2F;a&gt;</span><br><span class="line">              &lt;&#x2F;li&gt;</span><br><span class="line">              &lt;li&gt;</span><br><span class="line">                &lt;a href&#x3D;&quot;#&quot;&gt;&lt;i class&#x3D;&quot;fab fa-twitter&quot;&gt;&lt;&#x2F;i&gt;&lt;&#x2F;a&gt;</span><br><span class="line">              &lt;&#x2F;li&gt;</span><br><span class="line">              &lt;li&gt;</span><br><span class="line">                &lt;a href&#x3D;&quot;#&quot;&gt;&lt;i class&#x3D;&quot;fab fa-instagram&quot;&gt;&lt;&#x2F;i&gt;&lt;&#x2F;a&gt;</span><br><span class="line">              &lt;&#x2F;li&gt;</span><br><span class="line">              &lt;li&gt;</span><br><span class="line">                &lt;a href&#x3D;&quot;#&quot;&gt;&lt;i class&#x3D;&quot;fab fa-youtube&quot;&gt;&lt;&#x2F;i&gt;&lt;&#x2F;a&gt;</span><br><span class="line">              &lt;&#x2F;li&gt;</span><br><span class="line">            &lt;&#x2F;ul&gt;</span><br><span class="line">          &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;footer&gt;</span><br><span class="line">    &lt;!-- End Footer --&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- Start Socket --&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;socket text-light text-center py-3&quot;&gt;</span><br><span class="line">      &lt;p&gt;&amp;copy; &lt;a href&#x3D;&quot;#&quot;&gt;123.com&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;!-- End Socket --&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- Script Source Files --&gt;</span><br><span class="line">    &lt;!-- jQuery --&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;js&#x2F;jquery-3.5.1.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;!-- Bootstrap 4.5 JS --&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;js&#x2F;bootstrap.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;!-- Popper JS --&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;js&#x2F;popper.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;!-- Font Awesome --&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;js&#x2F;all.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;!-- End Script Source Files --&gt;</span><br><span class="line">  &lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="CSS"><a href="#CSS" class="headerlink" title="CSS:"></a>CSS:</h1><h2 id="CSS完整程式碼"><a href="#CSS完整程式碼" class="headerlink" title="CSS完整程式碼"></a>CSS完整程式碼</h2><p><a href="https://github.com/chiehLiu/git-projects/blob/bootstrap-practice-1/Bootstrap%202020%20Starter%20Files/css/style.css">CSS 原始碼</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Bootstrap-4-Responsive-Website-Design&quot;&gt;&lt;a href=&quot;#Bootstrap-4-Responsive-Website-Design&quot; class=&quot;headerlink&quot; title=&quot;Bootstrap 4 - Resp</summary>
      
    
    
    
    <category term="Bootstrap" scheme="http://example.com/categories/Bootstrap/"/>
    
    
    <category term="Bootstrap" scheme="http://example.com/tags/Bootstrap/"/>
    
  </entry>
  
  <entry>
    <title>Vue-文件閱讀 part 2- The Vue Instance</title>
    <link href="http://example.com/2021/03/21/Vue.js%20%E6%96%87%E4%BB%B6%E9%96%B1%E8%AE%80%20part%202-%20The%20Vue%20Instance/"/>
    <id>http://example.com/2021/03/21/Vue.js%20%E6%96%87%E4%BB%B6%E9%96%B1%E8%AE%80%20part%202-%20The%20Vue%20Instance/</id>
    <published>2021-03-20T17:08:38.289Z</published>
    <updated>2021-03-21T18:23:30.088Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Vue-js-文件閱讀-part-2-The-Vue-Instance"><a href="#Vue-js-文件閱讀-part-2-The-Vue-Instance" class="headerlink" title="Vue.js 文件閱讀 part 2- The Vue Instance"></a>Vue.js 文件閱讀 part 2- The Vue Instance</h1><hr><h2 id="tags-Javascript-relate"><a href="#tags-Javascript-relate" class="headerlink" title="tags: Javascript relate"></a>tags: Javascript relate</h2><h6 id="tags-Javascript-Vue-js"><a href="#tags-Javascript-Vue-js" class="headerlink" title="tags: Javascript, Vue.js"></a>tags: <code>Javascript, Vue.js</code></h6><h1 id="創造Vue實體-Creating-a-Vue-Instance"><a href="#創造Vue實體-Creating-a-Vue-Instance" class="headerlink" title="創造Vue實體 (Creating a Vue Instance)"></a>創造Vue實體 (Creating a Vue Instance)</h1><ul><li>所有的Vue app 都會從創造實例(Instance)開始</li><li>裡面的options處就是我們操作的地方，可以瀏覽<a href="https://vuejs.org/v2/api/#Options-Data"> API reference</a>來做操作</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  <span class="comment">// options</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>一個Vue app通常會有會有個root Vue instance由new Vue產生</li><li>伴隨著的是巢狀的樹組成的component，它具有可重複使用的特性</li><li>在ROOT下面的都是component的部分</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Root Instance</span><br><span class="line">└─ TodoList</span><br><span class="line">   ├─ TodoItem </span><br><span class="line">   │  ├─ TodoButtonDelete</span><br><span class="line">   │  └─ TodoButtonEdit</span><br><span class="line">   └─ TodoListFooter</span><br><span class="line">      ├─ TodosButtonClear</span><br><span class="line">      └─ TodoListStatistics</span><br></pre></td></tr></table></figure><h2 id="範例"><a href="#範例" class="headerlink" title="範例"></a>範例</h2><p>index.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el:#app,</span><br><span class="line">    data: &#123;</span><br><span class="line">    product: <span class="string">&quot;Socks&quot;</span></span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>index.html</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">    &lt;h2&gt;&#123;&#123; product &#125;&#125; &lt;&#x2F;h2&gt;</span><br><span class="line">&lt;&#x2F;div&gt;    </span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>app使用el連接到html檔案內部的id = “app”的div</li><li>連結app內的data: poduct到html上</li><li>藉由改變index.js 內 product的內容可以及時修改html內的的內容</li></ul><p>呈現在網頁上的結果<br><img src="https://i.imgur.com/Q0nZBMD.png"></p><p>藉著改變屬性也可以及時修改頁面內容</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">app.product = <span class="string">&#x27;Coat&#x27;</span></span><br><span class="line"><span class="comment">//印出結果變成Coat</span></span><br><span class="line"></span><br><span class="line">app.product = <span class="string">&quot;Compass&quot;</span></span><br><span class="line"><span class="comment">//印出結果變成Compass</span></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/ZtJ5TBm.png"></p><p><img src="https://i.imgur.com/tvzMv4N.png"></p><h1 id="資料與方法-Data-and-Methods"><a href="#資料與方法-Data-and-Methods" class="headerlink" title="資料與方法(Data and Methods)"></a>資料與方法(Data and Methods)</h1><h2 id="data"><a href="#data" class="headerlink" title="$data"></a>$data</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id&#x3D;&quot;app&quot;&gt;&#123;&#123;msg&#125;&#125;&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> data = &#123;</span><br><span class="line">            msg: <span class="string">&#x27;123123&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> vm = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">            el: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">            data,</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure><p>這兩個是相同的結果</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vm.$data === data   <span class="comment">//true</span></span><br><span class="line"></span><br><span class="line">data.msg === vm.msg  <span class="comment">//true</span></span><br></pre></td></tr></table></figure><p>因此當我們操作</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">data.msg =<span class="number">456</span></span><br><span class="line">vm.msg = <span class="number">123</span></span><br></pre></td></tr></table></figure><p>畫面也會如此響應</p><p>但是如果使用不存在的屬性時畫面則不會響，得使用不同的方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vm.b = <span class="string">&#x27;hi&#x27;</span></span><br></pre></td></tr></table></figure><p>但是如果你知道可能稍後會有屬性會使用到，但目前得空著或是還未存在，因此就必須設預設值</p><p>比方說要規畫一個todoList app可能會使用到的data:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">data: &#123;</span><br><span class="line">  newTodoText: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  visitCount: <span class="number">0</span>,</span><br><span class="line">  hideCompletedTodos: <span class="literal">false</span>,</span><br><span class="line">  todos: [],</span><br><span class="line">  error: <span class="literal">null</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Object-freeze"><a href="#Object-freeze" class="headerlink" title="Object.freeze()"></a>Object.freeze()</h2><p>可以關閉reative，讓畫面不被響應</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id&#x3D;&quot;app&quot;&gt;&#123;&#123;msg&#125;&#125;&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> data = &#123;</span><br><span class="line">            msg: <span class="string">&#x27;hello Vue&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">Object</span>.freeze(data);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> vm = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">            el: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">            data,</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure><p>在這個情況下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">data.msg =<span class="number">456</span></span><br><span class="line">vm.msg = <span class="number">123</span></span><br></pre></td></tr></table></figure><p>畫面也不會有任何響應</p><p>並vm也會變成只能讀不能寫<br><img src="https://i.imgur.com/IBZOEP4.png"></p><h2 id="前綴API"><a href="#前綴API" class="headerlink" title="$前綴API"></a>$前綴API</h2><p>$這個符號代表Vue提供給我們的功能<br>如<br>$data,<br>$el,<br>$watch等等</p><p><a href="https://vuejs.org/v2/api/#Instance-Properties">Instance Properties</a></p><h1 id="生命週期裝置實例-Instance-Lifecycle-Hooks"><a href="#生命週期裝置實例-Instance-Lifecycle-Hooks" class="headerlink" title="生命週期裝置實例(Instance Lifecycle Hooks)"></a>生命週期裝置實例(Instance Lifecycle Hooks)</h1><p>到特定的時間就會呼叫特定的函式</p><p>每個Vue實體都會經歷一連串的初始化階段舉例:</p><ol><li>需要設置好data observation</li><li>編譯模板</li><li>把Vue實體推到DOM上</li><li>更新DOM當data被更新</li></ol><p>在這個階段過程中也會跑一些functions被稱為<strong>Lifecycle Hooks</strong>，讓使用者寫自己的程式碼在特定的階段使用</p><h2 id="範例-1"><a href="#範例-1" class="headerlink" title="範例"></a>範例</h2><p>當Vue實體已經被創造時，created這個函式可以被使用:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  data: &#123;</span><br><span class="line">    a: <span class="number">1</span></span><br><span class="line">  &#125;,</span><br><span class="line">  created: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// `this` points to the vm instance</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;a is: &#x27;</span> + <span class="built_in">this</span>.a)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// =&gt; &quot;a is: 1&quot;</span></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/kCZ5wYN.png"></p><p>在不同的階段還有其他的hooks會被呼叫例如:</p><p>所有的hook指向調用它的實體</p><ul><li>mounted</li><li>updated</li><li>destroyed</li></ul><h2 id="作者提醒"><a href="#作者提醒" class="headerlink" title="作者提醒"></a>作者提醒</h2><p>千萬不要使用箭頭函式在Vue實體，因為箭頭函示沒有this常常會導致報錯</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Uncaught TypeError: Cannot read property of undefined </span><br><span class="line">Uncaught TypeError: this.myMethod is not a function</span><br></pre></td></tr></table></figure><p>使用一般的函式:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">            data: &#123;</span><br><span class="line">                a: <span class="number">1</span></span><br><span class="line">            &#125;,</span><br><span class="line">            created: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="built_in">this</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br></pre></td></tr></table></figure><p>才能印出 Vu實體<br><img src="https://i.imgur.com/utK0icf.png"></p><p>使用箭頭函式:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">            data: &#123;</span><br><span class="line">                a: <span class="number">1</span></span><br><span class="line">            &#125;,</span><br><span class="line">            created: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="built_in">this</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br></pre></td></tr></table></figure><p>只會印出外層的windows<br><img src="https://i.imgur.com/yZu3ut0.png"></p><h2 id="Lifecycle-Diagram"><a href="#Lifecycle-Diagram" class="headerlink" title="Lifecycle Diagram"></a>Lifecycle Diagram</h2><p>從上方那張圖可以得知hook如下:</p><p><strong>beforeCreate</strong><br>Vue實體初始化後立刻呼叫此函式，不過此時Vue實體還未創建所以其中的設定都還未能使用(如data observation, event, watcher setup)</p><p><strong>created</strong><br>Vue實例創建完成後立刻呼叫此函式，已設置 data, computed properties, methods, watch/event callbacks，但尚未開始mounting階段，且 $el 還不能在此階段使用。</p><p><strong>beforeMount</strong><br>在mounting階段開始前被調用：render function首次被調用。</p><p>mounted<br>選項物件中的el被新創建的vm.$el替換，並掛載到到 vm 上，並調用mounted這個鉤子。</p><p>beforeUpdate<br>數據被更新時會調用，發生在 Virtual DOM re-render 和 patch 之前(連結：Day4: Virtual DOM)，可以在此時更改狀態數據，並不會增加重新渲染的成本。</p><p>updated<br>由於數據更新導致 Virtual DOM re-render 和 patch 之後會調用updated這個鉤子。</p><p>不精確白話文為：由於updated被調用時，DOM 已經更新。所以在此時更新數據很可能會導致updated無限循環的被調用。</p><p>beforeDestroy<br>在 Vue Instance 被銷毀前被調用，因此 Vue Instance 在beforeDestroy中仍可運作。</p><p>不精確白話文為：Vue Instance 可以在此時做垂死前的掙扎。</p><p>destroyed<br>在 Vue Instance 被銷毀後被調用，此時 Vue Instance 所有東西會解除綁定，事件監聽也都會被移除，子實例也會被銷毀。</p><h1 id="模板語法-Template-Syntax"><a href="#模板語法-Template-Syntax" class="headerlink" title="模板語法(Template Syntax)"></a>模板語法(Template Syntax)</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Vue-js-文件閱讀-part-2-The-Vue-Instance&quot;&gt;&lt;a href=&quot;#Vue-js-文件閱讀-part-2-The-Vue-Instance&quot; class=&quot;headerlink&quot; title=&quot;Vue.js 文件閱讀 part 2- Th</summary>
      
    
    
    
    <category term="Vue2" scheme="http://example.com/categories/Vue2/"/>
    
    
    <category term="Vue" scheme="http://example.com/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>Vue-文件閱讀 part 1- Introduction + Installation</title>
    <link href="http://example.com/2021/03/21/Vue.js%20%E6%96%87%E4%BB%B6%E9%96%B1%E8%AE%80%20part%201-%20Introduction%20+%20Installation/"/>
    <id>http://example.com/2021/03/21/Vue.js%20%E6%96%87%E4%BB%B6%E9%96%B1%E8%AE%80%20part%201-%20Introduction%20+%20Installation/</id>
    <published>2021-03-20T17:01:51.967Z</published>
    <updated>2021-03-21T18:23:24.617Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Vue-js-文件閱讀-part-1-Introduction-Installation"><a href="#Vue-js-文件閱讀-part-1-Introduction-Installation" class="headerlink" title="Vue.js 文件閱讀 part 1- Introduction + Installation"></a>Vue.js 文件閱讀 part 1- Introduction + Installation</h1><hr><h2 id="tags-Javascript-relate"><a href="#tags-Javascript-relate" class="headerlink" title="tags: Javascript relate"></a>tags: Javascript relate</h2><h6 id="tags-Javascript-Vue-js"><a href="#tags-Javascript-Vue-js" class="headerlink" title="tags: Javascript, Vue.js"></a>tags: <code>Javascript, Vue.js</code></h6><h1 id="簡介-Introduction"><a href="#簡介-Introduction" class="headerlink" title="簡介(Introduction)"></a>簡介(Introduction)</h1><h2 id="Vue-js是什麼"><a href="#Vue-js是什麼" class="headerlink" title="Vue.js是什麼?"></a>Vue.js是什麼?</h2><ul><li>一個用來搭建使用者介面的框架<blockquote><p>框架(Framework)：由包含各種功能與開發規則的函數庫組成。我們可以利用其提供的功能加速開發，不必從零開始；而其開發規則通常是經過驗證的良好開發方法，只要follow它，就可以避免很多問題與錯誤。因此框架通常有著加速開發並易於維護的特性。</p></blockquote></li><li>在MVVM的架構下以視圖(view layer)為核心的網頁介面(Web UI)開發方法</li><li>容易上手並且容易整合進其他的資料庫或是其他的現存的專案</li><li>可以完美的強化單頁應用程式是(SPA)藉著一些<a href="https://vuejs.org/v2/guide/single-file-components.html">現代工具</a>以及<a href="https://github.com/vuejs/awesome-vue#components--libraries">輔助使用的資料庫</a></li></ul><p><a href="https://www.vuemastery.com/courses/intro-to-vue-js/vue-instance/">影片學習 - Intro to Vue 2</a></p><script async src="//jsfiddle.net/chiehLiu/80nLrhmp/embed/"></script><h1 id="安裝使用-Getting-Started"><a href="#安裝使用-Getting-Started" class="headerlink" title="安裝使用(Getting Started)"></a>安裝使用(Getting Started)</h1><blockquote><p>這份官方手冊需要有HTML, CSS, and JavaScript基本知識必較容易讀懂<br>有其他框架使用經驗也有幫助</p></blockquote><h2 id="相容性指示-Compatibility-Note"><a href="#相容性指示-Compatibility-Note" class="headerlink" title="相容性指示(Compatibility Note)"></a>相容性指示(Compatibility Note)</h2><ul><li>Vue不支援IE8甚至更低的版本</li><li>因為Vue使用ECMAScript 5 features但IE8不支援</li></ul><p><img src="https://i.imgur.com/TWcuTRw.png"></p><h2 id="語意化的版本控制"><a href="#語意化的版本控制" class="headerlink" title="語意化的版本控制"></a>語意化的版本控制</h2><p>簡單來說就讓版本名稱具有意義好辨識並且達成共識，避免相容性出現問題</p><p><a href="https://semver.org/lang/zh-TW/">語意化版本</a></p><h2 id="最新版本釋出"><a href="#最新版本釋出" class="headerlink" title="最新版本釋出"></a>最新版本釋出</h2><p><a href="https://github.com/vuejs/vue/releases">最新版本 Github</a></p><h2 id="Vue-開發工具-Vue-Devtools"><a href="#Vue-開發工具-Vue-Devtools" class="headerlink" title="Vue 開發工具(Vue Devtools)"></a>Vue 開發工具(Vue Devtools)</h2><p>相當推薦使用在一個使用者友善介面下，可以更好的檢視你的作品以及幫忙debug</p><p><a href="https://github.com/vuejs/vue-devtools#vue-devtools">Vue Devtools Github</a></p><h2 id="使用-lt-script-gt-引入使用Vue"><a href="#使用-lt-script-gt-引入使用Vue" class="headerlink" title="使用&lt;script&gt;引入使用Vue"></a>使用<code>&lt;script&gt;</code>引入使用Vue</h2><p>建議開發的時候引入Development Version才不會省略掉一些常見的錯誤訊息</p><p><img src="https://i.imgur.com/Wsi9NjJ.png"></p><h2 id="內容傳遞網路-CDN-Content-delivery-network"><a href="#內容傳遞網路-CDN-Content-delivery-network" class="headerlink" title="內容傳遞網路 (CDN - Content delivery network)"></a>內容傳遞網路 (CDN - Content delivery network)</h2><p>作為原型或是學習使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;vue@2.6.12&#x2F;dist&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>要用在產品身上則推薦使用特定的版本，因為最新版本可能尚未完善</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;vue@2.6.12&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>使用原生ES Module相容的版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type&#x3D;&quot;module&quot;&gt;</span><br><span class="line">  import Vue from &#39;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;vue@2.6.12&#x2F;dist&#x2F;vue.esm.browser.js&#39;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>可以從此處瀏覽原始碼</p><p><a href="https://cdn.jsdelivr.net/npm/vue/">NPM package 原始碼</a></p><p><a href="https://unpkg.com/vue@2.6.12/dist/vue.js">unpkg</a></p><p><a href="https://cdnjs.cloudflare.com/ajax/libs/vue/2.6.12/vue.js">cdnjs (最新版本有可能會比較慢登上這邊)</a></p><h3 id="小提醒"><a href="#小提醒" class="headerlink" title="小提醒"></a>小提醒</h3><p>在你要發布的網站上面可以使用<code>vue.min.js</code>取代<code>vue.j</code>可以優化檔案大小以及執行速度</p><h2 id="NPM"><a href="#NPM" class="headerlink" title="NPM"></a>NPM</h2><p>當要使用在大型規模的app時推薦使用NPM，因為可以跟<a href="https://webpack.js.org/">Webpack</a> or <a href="http://browserify.org/">Browserify</a>相容的很好，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># latest stable</span><br><span class="line">$ npm install vue</span><br></pre></td></tr></table></figure><h2 id="CLI"><a href="#CLI" class="headerlink" title="CLI"></a>CLI</h2><p>使用官方CLI需要一些node.js的相關知識</p><p><a href="https://cli.vuejs.org/">Vue CLI 官網</a></p><p><a href="https://www.vuemastery.com/courses/real-world-vue-js/vue-cli/">CLI 影片教學</a></p><h2 id="Explanation-of-Different-Builds"><a href="#Explanation-of-Different-Builds" class="headerlink" title="Explanation of Different Builds"></a>Explanation of Different Builds</h2><p>在<a href="https://cdn.jsdelivr.net/npm/vue/">NPM package 原始碼</a> dist/處有很多不同的builds下方是他們的不同之處:</p><table><thead><tr><th></th><th>UMD</th><th>CommonJS</th><th>ES Module (for bundlers)</th><th>ES Module (for browsers)</th></tr></thead><tbody><tr><td><strong>Full</strong></td><td>vue.js</td><td>vue.common.js</td><td>vue.esm.js</td><td>vue.esm.browser.js</td></tr><tr><td><strong>Runtime-only</strong></td><td>vue.runtime.js</td><td>vue.runtime.common.js</td><td>vue.runtime.esm.js</td><td>-</td></tr><tr><td><strong>Full (production)</strong></td><td>vue.min.js</td><td>-</td><td>-</td><td>vue.esm.browser.min.js</td></tr><tr><td><strong>Runtime-only (production)</strong></td><td>vue.runtime.min.js</td><td>-</td><td>-</td><td>-</td></tr></tbody></table><h3 id="名詞解釋-Term"><a href="#名詞解釋-Term" class="headerlink" title="名詞解釋(Term)"></a>名詞解釋(Term)</h3><ul><li><p>Full: 包含Compiler, Runtime</p></li><li><p>Compiler: 負責編譯模板字版進去JS呈現相關的函式</p></li><li><p>Runtime: 負責Vue instances, 呈現以及修補 virtual DOM(基本上處理Compiler以下的事情)</p></li><li><p>UMD: UMD相關的builds可以直接使用在瀏覽器下藉著<code>&lt;script&gt;</code>tag<br>UMD (Universal Module Definition)，就是一種javascript通用模塊定義規範，讓你的模塊能在javascript所有運行環境中發揮作用。</p></li><li><p>CommonJS: 給browserify or webpack使用</p></li><li><p>ES Module: </p></li></ul><p>2.6Vue版本後才開始提供下面兩種builds</p><ol><li>ESM for bundlers: 給webpack 2 or Rollup使用</li><li>ESM for browsers (2.6+ only): 直接引入現代的瀏覽器使用<code>&lt;script type=&quot;module&quot;&gt;</code></li></ol><h1 id="宣告式渲染-Declarative-Rendering"><a href="#宣告式渲染-Declarative-Rendering" class="headerlink" title="宣告式渲染(Declarative Rendering)"></a>宣告式渲染(Declarative Rendering)</h1><blockquote><p>Vue.js的核心藉著好理解的模板語法讓使用者把資料呈現到DOM上面</p></blockquote><h2 id="範例"><a href="#範例" class="headerlink" title="範例"></a>範例</h2><p>index.html</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">  &#123;&#123; message &#125;&#125;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">&lt;script src&#x3D;&quot;index.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;vue&#x2F;dist&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>index.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">&#x27;#app&#x27;</span>, <span class="comment">// 抓取哪邊的DOM</span></span><br><span class="line">  data: &#123;</span><br><span class="line">    message: <span class="string">&#x27;Hello Vue!&#x27;</span> <span class="comment">// 此處是要呈現的內容</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 輸出 Hello Vue!</span></span><br><span class="line"></span><br><span class="line">app.message = <span class="string">&#x27;I have changed the data!&#x27;</span></span><br><span class="line"><span class="comment">// 輸出 I have changed the data</span></span><br></pre></td></tr></table></figure><p><a href="https://scrimba.com/scrim/cQ3QVcr?pl=pXKqta">影片說明Hello Vue!</a></p><ul><li>資料以及DOM已經做了連結並且是隨時反應的<br>ex. app.message修改內容後輸出內容也會即時更改</li><li>不需要再跟HTML互動，直接在Vue instance就可以操作DOM</li></ul><h2 id="範例二"><a href="#範例二" class="headerlink" title="範例二"></a>範例二</h2><p>index.html</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id&#x3D;&quot;app-2&quot;&gt;</span><br><span class="line">  &lt;span v-bind:title&#x3D;&quot;message&quot;&gt;</span><br><span class="line">    Hover your mouse over me for a few seconds</span><br><span class="line">    to see my dynamically bound title!</span><br><span class="line">  &lt;&#x2F;span&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p>index.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> app2 = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">&#x27;#app-2&#x27;</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    message: <span class="string">&#x27;You loaded this page on &#x27;</span> + <span class="keyword">new</span> <span class="built_in">Date</span>().toLocaleString()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/ItiTipU.gif"></p><p>當hover的時候在當前的string會顯示 字串+載入日期時間</p><ul><li><code>v-bind</code></li></ul><p>這個有v前墜屬性被稱做指示(directive)，是Vue提供使用的，而這個v-bind的用法在於讓這個title的屬性隨著message屬性作同步修在Vue instance上面</p><p>所以當我使用下面的方法時，title的屬性也會及時更新</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app2.message = <span class="string">&#x27;some new message&#x27;</span></span><br></pre></td></tr></table></figure><h1 id="條件式以及迴圈-Conditionals-and-Loops"><a href="#條件式以及迴圈-Conditionals-and-Loops" class="headerlink" title="條件式以及迴圈(Conditionals and Loops)"></a>條件式以及迴圈(Conditionals and Loops)</h1><h2 id="條件式"><a href="#條件式" class="headerlink" title="條件式"></a>條件式</h2><p>index.html</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id&#x3D;&quot;app-3&quot;&gt;</span><br><span class="line">  &lt;span v-if&#x3D;&quot;seen&quot;&gt;Now you see me&lt;&#x2F;span&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p>index.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> app3 = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">&#x27;#app-3&#x27;</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    seen: <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li><code>v-if</code></li></ul><p>可以理解成 v-if後方的文字必須為true(然而是否為true則要去看js程式碼如何操作)，才會讓span內的文字被看見</p><p><img src="https://i.imgur.com/SjH0Sk5.png">   </p><p>因此當判斷式內容改成flase時，就看不見文字</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app-<span class="number">3.</span>seen = <span class="literal">false</span>;</span><br></pre></td></tr></table></figure><h2 id="迴圈"><a href="#迴圈" class="headerlink" title="迴圈"></a>迴圈</h2><p>index.html</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id&#x3D;&quot;app-4&quot;&gt;</span><br><span class="line">  &lt;ol&gt;</span><br><span class="line">    &lt;li v-for&#x3D;&quot;todo in todos&quot;&gt;</span><br><span class="line">      &#123;&#123; todo.text &#125;&#125;</span><br><span class="line">    &lt;&#x2F;li&gt;</span><br><span class="line">  &lt;&#x2F;ol&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p>index.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> app4 = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">&#x27;#app-4&#x27;</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    todos: [</span><br><span class="line">      &#123; <span class="attr">text</span>: <span class="string">&#x27;Learn JavaScript&#x27;</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">text</span>: <span class="string">&#x27;Learn Vue&#x27;</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">text</span>: <span class="string">&#x27;Build something awesome&#x27;</span> &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li><code>v-for</code></li></ul><p>可以用來製作清單類型的呈現</p><p><img src="https://i.imgur.com/AimG2bx.png"></p><p>如果想要再加入新的清單可以這樣做</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app4.todos.push(&#123; <span class="attr">text</span>: <span class="string">&#x27;New item&#x27;</span> &#125;)</span><br></pre></td></tr></table></figure><h1 id="處理使用者的輸入-Handling-User-Input"><a href="#處理使用者的輸入-Handling-User-Input" class="headerlink" title="處理使用者的輸入(Handling User Input)"></a>處理使用者的輸入(Handling User Input)</h1><h2 id="範例-1"><a href="#範例-1" class="headerlink" title="範例"></a>範例</h2><p>index.html</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">    &lt;p&gt;&#123;&#123; message &#125;&#125;&lt;&#x2F;p&gt;</span><br><span class="line">    &lt;button v-on:click&#x3D;&quot;reverseMessage&quot;&gt;Reverse Message&lt;&#x2F;button&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p>index.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    message: <span class="string">&#x27;Hello Vue.js!&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    reverseMessage: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="built_in">this</span>.message = <span class="built_in">this</span>.message.split(<span class="string">&#x27;&#x27;</span>).reverse().join(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li><code>v-on:click</code></li></ul><p>跟使用者互動藉由v-on 指示來連接事件監聽click並觸發函式來處理</p><p>點擊按鈕後把文字順序反過來</p><p><img src="https://i.imgur.com/ETYNgvk.png"></p><p><img src="https://i.imgur.com/pEqBa79.png"></p><h1 id="建構組件-Composing-with-Components"><a href="#建構組件-Composing-with-Components" class="headerlink" title="建構組件(Composing with Components)"></a>建構組件(Composing with Components)</h1><p>為了建構大型專案藉著拆分成不同的小組件的優點</p><ul><li>可重複利用</li><li>是獨立的組件</li><li>容量小</li></ul><p><img src="https://i.imgur.com/tbekM4J.png"></p><h2 id="範例-2"><a href="#範例-2" class="headerlink" title="範例"></a>範例</h2><p>index.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定義一個新的組件 todo-item</span></span><br><span class="line">Vue.component(<span class="string">&#x27;todo-item&#x27;</span>, &#123;</span><br><span class="line">  template: <span class="string">&#x27;&lt;li&gt;This is a todo&lt;/li&gt;&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue(...)</span><br></pre></td></tr></table></figure><p>index.html</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">    &lt;ol&gt;</span><br><span class="line">        &lt;todo-item&gt;&lt;&#x2F;todo-item&gt;</span><br><span class="line">        &lt;todo-item&gt;&lt;&#x2F;todo-item&gt;</span><br><span class="line">    &lt;&#x2F;ol&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p>首先在js先撰寫組件todo-item後就可以在html裡面直接使用</p><h2 id="範例二-1"><a href="#範例二-1" class="headerlink" title="範例二"></a>範例二</h2><p>index.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Vue.component(<span class="string">&#x27;todo-item&#x27;</span>, &#123;</span><br><span class="line">  props: [<span class="string">&#x27;todo&#x27;</span>],</span><br><span class="line">  template: <span class="string">&#x27;&lt;li&gt;&#123;&#123; todo.text &#125;&#125;&lt;/li&gt;&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> app7 = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">&#x27;#app-7&#x27;</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    groceryList: [</span><br><span class="line">      &#123; <span class="attr">id</span>: <span class="number">0</span>, <span class="attr">text</span>: <span class="string">&#x27;Vegetables&#x27;</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">id</span>: <span class="number">1</span>, <span class="attr">text</span>: <span class="string">&#x27;Cheese&#x27;</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">id</span>: <span class="number">2</span>, <span class="attr">text</span>: <span class="string">&#x27;Whatever else humans are supposed to eat&#x27;</span> &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>index.html</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id&#x3D;&quot;app-7&quot;&gt;</span><br><span class="line">  &lt;ol&gt;</span><br><span class="line">    &lt;todo-item</span><br><span class="line">      v-for&#x3D;&quot;item in groceryList&quot;</span><br><span class="line">      v-bind:todo&#x3D;&quot;item&quot;</span><br><span class="line">      v-bind:key&#x3D;&quot;item.id&quot;</span><br><span class="line">    &gt;&lt;&#x2F;todo-item&gt;</span><br><span class="line">  &lt;&#x2F;ol&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><ul><li>首先於component處新增<code>porp</code>是一個可以客製化的屬性並命名todo</li><li>介下來使用<code>v-bind</code>讓文字可以被動態的傳入DOM同時傳入key的部分會在後面章節作解釋</li><li>並且使用<code>v-for</code>製作清單列表</li></ul><p><img src="https://i.imgur.com/OmEZP4f.png"></p><hr><p>在大型專案中把內部的app做拆分是必要的，讓開發過程容易管理，下面程式碼是個範例說明比較多組件且複雜的html長相</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">  &lt;app-nav&gt;&lt;&#x2F;app-nav&gt;</span><br><span class="line">  &lt;app-view&gt;</span><br><span class="line">    &lt;app-sidebar&gt;&lt;&#x2F;app-sidebar&gt;</span><br><span class="line">    &lt;app-content&gt;&lt;&#x2F;app-content&gt;</span><br><span class="line">  &lt;&#x2F;app-view&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><h1 id="與自定義元素的關係-Relation-to-Custom-Elements"><a href="#與自定義元素的關係-Relation-to-Custom-Elements" class="headerlink" title="與自定義元素的關係(Relation to Custom Elements)"></a>與自定義元素的關係(Relation to Custom Elements)</h1><ul><li><p>Vue的組件非常類似於<a href="https://developers.google.com/web/fundamentals/web-components">Custom Elements</a></p></li><li><p>舉例說明<br>Vue組件執行<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Element/slot">Slot API</a> 以及 <a href="https://v3.vuejs.org/api/special-attributes.html#is">is</a> 特殊屬性</p></li></ul><blockquote><p>Slot是存在web component内部的占位符，用户可以通過slot屬性在web component的内部插入自定義的標記文本。</p></blockquote><ul><li>不同之處</li></ul><ol><li>Web Components規範已經完成通過但是依舊沒有被所有瀏覽器支援<br>(目前 Safari 10.1+、Chrome 54+ 和 Firefox 63+ 原生支持 Web Components)</li><li>Vue 组件不需要任何 polyfill，並且支援所有瀏覽器 (IE9以下不支援)，必要時Vue组件也可以包裝於原生自定義元素之内</li></ol><blockquote><p>polyfill代指為舊瀏覽器實現或模擬現有版本已實現之功能的程式碼片段</p></blockquote><ol start="3"><li>Vue 组件提供了Custom Elements沒有的功能，跨组件數據流、自定義事件溝通以及bulid整合工具。</li></ol><ul><li>Vue 並沒有使用Custom Elements，不過在應用以及發布Custom Elements上還是有很好的<a href="https://custom-elements-everywhere.com/#vue">互通性</a>，Vue CLI 也支持 Vue 组件建構成為原生的Custom Elements</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Vue-js-文件閱讀-part-1-Introduction-Installation&quot;&gt;&lt;a href=&quot;#Vue-js-文件閱讀-part-1-Introduction-Installation&quot; class=&quot;headerlink&quot; title=&quot;Vue.</summary>
      
    
    
    
    <category term="Vue2" scheme="http://example.com/categories/Vue2/"/>
    
    
    <category term="Vue" scheme="http://example.com/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>JS-語言基礎 06 陣列介紹</title>
    <link href="http://example.com/2021/03/21/JS-JS%20%E8%AA%9E%E8%A8%80%E5%9F%BA%E7%A4%8E%2006%20%E9%99%A3%E5%88%97%E4%BB%8B%E7%B4%B9/"/>
    <id>http://example.com/2021/03/21/JS-JS%20%E8%AA%9E%E8%A8%80%E5%9F%BA%E7%A4%8E%2006%20%E9%99%A3%E5%88%97%E4%BB%8B%E7%B4%B9/</id>
    <published>2021-03-20T16:39:04.079Z</published>
    <updated>2021-03-21T18:22:42.166Z</updated>
    
    <content type="html"><![CDATA[<h2 id="JS-語言基礎-06-陣列介紹"><a href="#JS-語言基礎-06-陣列介紹" class="headerlink" title="JS 語言基礎 06 陣列介紹"></a>JS 語言基礎 06 陣列介紹</h2><p>陣列是一種資料結構(Array)</p><ul><li>物件是鍵值對(key-value pairs)</li><li>陣列是依照索引排序(index)的資料結構</li><li>不推薦陣列的內容字串跟數字混用不然會比較不好操作</li></ul><p>通常長這樣:<br><img src="https://i.imgur.com/s76qbA0.png"></p><p>索引的部分(index):</p><p>0,1,2的部分</p><p><img src="https://i.imgur.com/RCsgGVv.png"></p><p>擷取其值[]:</p><p><img src="https://i.imgur.com/2AJBh4f.png"></p><p>取陣列的長度大小 length:</p><p><img src="https://i.imgur.com/OTqScAn.png"></p><h3 id="陣列基本操作-pop-與-push"><a href="#陣列基本操作-pop-與-push" class="headerlink" title="陣列基本操作 pop 與 push"></a>陣列基本操作 pop 與 push</h3><p>pop 把最後一個元素去掉</p><p><img src="https://i.imgur.com/mK8tWm5.png"></p><p>push 把一個值加到最後</p><p><img src="https://i.imgur.com/ik9vRMy.png"></p><h3 id="陣列基本操作-替換元素-與-取得最後一個元素"><a href="#陣列基本操作-替換元素-與-取得最後一個元素" class="headerlink" title="陣列基本操作 替換元素 與 取得最後一個元素"></a>陣列基本操作 替換元素 與 取得最後一個元素</h3><p>替換元素:</p><p>帶入index後直接輸入要替換的值</p><p><img src="https://i.imgur.com/M6EV9jy.png"></p><p>取得最後一個元素的值:</p><p>使用length取得陣列長度後減一就是最後一個值的index搂</p><p><img src="https://i.imgur.com/8SDCdzk.png"></p><h3 id="陣列操作-indexOf-取得元素的索引"><a href="#陣列操作-indexOf-取得元素的索引" class="headerlink" title="陣列操作 indexOf 取得元素的索引"></a>陣列操作 indexOf 取得元素的索引</h3><p>很直接使用(.indexOf)</p><p><img src="https://i.imgur.com/axNFBsm.png"></p><h3 id="陣列的基本操作-切片slice-與-方法這麼多到底要怎麼記"><a href="#陣列的基本操作-切片slice-與-方法這麼多到底要怎麼記" class="headerlink" title="陣列的基本操作 切片slice 與 方法這麼多到底要怎麼記"></a>陣列的基本操作 切片slice 與 方法這麼多到底要怎麼記</h3><p>切片slice</p><p><code>陣列.slice(起始點,終點)</code></p><p>切出來的值會包含起始點不包含終點</p><p><img src="https://i.imgur.com/4AlzU5O.png"></p><p><img src="https://i.imgur.com/2xclorT.png"></p><p>方法不死背 多巡查詢使用</p><h2 id="JS-語言基礎-06-陣列的進階方法"><a href="#JS-語言基礎-06-陣列的進階方法" class="headerlink" title="JS 語言基礎 06 陣列的進階方法"></a>JS 語言基礎 06 陣列的進階方法</h2><h3 id="6-1-用-map-方法來把陣列中的資料，改成你想要的樣子"><a href="#6-1-用-map-方法來把陣列中的資料，改成你想要的樣子" class="headerlink" title="6.1 用 map() 方法來把陣列中的資料，改成你想要的樣子"></a>6.1 用 map() 方法來把陣列中的資料，改成你想要的樣子</h3><p><code>Array.prototype.map()</code></p><p>這邊的意思是每個陣列都會有這方map()方法<br>他可以針對陣列中的內容做操作並且產生一個新的陣列</p><ul><li>做數字運算</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> a1 = [<span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>];</span><br><span class="line"><span class="keyword">const</span> result2 = a1.map(<span class="function">(<span class="params">a</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> a * a</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(result2); <span class="comment">//</span></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/7K17cLP.png"></p><ul><li>做字串串接</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> dogs = [<span class="string">&quot;1&quot;</span>, <span class="string">&quot;2&quot;</span>, <span class="string">&quot;3&quot;</span>, <span class="string">&quot;4&quot;</span>]</span><br><span class="line"><span class="keyword">let</span> result = dogs.map(<span class="function">(<span class="params">dog</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> dog + <span class="string">&quot;dog is fury&quot;</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(result);</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/rGJrID4.png"></p><h3 id="6-2-如何使用-for-迴圈實作-map"><a href="#6-2-如何使用-for-迴圈實作-map" class="headerlink" title="6.2 如何使用 for 迴圈實作 map()"></a>6.2 如何使用 for 迴圈實作 map()</h3><p>比較複雜一些需要用到比較多邏輯的部分不像map簡潔，但可以得到一樣的結果</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> dogs = [<span class="string">&quot;1&quot;</span>, <span class="string">&quot;2&quot;</span>, <span class="string">&quot;3&quot;</span>, <span class="string">&quot;4&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">mapDemo</span>(<span class="params">dogs</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> result = [];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; dogs.length; i++) &#123;</span><br><span class="line">        <span class="keyword">let</span> str = dogs[i] + <span class="string">&quot;dog is fury&quot;</span>;</span><br><span class="line">        result.push(str);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>並且作呼叫印出的結果會跟使用map一樣<br><img src="https://i.imgur.com/4Rhsfzg.png"></p><h3 id="6-3-用-forEach-讓陣列中的元素一個一個出來面對"><a href="#6-3-用-forEach-讓陣列中的元素一個一個出來面對" class="headerlink" title="6.3 用 forEach() 讓陣列中的元素一個一個出來面對"></a>6.3 用 forEach() 讓陣列中的元素一個一個出來面對</h3><p>逐個印出值並且無法做出return</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> a1 = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;f&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> forEachResult = a1.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">el</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(el);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/G9oDqoS.png"></p><h4 id="跟map做比較"><a href="#跟map做比較" class="headerlink" title="跟map做比較"></a>跟map做比較</h4><p>map會返回值可以做return<br>forEach不會返回值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> a1 = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;f&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> forEachResult = a1.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">el</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> el + <span class="string">&quot;is good&quot;</span>;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> mapResult = a1.map(<span class="function"><span class="keyword">function</span> (<span class="params">el</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> el + <span class="string">&quot;is good&quot;</span>;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/nTE6jns.png"></p><h4 id="用for來寫forEach"><a href="#用for來寫forEach" class="headerlink" title="用for來寫forEach"></a>用for來寫forEach</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> a1 = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;f&#x27;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; a1.length; i++) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(a1[i] + <span class="string">&quot;is good&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一樣可以印出結果<br><img src="https://i.imgur.com/ufvZ70H.png"></p><h3 id="6-4-使用-filter-找出陣列中符合條件的元素-element"><a href="#6-4-使用-filter-找出陣列中符合條件的元素-element" class="headerlink" title="6.4 使用 filter() 找出陣列中符合條件的元素(element)"></a>6.4 使用 filter() 找出陣列中符合條件的元素(element)</h3><p>使用條件做篩選並把選中的內容放進新的陣列</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">as</span> = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>];</span><br><span class="line"></span><br><span class="line">newa = <span class="keyword">as</span>.filter(<span class="function"><span class="keyword">function</span> (<span class="params">a</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a &gt; <span class="number">5</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/wVu73h2.png"></p><h4 id="用物件做操作"><a href="#用物件做操作" class="headerlink" title="用物件做操作"></a>用物件做操作</h4><p>篩選出大於25歲小於123歲的物件排進新的陣列</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> bs = [&#123;</span><br><span class="line">        name: <span class="string">&#x27;tom&#x27;</span>,</span><br><span class="line">        age: <span class="number">36</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        name: <span class="string">&#x27;hoe&#x27;</span>,</span><br><span class="line">        age: <span class="number">123</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        name: <span class="string">&#x27;dif&#x27;</span>,</span><br><span class="line">        age: <span class="number">43</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        name: <span class="string">&#x27;aer&#x27;</span>,</span><br><span class="line">        age: <span class="number">25</span></span><br><span class="line">    &#125;</span><br><span class="line">]</span><br><span class="line">newa = bs.filter(<span class="function"><span class="keyword">function</span> (<span class="params">b</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> b.age &gt; <span class="number">25</span> &amp;&amp; b.age &lt; <span class="number">123</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/3UNrsks.png"></p><h3 id="6-5-Array-陣列的-find-方法，找到第一筆符合條件的資料"><a href="#6-5-Array-陣列的-find-方法，找到第一筆符合條件的資料" class="headerlink" title="6.5 Array 陣列的 find() 方法，找到第一筆符合條件的資料"></a>6.5 Array 陣列的 find() 方法，找到第一筆符合條件的資料</h3><ul><li>Array 陣列的find()方法，找到第一筆符合條件的資料只印出一個找到的值</li><li>filter()方法則是過濾符合的條件(每一筆)並組成新陣列</li></ul><h4 id="find"><a href="#find" class="headerlink" title="find()"></a>find()</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> a1 = [<span class="number">1</span>, <span class="number">34</span>, <span class="number">52</span>, <span class="number">55</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">2345</span>, <span class="number">55</span>, <span class="number">44</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> find = a1.find(<span class="function">(<span class="params">found</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> found === <span class="number">12</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(find);</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/y9gnABv.png"></p><h4 id="filter"><a href="#filter" class="headerlink" title="filter()"></a>filter()</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> a1 = [<span class="number">1</span>, <span class="number">34</span>, <span class="number">52</span>, <span class="number">55</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">2345</span>, <span class="number">55</span>, <span class="number">44</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> find = a1.filter(<span class="function">(<span class="params">found</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> found === <span class="number">12</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(find);</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/uxgc2CL.png"></p><h3 id="6-6-為什麼查詢-Array-的方法時，需要找的是-Array-prototype-的方法"><a href="#6-6-為什麼查詢-Array-的方法時，需要找的是-Array-prototype-的方法" class="headerlink" title="6.6 為什麼查詢 Array 的方法時，需要找的是 Array.prototype 的方法"></a>6.6 為什麼查詢 Array 的方法時，需要找的是 Array.prototype 的方法</h3><p>由下圖可以理解，在prototype後面加入的屬性是可以真的使用的</p><p><img src="https://i.imgur.com/ukGal9q.png"></p><h3 id="6-7-用-reduce-加總陣列結果"><a href="#6-7-用-reduce-加總陣列結果" class="headerlink" title="6.7 用 reduce() 加總陣列結果"></a>6.7 用 reduce() 加總陣列結果</h3><p>可以使用forEach達到一樣的效果</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> num = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, ]</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> result = <span class="number">0</span>;</span><br><span class="line">num.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> result += n</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">console</span>.log(result);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> sum = num.reduce(<span class="function"><span class="keyword">function</span> (<span class="params">result, current</span>) </span>&#123;</span><br><span class="line">    result += current;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(sum);</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/NVlaXr3.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;JS-語言基礎-06-陣列介紹&quot;&gt;&lt;a href=&quot;#JS-語言基礎-06-陣列介紹&quot; class=&quot;headerlink&quot; title=&quot;JS 語言基礎 06 陣列介紹&quot;&gt;&lt;/a&gt;JS 語言基礎 06 陣列介紹&lt;/h2&gt;&lt;p&gt;陣列是一種資料結構(Array)&lt;/</summary>
      
    
    
    
    <category term="Javascript" scheme="http://example.com/categories/Javascript/"/>
    
    
    <category term="Javascript" scheme="http://example.com/tags/Javascript/"/>
    
  </entry>
  
  <entry>
    <title>JS-語言基礎 07 瀏覽器中的JS</title>
    <link href="http://example.com/2021/03/21/JS-JS%20%E8%AA%9E%E8%A8%80%E5%9F%BA%E7%A4%8E%2007%20%E7%80%8F%E8%A6%BD%E5%99%A8%E4%B8%AD%E7%9A%84JS/"/>
    <id>http://example.com/2021/03/21/JS-JS%20%E8%AA%9E%E8%A8%80%E5%9F%BA%E7%A4%8E%2007%20%E7%80%8F%E8%A6%BD%E5%99%A8%E4%B8%AD%E7%9A%84JS/</id>
    <published>2021-03-20T16:39:04.079Z</published>
    <updated>2021-03-21T18:22:46.107Z</updated>
    
    <content type="html"><![CDATA[<h2 id="JS-語言基礎-07-瀏覽器中的JS"><a href="#JS-語言基礎-07-瀏覽器中的JS" class="headerlink" title="JS 語言基礎 07 瀏覽器中的JS"></a>JS 語言基礎 07 瀏覽器中的JS</h2><h3 id="DOM-與樹狀結構"><a href="#DOM-與樹狀結構" class="headerlink" title="DOM 與樹狀結構"></a>DOM 與樹狀結構</h3><p>甚麼是DOM</p><ul><li>Document Object Model 文件物件模型</li><li>HTML的格式須遵守W3C的規範</li><li>而遵守W3C的HTML檔案可以被解成城DOM樹(Tree)</li></ul><p>解釋DOM樹(Tree)<br><img src="https://i.imgur.com/UTb1iPm.png"></p><p>文件物件模型的意義:<br><img src="https://i.imgur.com/9QAkMzK.png"></p><h3 id="在瀏覽器觀察-DOM-Tree-與-document-物件"><a href="#在瀏覽器觀察-DOM-Tree-與-document-物件" class="headerlink" title="在瀏覽器觀察 DOM Tree 與 document 物件"></a>在瀏覽器觀察 DOM Tree 與 document 物件</h3><p>在開發者瀏覽器打上document後:</p><p>會顯現出上方文件物件模型的意義</p><p><img src="https://i.imgur.com/9QAkMzK.png"></p><p><img src="https://i.imgur.com/99I45nJ.png"></p><h3 id="什麼是-API"><a href="#什麼是-API" class="headerlink" title="什麼是 API"></a>什麼是 API</h3><ul><li>Application Programming Interface</li><li>應用程式 編程 介面</li><li>透過寫程式來跟網頁上的功能(像是email google MAP搜尋等等)溝通</li></ul><h3 id="瀏覽-document-物件-API-文件"><a href="#瀏覽-document-物件-API-文件" class="headerlink" title="瀏覽 document 物件 API 文件"></a>瀏覽 document 物件 API 文件</h3><p><a href="https://developer.mozilla.org/zh-TW/docs/Web/API/document">document Web API</a></p><p><a href="https://www.w3schools.com/js/js_api_intro.asp">W3Cschool Web API</a></p><h3 id="BOM-與-window-物件"><a href="#BOM-與-window-物件" class="headerlink" title="BOM 與 window 物件"></a>BOM 與 window 物件</h3><ul><li>Browser Object Model 瀏覽器物件模型</li><li>就是 window 物件 就是整個瀏覽器所以其實不用打出來也可以有效果</li></ul><p><img src="https://i.imgur.com/6dViT6V.png"></p><p><img src="https://i.imgur.com/i6LTlLd.png"></p><h4 id="Location"><a href="#Location" class="headerlink" title="Location:"></a>Location:</h4><p><img src="https://i.imgur.com/3rsiA8V.png"></p><h4 id="History-back-go"><a href="#History-back-go" class="headerlink" title="History back() , go()"></a>History back() , go()</h4><p>back()</p><p>可以直接回到上一頁</p><p>go()必須加數字在參數的地方</p><p>可以去下一頁</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;JS-語言基礎-07-瀏覽器中的JS&quot;&gt;&lt;a href=&quot;#JS-語言基礎-07-瀏覽器中的JS&quot; class=&quot;headerlink&quot; title=&quot;JS 語言基礎 07 瀏覽器中的JS&quot;&gt;&lt;/a&gt;JS 語言基礎 07 瀏覽器中的JS&lt;/h2&gt;&lt;h3 id=&quot;D</summary>
      
    
    
    
    <category term="Javascript" scheme="http://example.com/categories/Javascript/"/>
    
    
    <category term="Javascript" scheme="http://example.com/tags/Javascript/"/>
    
  </entry>
  
  <entry>
    <title>JS-語言基礎 08 ES6</title>
    <link href="http://example.com/2021/03/21/JS-JS%20%E8%AA%9E%E8%A8%80%E5%9F%BA%E7%A4%8E%2008%20ES6/"/>
    <id>http://example.com/2021/03/21/JS-JS%20%E8%AA%9E%E8%A8%80%E5%9F%BA%E7%A4%8E%2008%20ES6/</id>
    <published>2021-03-20T16:39:04.079Z</published>
    <updated>2021-03-21T18:22:50.885Z</updated>
    
    <content type="html"><![CDATA[<h2 id="JS-語言基礎-08-ES6"><a href="#JS-語言基礎-08-ES6" class="headerlink" title="JS 語言基礎 08 ES6"></a>JS 語言基礎 08 ES6</h2><h3 id="01-let-與-const-作用域改變成大括號會怎麼樣"><a href="#01-let-與-const-作用域改變成大括號會怎麼樣" class="headerlink" title="01 let 與 const 作用域改變成大括號會怎麼樣"></a>01 let 與 const 作用域改變成大括號會怎麼樣</h3><p>let與const 對比舊時代的var</p><p>1.作用域的改變</p><ul><li>var=&gt; function</li><li>let,const =&gt;{}</li></ul><h4 id="Example1"><a href="#Example1" class="headerlink" title="Example1:"></a>Example1:</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`迴圈跑第<span class="subst">$&#123;i&#125;</span>次`</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(i);</span><br></pre></td></tr></table></figure><p>很明顯的地方是外面的var i = 0被裡面的迴圈汙染到所以傳回來的結果是10<br><img src="https://i.imgur.com/wexESY7.png"></p><p>所以改成let做操作時因為其作用域是{}因此沒有汙染到外面來</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`迴圈跑第<span class="subst">$&#123;i&#125;</span>次`</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(i);</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/za2DaSb.png"></p><h4 id="Example2"><a href="#Example2" class="headerlink" title="Example2:"></a>Example2:</h4><p>用在判斷式上面更明顯使用var來操作的話這邊的結果是會直接跑進判斷式中</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (x === <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> x = <span class="number">5</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> x = <span class="number">10</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(x);</span><br></pre></td></tr></table></figure><p>印出結果為5<br><img src="https://i.imgur.com/ocAUxF2.png"></p><p>全面改成使用let</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> x = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (x === <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> x = <span class="number">5</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> x = <span class="number">10</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(x);</span><br></pre></td></tr></table></figure><p>印出結果就沒有被汙染瞜</p><p><img src="https://i.imgur.com/BCKG9mX.png"></p><h4 id="Example3"><a href="#Example3" class="headerlink" title="Example3:"></a>Example3:</h4><p>使用大括號的效果跟IFEE一樣</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//IIFE立即函式</span></span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params">$</span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> x = <span class="number">1</span>;</span><br><span class="line">&#125;)(jQuery);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;<span class="keyword">let</span> x =<span class="number">1</span>;&#125;</span><br></pre></td></tr></table></figure><h4 id="支援度"><a href="#支援度" class="headerlink" title="支援度"></a>支援度</h4><ul><li>chrome已經全面支援使用</li><li>但是IE部分還沒，所以舊的寫法還是需要了解</li><li>使用babel 做編譯 ES6 =&gt;ES5</li></ul><h3 id="02-const-常數與注意事項"><a href="#02-const-常數與注意事項" class="headerlink" title="02 const 常數與注意事項"></a>02 const 常數與注意事項</h3><p>const 定義了之後不可以改變的變數</p><p><img src="https://i.imgur.com/V3Z9eDz.png"></p><h4 id="重要例外"><a href="#重要例外" class="headerlink" title="重要例外"></a>重要例外</h4><p>當常數定義物件的時候裡面的值是可以改變的並不會報錯</p><p><img src="https://i.imgur.com/PkrU1Ti.png"></p><p>但是如果你在複寫一次物件就會出問題摟!<br><img src="https://i.imgur.com/B4TwpLl.png"></p><h3 id="03-解構賦值陣列與物件為什麼可以這樣寫"><a href="#03-解構賦值陣列與物件為什麼可以這樣寫" class="headerlink" title="03 解構賦值陣列與物件為什麼可以這樣寫"></a>03 解構賦值陣列與物件為什麼可以這樣寫</h3><h4 id="陣列的解構賦值"><a href="#陣列的解構賦值" class="headerlink" title="陣列的解構賦值"></a>陣列的解構賦值</h4><p><img src="https://i.imgur.com/gKme5TF.png"></p><p>解構賦值的其中一種用法:讓賦值變簡潔<br><img src="https://i.imgur.com/FdPG2N1.png"></p><h4 id="物件的的解構賦值"><a href="#物件的的解構賦值" class="headerlink" title="物件的的解構賦值"></a>物件的的解構賦值</h4><p>前面let的部分其實是縮寫</p><p><code>let&#123;a:a,b:a&#125;</code>是原本的樣子</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> &#123;a,b&#125; = &#123;<span class="attr">a</span>: <span class="number">111</span>,<span class="attr">b</span>: <span class="number">222</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;a:&quot;</span> + a, <span class="string">&quot;b:&quot;</span> + b);</span><br></pre></td></tr></table></figure><h3 id="04-for-in-for-of-的區別"><a href="#04-for-in-for-of-的區別" class="headerlink" title="04 for in, for of 的區別"></a>04 for in, for of 的區別</h3><h4 id="for-of-用來迭代可以迭代的物件"><a href="#for-of-用來迭代可以迭代的物件" class="headerlink" title="for of 用來迭代可以迭代的物件"></a>for of 用來迭代可以迭代的物件</h4><blockquote><p>可以迭代的對象包含:<br>Array，Map，Set，String，TypedArray，arguments</p></blockquote><p><img src="https://i.imgur.com/A1qG3Jv.png"></p><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Statements/for...of">for of -MDN</a></p><h4 id="for-in"><a href="#for-in" class="headerlink" title="for in"></a>for in</h4><blockquote><p>迭代可以列舉的屬性</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> object = &#123;</span><br><span class="line">    a: <span class="number">1</span>,</span><br><span class="line">    b: <span class="number">2</span>,</span><br><span class="line">    c: <span class="number">3</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">show_props</span>(<span class="params">obj, objName</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> result = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> prop <span class="keyword">in</span> obj) &#123;</span><br><span class="line">        result += objName + <span class="string">&quot;.&quot;</span> + prop + <span class="string">&quot; = &quot;</span> + obj[prop] + <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 前方的參數是要引入的object 後方是物件的名字</span></span><br><span class="line">alert(show_props(object, <span class="string">&quot;物件&quot;</span>));</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/2jQmrqW.png"></p><h3 id="05-Iterator-迭代器是什麼-如何使用"><a href="#05-Iterator-迭代器是什麼-如何使用" class="headerlink" title="05 Iterator 迭代器是什麼? 如何使用"></a>05 Iterator 迭代器是什麼? 如何使用</h3><h4 id="可迭代協議（iterable-protocol）"><a href="#可迭代協議（iterable-protocol）" class="headerlink" title="可迭代協議（iterable protocol）"></a>可迭代協議（iterable protocol）</h4><p>一個物件如果要被迭代他必須有這個屬性<code>[Symbol.iterator]</code></p><p>而當這個物件需要被迭代的時候這個屬性的不需要引入參數的函式(下方圖片)就會被呼叫來獲得被迭代的值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> myStings = <span class="string">&quot;123&quot;</span>;</span><br><span class="line"></span><br><span class="line">myStings[<span class="built_in">Symbol</span>.iterator]();</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(myStings[<span class="built_in">Symbol</span>.iterator]());</span><br></pre></td></tr></table></figure><p>String Iterator<br><img src="https://i.imgur.com/Ofzt0LW.png"></p><h4 id="迭代器協議（iterator-protocol）"><a href="#迭代器協議（iterator-protocol）" class="headerlink" title="迭代器協議（iterator protocol）"></a>迭代器協議（iterator protocol）</h4><p>迭代器協議定義了一個標準的方式來產生迭代的有限或是無限的值並且都會回傳一個值，而next()就是一個迭代器</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> myStings = <span class="string">&quot;hello&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> iterator = myStings[<span class="built_in">Symbol</span>.iterator]();</span><br></pre></td></tr></table></figure><p>之後在chrome呼叫方法next()就可以迭代出字串摟</p><p><img src="https://i.imgur.com/7gelfsm.png"></p><h4 id="迭代array"><a href="#迭代array" class="headerlink" title="迭代array"></a>迭代array</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> myArray = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> arrayIterator = myArray[<span class="built_in">Symbol</span>.iterator]();</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/x24qipJ.png"></p><h3 id="06-for-of-的使用方法"><a href="#06-for-of-的使用方法" class="headerlink" title="06 for of 的使用方法"></a>06 for of 的使用方法</h3><p>從上面解釋過迭代的原理後下方這邊的用法就清楚多了</p><h4 id="for-of-字串的迭代"><a href="#for-of-字串的迭代" class="headerlink" title="for of:字串的迭代"></a>for of:字串的迭代</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> myStings = <span class="string">&quot;hello&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> str <span class="keyword">of</span> myStings) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(str);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/JhVcBmq.png"></p><h4 id="for-of-陣列的迭代"><a href="#for-of-陣列的迭代" class="headerlink" title="for of 陣列的迭代"></a>for of 陣列的迭代</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">let</span> myArray = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i <span class="keyword">of</span> myArray) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/zm9dNdj.png"></p><h3 id="07-樣板字面值Template-Iterator與字串字面值String-Iterator"><a href="#07-樣板字面值Template-Iterator與字串字面值String-Iterator" class="headerlink" title="07 樣板字面值Template Iterator與字串字面值String Iterator"></a>07 樣板字面值Template Iterator與字串字面值String Iterator</h3><ul><li>使用的符號不一樣使用(``)來包裹住文字</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&quot;123&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> str2 = <span class="string">`123`</span>;</span><br></pre></td></tr></table></figure><ul><li>斷行</li></ul><p>Template Iterator可以直接空格下去不需要使用跳脫字元\n</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&quot;123 \n 123&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> str2 = <span class="string">`123</span></span><br><span class="line"><span class="string">123`</span>;</span><br></pre></td></tr></table></figure><ul><li>嵌入變數</li></ul><p>可以直接在字串串接中放入變數</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> name = <span class="string">&quot;john&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> str2 = <span class="string">`my name is <span class="subst">$&#123;name&#125;</span>`</span>;</span><br></pre></td></tr></table></figure><p>ES5的寫法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> name = <span class="string">&quot;john&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> str2 = <span class="string">&quot;my name is &quot;</span> + name;</span><br></pre></td></tr></table></figure><h3 id="08-展開運算子-Spread-Operator"><a href="#08-展開運算子-Spread-Operator" class="headerlink" title="08 展開運算子 Spread Operator"></a>08 展開運算子 Spread Operator</h3><h4 id="印出其值"><a href="#印出其值" class="headerlink" title="印出其值"></a>印出其值</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>];</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(...arr1);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/zaP2dyN.png"></p><p>例子</p><p>數學方法Math.min()取最小值參數不能放入陣列這個時候就可以使用展開運算子</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>];</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.min(arr1));</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/QRqoJvl.png"></p><p>這樣就可以正常使用搂!</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>];</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.min(...arr1)); <span class="comment">// 印出最小值為 1 </span></span><br></pre></td></tr></table></figure><h4 id="陣列串接"><a href="#陣列串接" class="headerlink" title="陣列串接"></a>陣列串接</h4><p>把內容物有重疊的兩個陣列構成新的陣列</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> arr2 = [<span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> arr3 = [...arr1, ...arr2];</span><br></pre></td></tr></table></figure><p>這樣的寫法會等於<code>arr1.concat(arr2)</code></p><p><img src="https://i.imgur.com/TPTXpLY.png"></p><h4 id="物件的串接"><a href="#物件的串接" class="headerlink" title="物件的串接"></a>物件的串接</h4><p>把內容物有重疊的屬性直接用o2取代掉，後方的新屬性會取代掉舊的屬性</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> o1 = &#123; <span class="attr">a</span>: <span class="number">1</span>, <span class="attr">b</span>: <span class="number">2</span>, <span class="attr">c</span>: <span class="number">3</span> &#125;;</span><br><span class="line"><span class="keyword">let</span> o2 = &#123; <span class="attr">c</span>: <span class="number">100</span>, <span class="attr">d</span>: <span class="number">4</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> o3 = &#123; ...o1, ...o2 &#125;;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/4UgB52N.png"></p><h3 id="09-箭頭函式-1"><a href="#09-箭頭函式-1" class="headerlink" title="09 箭頭函式(1)"></a>09 箭頭函式(1)</h3><p>怎麼樣寫會有回傳值, 怎麼樣寫不會有回傳值</p><p>有回傳值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> function1 = <span class="function"><span class="params">x</span> =&gt;</span> x+<span class="number">1</span></span><br></pre></td></tr></table></figure><p>無回傳值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> function1 = <span class="function"><span class="params">x</span> =&gt;</span> &#123;x+<span class="number">1</span>&#125; </span><br></pre></td></tr></table></figure><h3 id="箭頭函式-2"><a href="#箭頭函式-2" class="headerlink" title="箭頭函式(2)"></a>箭頭函式(2)</h3><p>call 與 this</p><p>這邊this的指向是window</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">greet</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> reply = <span class="string">`Hi, <span class="subst">$&#123;<span class="built_in">this</span>.person&#125;</span>`</span>;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="built_in">this</span>);</span><br><span class="line">&#125;;</span><br><span class="line">greet();</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/PeZfz24.png"></p><p>如果我們想要改變this的指向可以使用<code>call()</code>這個方法讓this去呼叫到obj裡面的屬性</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">greet</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> reply = <span class="string">`Hi, <span class="subst">$&#123;<span class="built_in">this</span>.person&#125;</span>`</span>;</span><br><span class="line">  <span class="built_in">console</span>.log(reply);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> obj = &#123; <span class="attr">person</span>: <span class="string">&quot;BIll&quot;</span> &#125;;</span><br><span class="line"></span><br><span class="line">greet.call(obj);</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/UWNoqdP.png"></p><h3 id="箭頭函式-3"><a href="#箭頭函式-3" class="headerlink" title="箭頭函式(3)"></a>箭頭函式(3)</h3><p>this 綁定的對象不再是function本身</p><h4 id="使用ES5的函式寫法"><a href="#使用ES5的函式寫法" class="headerlink" title="使用ES5的函式寫法"></a>使用ES5的函式寫法</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> obj = &#123; <span class="attr">person</span>: <span class="string">&quot;BIll&quot;</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">greet</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> reply = <span class="string">`Hi, <span class="subst">$&#123;<span class="built_in">this</span>.person&#125;</span>`</span>;</span><br><span class="line">  <span class="built_in">console</span>.log(reply);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;Hi,&quot;</span>, <span class="built_in">this</span>.perosn);</span><br><span class="line">  &#125;,<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">greet.call(obj);</span><br></pre></td></tr></table></figure><p>因為function 內部的作用域會是隔開地所以是未定義(undefined)<br><img src="https://i.imgur.com/Dl7tOZ1.png"></p><h4 id="使用ES6箭頭函式"><a href="#使用ES6箭頭函式" class="headerlink" title="使用ES6箭頭函式"></a>使用ES6箭頭函式</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> obj = &#123; <span class="attr">person</span>: <span class="string">&quot;BIll&quot;</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">greet</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> reply = <span class="string">`Hi, <span class="subst">$&#123;<span class="built_in">this</span>.person&#125;</span>`</span>;</span><br><span class="line">  <span class="built_in">console</span>.log(reply);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;Hi,&quot;</span>, <span class="built_in">this</span>.person);</span><br><span class="line">  &#125;, <span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">greet.call(obj);</span><br></pre></td></tr></table></figure><p>箭頭函式不會有作用域的隔閡所以不會影響到this，所以它是一樣吃到外面的obj<br><img src="https://i.imgur.com/4iyrpM9.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;JS-語言基礎-08-ES6&quot;&gt;&lt;a href=&quot;#JS-語言基礎-08-ES6&quot; class=&quot;headerlink&quot; title=&quot;JS 語言基礎 08 ES6&quot;&gt;&lt;/a&gt;JS 語言基礎 08 ES6&lt;/h2&gt;&lt;h3 id=&quot;01-let-與-const-作用</summary>
      
    
    
    
    <category term="Javascript" scheme="http://example.com/categories/Javascript/"/>
    
    
    <category term="Javascript" scheme="http://example.com/tags/Javascript/"/>
    
  </entry>
  
  <entry>
    <title>JS-語言基礎 05 物件介紹</title>
    <link href="http://example.com/2021/03/21/JS-JS%20%E8%AA%9E%E8%A8%80%E5%9F%BA%E7%A4%8E%2005%20%E7%89%A9%E4%BB%B6%E4%BB%8B%E7%B4%B9/"/>
    <id>http://example.com/2021/03/21/JS-JS%20%E8%AA%9E%E8%A8%80%E5%9F%BA%E7%A4%8E%2005%20%E7%89%A9%E4%BB%B6%E4%BB%8B%E7%B4%B9/</id>
    <published>2021-03-20T16:37:50.826Z</published>
    <updated>2021-03-21T18:22:38.353Z</updated>
    
    <content type="html"><![CDATA[<h2 id="JS-語言基礎-05-物件介紹"><a href="#JS-語言基礎-05-物件介紹" class="headerlink" title="JS 語言基礎 05 物件介紹"></a>JS 語言基礎 05 物件介紹</h2><h3 id="JS中的物件"><a href="#JS中的物件" class="headerlink" title="JS中的物件"></a>JS中的物件</h3><p><img src="https://i.imgur.com/LUWH97H.png"></p><ul><li>用大括號宣告({})</li><li>鍵值對應(key value pairs)</li><li>值又稱屬性(attribute)</li></ul><p><img src="https://i.imgur.com/iAa2ft0.png"></p><h3 id="物件的創建"><a href="#物件的創建" class="headerlink" title="物件的創建:"></a>物件的創建:</h3><p>實際的例子:<br><img src="https://i.imgur.com/BTEz50W.png"></p><p>使用attribute的方法:</p><ul><li>使用(.)</li><li>使用[‘’]</li></ul><p><img src="https://i.imgur.com/wgz7dl0.png"></p><p>記得呼叫物件的function要使用括號喔!()</p><p><img src="https://i.imgur.com/CPDOeUz.png"></p><h3 id="添加屬性至物件上"><a href="#添加屬性至物件上" class="headerlink" title="添加屬性至物件上"></a>添加屬性至物件上</h3><p>添加的方式如下:</p><ul><li>使用(.)</li><li>使用[‘’]</li><li>function添加的方式</li></ul><p><img src="https://i.imgur.com/67DDc7b.png"><br><img src="https://i.imgur.com/Si6hoZe.png"></p><p>添加後的屬性<br><img src="https://i.imgur.com/LKsFFo0.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;JS-語言基礎-05-物件介紹&quot;&gt;&lt;a href=&quot;#JS-語言基礎-05-物件介紹&quot; class=&quot;headerlink&quot; title=&quot;JS 語言基礎 05 物件介紹&quot;&gt;&lt;/a&gt;JS 語言基礎 05 物件介紹&lt;/h2&gt;&lt;h3 id=&quot;JS中的物件&quot;&gt;&lt;a hr</summary>
      
    
    
    
    <category term="Javascript" scheme="http://example.com/categories/Javascript/"/>
    
    
    <category term="Javascript" scheme="http://example.com/tags/Javascript/"/>
    
  </entry>
  
  <entry>
    <title>JS-語言基礎 03 控制流程 Control Flow</title>
    <link href="http://example.com/2021/03/21/JS-JS%20%E8%AA%9E%E8%A8%80%E5%9F%BA%E7%A4%8E%2003%20%E6%8E%A7%E5%88%B6%E6%B5%81%E7%A8%8B%20Control%20Flow/"/>
    <id>http://example.com/2021/03/21/JS-JS%20%E8%AA%9E%E8%A8%80%E5%9F%BA%E7%A4%8E%2003%20%E6%8E%A7%E5%88%B6%E6%B5%81%E7%A8%8B%20Control%20Flow/</id>
    <published>2021-03-20T16:33:02.081Z</published>
    <updated>2021-03-21T18:22:28.832Z</updated>
    
    <content type="html"><![CDATA[<h2 id="JS-語言基礎-03-控制流程-Control-Flow"><a href="#JS-語言基礎-03-控制流程-Control-Flow" class="headerlink" title="JS 語言基礎 03 控制流程 Control Flow"></a>JS 語言基礎 03 控制流程 Control Flow</h2><h3 id="if-else-if-else"><a href="#if-else-if-else" class="headerlink" title="if else if else:"></a>if else if else:</h3><p>如果判斷內容顯示true則跑所屬下方程式碼不然就是繼續往下判斷</p><p><img src="https://i.imgur.com/cNEfylI.png"></p><h3 id="switch"><a href="#switch" class="headerlink" title="switch"></a>switch</h3><p>跟if的判斷式很像，但要注意break不然程式會一直跑下去部跳出迴圈</p><p><img src="https://i.imgur.com/77yyb2Z.png"></p><h3 id="for"><a href="#for" class="headerlink" title="for"></a>for</h3><h4 id="基本的for迴圈"><a href="#基本的for迴圈" class="headerlink" title="基本的for迴圈:"></a>基本的for迴圈:</h4><p>包含了 (初始值 終止條件 每次執行的語句)</p><p>迭代: 逐一的印出來</p><p><img src="https://i.imgur.com/Pfz23lY.png"></p><h4 id="倒著數回來的綿羊"><a href="#倒著數回來的綿羊" class="headerlink" title="倒著數回來的綿羊~"></a>倒著數回來的綿羊~</h4><p><img src="https://i.imgur.com/v6mpbCu.png"></p><h4 id="組合技-數到31隻的時候睡著了-第10隻的時候有點想睡"><a href="#組合技-數到31隻的時候睡著了-第10隻的時候有點想睡" class="headerlink" title="組合技 數到31隻的時候睡著了 第10隻的時候有點想睡"></a>組合技 數到31隻的時候睡著了 第10隻的時候有點想睡</h4><p><img src="https://i.imgur.com/Ihh2aEC.png"></p><h4 id="跳著數綿羊"><a href="#跳著數綿羊" class="headerlink" title="跳著數綿羊"></a>跳著數綿羊</h4><p><img src="https://i.imgur.com/K13mpV6.png"></p><h4 id="跳過特定數字的綿羊"><a href="#跳過特定數字的綿羊" class="headerlink" title="跳過特定數字的綿羊"></a>跳過特定數字的綿羊</h4><p>使用<code>continue</code></p><p><img src="https://i.imgur.com/NMQffWx.png"></p><h3 id="while"><a href="#while" class="headerlink" title="while"></a>while</h3><p>比較攏長的寫法不過還是要懂~</p><p><img src="https://i.imgur.com/e1s86SP.png"></p><h3 id="do-while"><a href="#do-while" class="headerlink" title="do..while"></a>do..while</h3><p>先跑一次，再判斷要不要繼續跑</p><p>直接跑出第十一隻綿羊 因為它會先進一次迴圈</p><p><img src="https://i.imgur.com/EpL1orX.png"></p><h3 id="九九乘法表"><a href="#九九乘法表" class="headerlink" title="九九乘法表"></a>九九乘法表</h3><p>使用雙重迴圈加上字串串接</p><p>當i = 1<br>  j會開始印出1~10</p><p>當i = 2<br>  j會開始印出1~10</p><p>  把兩者放入字串串接之後就完成瞜~</p><p><img src="https://i.imgur.com/29lA79T.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;JS-語言基礎-03-控制流程-Control-Flow&quot;&gt;&lt;a href=&quot;#JS-語言基礎-03-控制流程-Control-Flow&quot; class=&quot;headerlink&quot; title=&quot;JS 語言基礎 03 控制流程 Control Flow&quot;&gt;&lt;/a&gt;JS</summary>
      
    
    
    
    <category term="Javascript" scheme="http://example.com/categories/Javascript/"/>
    
    
    <category term="Javascript" scheme="http://example.com/tags/Javascript/"/>
    
  </entry>
  
  <entry>
    <title>JS-語言基礎 04 function</title>
    <link href="http://example.com/2021/03/21/JS-JS%20%E8%AA%9E%E8%A8%80%E5%9F%BA%E7%A4%8E%2004%20function/"/>
    <id>http://example.com/2021/03/21/JS-JS%20%E8%AA%9E%E8%A8%80%E5%9F%BA%E7%A4%8E%2004%20function/</id>
    <published>2021-03-20T16:33:02.081Z</published>
    <updated>2021-03-21T18:22:33.928Z</updated>
    
    <content type="html"><![CDATA[<h2 id="JS-語言基礎-04-function"><a href="#JS-語言基礎-04-function" class="headerlink" title="JS 語言基礎 04 function"></a>JS 語言基礎 04 function</h2><p>DRY = don’t repeat yourself</p><p>盡量避免重複讓他工具化就是function的目的瞜!</p><p><img src="https://i.imgur.com/nHJ7rDY.png"></p><h3 id="了解表達式-Expression-與陳述句-Statement-的差異"><a href="#了解表達式-Expression-與陳述句-Statement-的差異" class="headerlink" title="了解表達式(Expression)與陳述句(Statement)的差異"></a>了解表達式(Expression)與陳述句(Statement)的差異</h3><ul><li>陳述句(Statement)</li></ul><p>不會有值</p><p>如　if else,switch</p><ul><li>表達式(Expression)</li></ul><p>一定會有值</p><p>如 1 + 1</p><h3 id="使用函式陳述式-Function-Statement-與函式表達式-Function-Expression"><a href="#使用函式陳述式-Function-Statement-與函式表達式-Function-Expression" class="headerlink" title="使用函式陳述式(Function Statement)與函式表達式(Function Expression)"></a>使用函式陳述式(Function Statement)與函式表達式(Function Expression)</h3><ul><li>函式陳述式(Function Statement)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">helloFunctionStatement</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;hello function statement !!!&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">helloFunctionStatement()</span><br></pre></td></tr></table></figure><ul><li>函式表達式(Function Expression)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> helloFunctionExpression = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;hello function Expression !!!&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">helloFunctionExpression()</span><br></pre></td></tr></table></figure><ul><li>Hoisting 變數提升</li></ul><p>它讓函式陳述式可以先呼叫函式在執行他的身體</p><p><img src="https://i.imgur.com/qMf63CS.png"></p><p>函式表達式則不行呼叫函式一定要寫在身體下方</p><p><img src="https://i.imgur.com/CJzxbrr.png"></p><h3 id="變數能夠影響的範圍作用域-Scope"><a href="#變數能夠影響的範圍作用域-Scope" class="headerlink" title="變數能夠影響的範圍作用域( Scope )"></a>變數能夠影響的範圍作用域( Scope )</h3><p><img src="https://i.imgur.com/9HZOB1r.png"></p><p>印出的結果是 </p><p>150<br>100</p><p>代表funciton裏面的變數不會影響到外面的</p><p>但是如果function裡面的關鍵字var 或是 let const 忘記寫了就會影響到外面的變數瞜!</p><p><img src="https://i.imgur.com/ElbwThz.png"></p><p>印出的結果是 </p><p>150<br>150</p><h3 id="全域變數與區域變數"><a href="#全域變數與區域變數" class="headerlink" title="全域變數與區域變數"></a>全域變數與區域變數</h3><p>在function內宣告的變數就是區域變數<br><img src="https://i.imgur.com/r55q1PP.png"></p><p>不再function內的話就是全域變數可以被當作property被window使用<br><img src="https://i.imgur.com/kXFHVro.png"></p><p>不是變數 (會被存取成屬性(property))</p><p><img src="https://i.imgur.com/KJ3S0XN.png"></p><p>當包含不是變數的function被呼叫執行後這個不是變數的部分也可以被當作property被window使用瞜!</p><p><img src="https://i.imgur.com/GosNh9F.png"></p><h3 id="回呼函數-Callback-Function-把函數做為參數傳遞"><a href="#回呼函數-Callback-Function-把函數做為參數傳遞" class="headerlink" title="回呼函數 Callback Function - 把函數做為參數傳遞"></a>回呼函數 Callback Function - 把函數做為參數傳遞</h3><p>這樣寫就可以把把函數做為參數傳遞:</p><p>當中的alert就可以改成各種方法去執行這個函式瞜<br><img src="https://i.imgur.com/GBM4gEb.png"></p><h3 id="匿名函式"><a href="#匿名函式" class="headerlink" title="匿名函式"></a>匿名函式</h3><p>下方的函式沒有名稱的部分就是匿名函式並且它只能放在回乎函式之中等待被呼叫的時候才使用</p><p>匿名的因為是因為它是預計要被傳進去的函式</p><p><img src="https://i.imgur.com/ztMucl2.png"></p><h3 id="IIFE-立即函式"><a href="#IIFE-立即函式" class="headerlink" title="IIFE 立即函式"></a>IIFE 立即函式</h3><p>使用的理由是避免一些不必要的汙染(變數的部分)</p><p><img src="https://i.imgur.com/8AbEP3T.png"></p><ul><li>全名: Immediately Invoked Functions Expression</li><li>可以立即呼叫的函式表達式</li><li>表達式: expression 它會回傳值</li><li>使用立即函式 會立刻執行函式</li></ul><p><img src="https://i.imgur.com/x18fhcO.png"></p><h3 id="hoisting-變數提升"><a href="#hoisting-變數提升" class="headerlink" title="hoisting 變數提升"></a>hoisting 變數提升</h3><p>不管在哪一行做的變數都視為在第一行做宣告</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//一開始的樣子</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(x);<span class="comment">// 結果是undefined因為它實際上長這樣</span></span><br><span class="line"></span><br><span class="line">----------</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> x;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(x);</span><br><span class="line"></span><br><span class="line"><span class="comment">//實際上內建提升上去變數</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>看四個console.log()的印出結果:</p><p>第一個紅色框是undefined</p><p>第二個是10</p><p>第三個是undefined</p><p>第四個是20</p><p>原樣:<br><img src="https://i.imgur.com/kP0yVPP.png"></p><p>提升後的樣子:<br><img src="https://i.imgur.com/zRGav1B.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;JS-語言基礎-04-function&quot;&gt;&lt;a href=&quot;#JS-語言基礎-04-function&quot; class=&quot;headerlink&quot; title=&quot;JS 語言基礎 04 function&quot;&gt;&lt;/a&gt;JS 語言基礎 04 function&lt;/h2&gt;&lt;p&gt;DR</summary>
      
    
    
    
    <category term="Javascript" scheme="http://example.com/categories/Javascript/"/>
    
    
    <category term="Javascript" scheme="http://example.com/tags/Javascript/"/>
    
  </entry>
  
  <entry>
    <title>JS-語言基礎 02 運算元與運算子</title>
    <link href="http://example.com/2021/03/21/JS-JS%20%E8%AA%9E%E8%A8%80%E5%9F%BA%E7%A4%8E%2002%20%E9%81%8B%E7%AE%97%E5%85%83%E8%88%87%E9%81%8B%E7%AE%97%E5%AD%90/"/>
    <id>http://example.com/2021/03/21/JS-JS%20%E8%AA%9E%E8%A8%80%E5%9F%BA%E7%A4%8E%2002%20%E9%81%8B%E7%AE%97%E5%85%83%E8%88%87%E9%81%8B%E7%AE%97%E5%AD%90/</id>
    <published>2021-03-20T16:25:09.230Z</published>
    <updated>2021-03-21T18:22:24.532Z</updated>
    
    <content type="html"><![CDATA[<h2 id="JS-語言基礎-02-運算元與運算子"><a href="#JS-語言基礎-02-運算元與運算子" class="headerlink" title="JS 語言基礎 02 運算元與運算子"></a>JS 語言基礎 02 運算元與運算子</h2><p>下圖中 1, 2 的部分是運算元，(+)就是運算子，整段式子為運算式</p><p><img src="https://i.imgur.com/F9oedTH.png"></p><h3 id="比較運算子介紹-大於小於-與等於screenflow"><a href="#比較運算子介紹-大於小於-與等於screenflow" class="headerlink" title="比較運算子介紹 大於小於.與等於screenflow"></a>比較運算子介紹 大於小於.與等於screenflow</h3><p>這邊的觀念比較直覺只要內容是正確的就顯示true反之則顯示false</p><p><img src="https://i.imgur.com/EwkmXyu.png"></p><h3 id="比較運算子第二部分-三個等於與兩個等於-有什麼不一樣"><a href="#比較運算子第二部分-三個等於與兩個等於-有什麼不一樣" class="headerlink" title="比較運算子第二部分 三個等於與兩個等於 有什麼不一樣"></a>比較運算子第二部分 三個等於與兩個等於 有什麼不一樣</h3><ul><li>一個等於是指派賦值運算子</li></ul><p><img src="https://i.imgur.com/4rFvd13.png"></p><ul><li>兩個等於不是嚴格的比較</li></ul><p>所以下圖就算是型別不同還是會判斷成這樣</p><p><img src="https://i.imgur.com/qx46t5f.png"></p><ul><li>三個等於是嚴格的比較</li></ul><p>實務中也比較常使用</p><p><img src="https://i.imgur.com/wkiL9kW.png"></p><h3 id="算數運算子-加減乘除"><a href="#算數運算子-加減乘除" class="headerlink" title="算數運算子 加減乘除"></a>算數運算子 加減乘除</h3><p>這邊觀念比較簡單<br><img src="https://i.imgur.com/8tsDdJx.png"></p><h3 id="算數運算子-餘數與被除數"><a href="#算數運算子-餘數與被除數" class="headerlink" title="算數運算子 餘數與被除數"></a>算數運算子 餘數與被除數</h3><p>這邊觀念比較簡單</p><p>(%)這個運算子可以計算出餘數<br><img src="https://i.imgur.com/uZ2rxFD.png"></p><h3 id="邏輯運算子-AND-amp-amp-與-OR"><a href="#邏輯運算子-AND-amp-amp-與-OR" class="headerlink" title="邏輯運算子 AND (&amp;&amp;) 與 OR(||)"></a>邏輯運算子 AND (&amp;&amp;) 與 OR(||)</h3><p>(||)</p><p>只要有一個是true就是true</p><p><img src="https://i.imgur.com/0x5Fr9b.png"></p><p>(&amp;&amp;)</p><p>兩邊必須一樣才是true</p><p><img src="https://i.imgur.com/q92vvGV.png"><br><img src="https://i.imgur.com/IaaX9lR.png"></p><p>進階的例子:</p><p>就算前面是false但是因為是(||)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(<span class="number">3</span>==<span class="number">2</span>) || <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">=&gt;<span class="literal">true</span></span><br></pre></td></tr></table></figure><p>因為&amp;&amp;這個運算符必須兩個都跑過所以會跑到第二個</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="number">5</span></span><br><span class="line">y =<span class="number">2</span></span><br><span class="line"></span><br><span class="line">(x-y) &amp;&amp; (y-<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">=&gt; <span class="number">1</span></span><br></pre></td></tr></table></figure><p>左邊如果是false會直接返回false<br><img src="https://i.imgur.com/SN7fByu.png"></p><p>如果是(||)就會左邊的跑完就出結果</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="number">5</span></span><br><span class="line">y =<span class="number">2</span></span><br><span class="line"></span><br><span class="line">(x-y) || (y-<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">=&gt; <span class="number">1</span></span><br></pre></td></tr></table></figure><p>這邊卻會繼續執行是比較不一樣的地方</p><p><img src="https://i.imgur.com/nRZaUGG.png"></p><p>或等於 (||=)</p><p><img src="https://i.imgur.com/X6EedzQ.png"></p><p>如果有預設值則跑預設值的結果</p><p><img src="https://i.imgur.com/AqAlpQS.png"></p><h3 id="邏輯運算子-NOT"><a href="#邏輯運算子-NOT" class="headerlink" title="邏輯運算子 NOT (!)"></a>邏輯運算子 NOT (!)</h3><p>不等於!!</p><p><img src="https://i.imgur.com/gWqzZXN.png"></p><h3 id="三元運算子"><a href="#三元運算子" class="headerlink" title="三元運算子"></a>三元運算子</h3><p>這句話很好的解釋了三元運算子的運算式<br><img src="https://i.imgur.com/I1Tg8LV.png"></p><p>如果1&gt;=3 我就印出a 不然我就印出b</p><p>明顯問句是1不大於等於3錯得所以印出b</p><p><img src="https://i.imgur.com/YEOuI5J.png"></p><p>其實三元運算子實際上長這樣:<br><img src="https://i.imgur.com/3irInfK.png"></p><p>賦值運算子與次方(+= 系列)</p><h3 id="賦值運算子與次方-系列"><a href="#賦值運算子與次方-系列" class="headerlink" title="賦值運算子與次方(+= 系列)"></a>賦值運算子與次方(+= 系列)</h3><p>這邊解釋各種加減乘除=的用法</p><p><img src="https://i.imgur.com/YXFU62o.png"><br><img src="https://i.imgur.com/tYtlRg0.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;JS-語言基礎-02-運算元與運算子&quot;&gt;&lt;a href=&quot;#JS-語言基礎-02-運算元與運算子&quot; class=&quot;headerlink&quot; title=&quot;JS 語言基礎 02 運算元與運算子&quot;&gt;&lt;/a&gt;JS 語言基礎 02 運算元與運算子&lt;/h2&gt;&lt;p&gt;下圖中 1,</summary>
      
    
    
    
    <category term="Javascript" scheme="http://example.com/categories/Javascript/"/>
    
    
    <category term="Javascript" scheme="http://example.com/tags/Javascript/"/>
    
  </entry>
  
  <entry>
    <title>JS-語言基礎 01 變數&amp;數據型態</title>
    <link href="http://example.com/2021/03/21/JS-JS%20%E8%AA%9E%E8%A8%80%E5%9F%BA%E7%A4%8E%2001%20%E8%AE%8A%E6%95%B8&amp;%E6%95%B8%E6%93%9A%E5%9E%8B%E6%85%8B/"/>
    <id>http://example.com/2021/03/21/JS-JS%20%E8%AA%9E%E8%A8%80%E5%9F%BA%E7%A4%8E%2001%20%E8%AE%8A%E6%95%B8&amp;%E6%95%B8%E6%93%9A%E5%9E%8B%E6%85%8B/</id>
    <published>2021-03-20T16:19:44.709Z</published>
    <updated>2021-03-21T18:22:19.790Z</updated>
    
    <content type="html"><![CDATA[<h2 id="JS-語言基礎-01-變數-amp-數據型態"><a href="#JS-語言基礎-01-變數-amp-數據型態" class="headerlink" title="JS 語言基礎 01 變數&amp;數據型態"></a>JS 語言基礎 01 變數&amp;數據型態</h2><h3 id="變數variable"><a href="#變數variable" class="headerlink" title="變數variable"></a>變數variable</h3><p>變數在使用前會被宣告</p><p><img src="https://i.imgur.com/Jogff3g.png"></p><p>如果像一開始的那個只有宣告的變數的話</p><p>他會跑出來的結果會是undefined</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(x);</span><br></pre></td></tr></table></figure><p>當給他value的時候就能正常印出數字摟!</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> y = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(y);</span><br></pre></td></tr></table></figure><h4 id="變數是值的符號名稱，可以透過名稱來獲得值的引用"><a href="#變數是值的符號名稱，可以透過名稱來獲得值的引用" class="headerlink" title="變數是值的符號名稱，可以透過名稱來獲得值的引用"></a>變數是值的符號名稱，可以透過名稱來獲得值的引用</h4><p>var x =10 並不是把10丟給X的意思</p><p>而是透過變數 var x = 10 名稱來獲得值的引用(reference)</p><p><img src="https://i.imgur.com/ZRTKQ9S.png"></p><h3 id="第一種型別-Number"><a href="#第一種型別-Number" class="headerlink" title="第一種型別 Number"></a>第一種型別 Number</h3><ul><li>整數integer</li><li>浮點數float</li></ul><p>JS中不會區分這兩者都只會顯示”Number”</p><p><img src="https://i.imgur.com/pwV5N3E.png"></p><p>Python中這兩者就有區別瞜!</p><p><img src="https://i.imgur.com/5NBqH3i.png"></p><h4 id="浮點數的陷阱"><a href="#浮點數的陷阱" class="headerlink" title="浮點數的陷阱"></a>浮點數的陷阱</h4><p>浮點數可能會造成誤差</p><p><img src="https://i.imgur.com/R3cvdo1.png"></p><p><img src="https://i.imgur.com/pnwCyTs.png"></p><h3 id="第二種資料型別-字串-String"><a href="#第二種資料型別-字串-String" class="headerlink" title="第二種資料型別 字串 String"></a>第二種資料型別 字串 String</h3><p>宣告方法:</p><ul><li>單引號</li><li>雙引號</li><li>單雙引號不可以混用</li><li>ES6可以使用<code>(``)</code>來宣告</li></ul><p><img src="https://i.imgur.com/PwREY9M.png"></p><p>字串的串接<br><img src="https://i.imgur.com/m6dinYH.png"></p><h3 id="第三種資料型態-Boolean-布林值"><a href="#第三種資料型態-Boolean-布林值" class="headerlink" title="第三種資料型態 Boolean 布林值"></a>第三種資料型態 Boolean 布林值</h3><p><img src="https://i.imgur.com/wXpRpPV.png"></p><p>使用Boolean來做判斷流程是他很重要的作用</p><p><img src="https://i.imgur.com/NVksCqE.png"></p><h3 id="第四、第五種資料型別-null-空值-與-undefined-未定義"><a href="#第四、第五種資料型別-null-空值-與-undefined-未定義" class="headerlink" title="第四、第五種資料型別 null 空值 與 undefined 未定義"></a>第四、第五種資料型別 null 空值 與 undefined 未定義</h3><ul><li>undefined 未定義</li></ul><p>宣告變數卻沒有指派時候印出x會得到</p><p>undefined因為值還沒有指派</p><p>型別也是undefined</p><p><img src="https://i.imgur.com/9IWUrwW.png"></p><ul><li>null 空值</li></ul><p>指派一個空值給變數</p><p><img src="https://i.imgur.com/oyPNi5x.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;JS-語言基礎-01-變數-amp-數據型態&quot;&gt;&lt;a href=&quot;#JS-語言基礎-01-變數-amp-數據型態&quot; class=&quot;headerlink&quot; title=&quot;JS 語言基礎 01 變數&amp;amp;數據型態&quot;&gt;&lt;/a&gt;JS 語言基礎 01 變數&amp;amp;數據</summary>
      
    
    
    
    <category term="Javascript" scheme="http://example.com/categories/Javascript/"/>
    
    
    <category term="Javascript" scheme="http://example.com/tags/Javascript/"/>
    
  </entry>
  
  <entry>
    <title>實作練習-Youtube Search Engine</title>
    <link href="http://example.com/2021/02/27/Youtube%20Search%20Engine/"/>
    <id>http://example.com/2021/02/27/Youtube%20Search%20Engine/</id>
    <published>2021-02-26T18:11:36.748Z</published>
    <updated>2021-03-20T14:56:49.230Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Youtube-Search-Engine-youtube-API"><a href="#Youtube-Search-Engine-youtube-API" class="headerlink" title="Youtube Search Engine - youtube API"></a>Youtube Search Engine - youtube API</h1><hr><h2 id="tags-Javascript-relate"><a href="#tags-Javascript-relate" class="headerlink" title="tags: Javascript relate"></a>tags: Javascript relate</h2><h6 id="tags-Javascript"><a href="#tags-Javascript" class="headerlink" title="tags: Javascript"></a>tags: <code>Javascript</code></h6><h1 id="製作一個-Youtube-影片搜尋網頁"><a href="#製作一個-Youtube-影片搜尋網頁" class="headerlink" title="製作一個 Youtube 影片搜尋網頁"></a>製作一個 Youtube 影片搜尋網頁</h1><h2 id="成品"><a href="#成品" class="headerlink" title="成品:"></a>成品:</h2><p><img src="https://i.imgur.com/A8eMNIt.png"></p><p><a href="https://chiehliu.github.io/git-projects/YoutubeSearchEngine/index.html">成品網址</a></p><h2 id="成品功能"><a href="#成品功能" class="headerlink" title="成品功能:"></a>成品功能:</h2><ol><li>搜尋欄位可以輸入內容並且有 Search 按鈕</li><li>把找到符合輸入內容的影片五篇呈現在下方</li><li>下一頁的按鈕如果還有更多需要內容呈現</li><li>上一頁的按鈕可以回到前五篇的內容</li><li>點擊超連結(圖片以及標題)會在當前頁面直接跳出影片視窗並且有關閉按鈕(iframe)</li></ol><h1 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h1><h2 id="html-程式碼"><a href="#html-程式碼" class="headerlink" title="html 程式碼:"></a>html 程式碼:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;title&gt;YouTube Search Engine&lt;&#x2F;title&gt;</span><br><span class="line">    &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;style.css&quot; &#x2F;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 來自fansybox官網 --&gt;</span><br><span class="line">    &lt;link</span><br><span class="line">      rel&#x3D;&quot;stylesheet&quot;</span><br><span class="line">      href&#x3D;&quot;https:&#x2F;&#x2F;cdnjs.cloudflare.com&#x2F;ajax&#x2F;libs&#x2F;fancybox&#x2F;3.5.7&#x2F;jquery.fancybox.min.css&quot;</span><br><span class="line">    &#x2F;&gt;</span><br><span class="line">  &lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;nav class&#x3D;&quot;navbar&quot;&gt;</span><br><span class="line">      &lt;h1&gt;</span><br><span class="line">        &lt;a href&#x3D;&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;&quot;&gt;&lt;span&gt;YouTube&lt;&#x2F;span&gt;&lt;&#x2F;a&gt; Search</span><br><span class="line">        Engine</span><br><span class="line">      &lt;&#x2F;h1&gt;</span><br><span class="line">    &lt;&#x2F;nav&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class&#x3D;&quot;container&quot;&gt;</span><br><span class="line">      &lt;section class&#x3D;&quot;search&quot;&gt;</span><br><span class="line">        &lt;input id&#x3D;&quot;inputval&quot; type&#x3D;&quot;text&quot; placeholder&#x3D;&quot;Search...&quot; &#x2F;&gt;</span><br><span class="line">        &lt;button id&#x3D;&quot;btngetval&quot; class&#x3D;&quot;search-btn btn&quot;&gt;Search&lt;&#x2F;button&gt;</span><br><span class="line">      &lt;&#x2F;section&gt;</span><br><span class="line"></span><br><span class="line">      &lt;div class&#x3D;&quot;results&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">      &lt;div class&#x3D;&quot;buttons&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 這邊的年份等下做JS動態處理年年更新 --&gt;</span><br><span class="line">    &lt;footer class&#x3D;&quot;footer&quot;&gt;</span><br><span class="line">      &lt;p&gt;Copyright © &lt;span id&#x3D;&quot;year&quot;&gt;&lt;&#x2F;span&gt;, All Rights Reserved&lt;&#x2F;p&gt;</span><br><span class="line">    &lt;&#x2F;footer&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;code.jquery.com&#x2F;jquery-3.5.1.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;script.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 取得年分 --&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">      $(&quot;#year&quot;).text(new Date().getFullYear());</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 來自fancybox官網 --&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdnjs.cloudflare.com&#x2F;ajax&#x2F;libs&#x2F;fancybox&#x2F;3.5.7&#x2F;jquery.fancybox.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 來自fancybox官方文件 --&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">      $(&quot;[data-fancybox]&quot;).fancybox(&#123;</span><br><span class="line">        toolbar: false,</span><br><span class="line">        smallBtn: true,</span><br><span class="line">        iframe: &#123;</span><br><span class="line">          preload: false,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;);</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">  &lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="CSS"><a href="#CSS" class="headerlink" title="CSS:"></a>CSS:</h1><h2 id="CSS-完整程式碼"><a href="#CSS-完整程式碼" class="headerlink" title="CSS 完整程式碼"></a>CSS 完整程式碼</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@import</span> url(<span class="string">&quot;https://fonts.googleapis.com/css2?family=Lato:ital,wght@0,100;0,300;0,400;0,700;0,900;1,100;1,300;1,400;1,700;1,900&amp;display=swap&quot;</span>);</span><br><span class="line"></span><br><span class="line">* &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-direction</span>: column;</span><br><span class="line">  <span class="attribute">justify-content</span>: end;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">  <span class="comment">/* 這邊設置高度讓他滿版 */</span></span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100vh</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#1d1d1d</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#dedede</span>;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&quot;Lato&quot;</span>, sans-serif;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">* <span class="selector-tag">span</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#06c5a9</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">nav</span> <span class="selector-tag">h1</span> &#123;</span><br><span class="line">  <span class="attribute">font-weight</span>: bold;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#06c5a9</span>;</span><br><span class="line">  <span class="attribute">text-decoration</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.navbar</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">section</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0</span> <span class="number">10px</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">60px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">40px</span>;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">700px</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">3px</span> <span class="number">10px</span> <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">1</span>);</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-direction</span>: column;</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">  <span class="attribute">align-items</span>: stretch;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">height</span>: auto;</span><br><span class="line">  <span class="attribute">width</span>: auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.container</span> <span class="selector-class">.search</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">section</span> <span class="selector-tag">input</span> &#123;</span><br><span class="line">  <span class="attribute">outline</span>: none;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">3px</span> <span class="number">10px</span> <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">1</span>);</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">margin-right</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">148px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">113px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">3px</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">border</span>: solid <span class="number">1px</span> <span class="built_in">rgb</span>(<span class="number">58</span>, <span class="number">57</span>, <span class="number">57</span>);</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">3px</span> <span class="number">10px</span> <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">* <span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="attribute">overflow</span>: auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.text</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">3px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">section</span> <span class="selector-class">.text</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 全部強制斷行 */</span></span><br><span class="line">  <span class="attribute">word-break</span>: break-all;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 全域的按鈕長相 */</span></span><br><span class="line">* <span class="selector-class">.btn</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#444451</span>;</span><br><span class="line">  <span class="attribute">outline</span>: none;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#dedede</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">3px</span> <span class="number">10px</span> <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.7</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.page</span> &#123;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">footer</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#31312f</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">footer</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#31312f</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>小補充:</p><p>無</p><h1 id="JS"><a href="#JS" class="headerlink" title="JS:"></a>JS:</h1><h2 id="取得-Youtube-API-可以操作使用的-url"><a href="#取得-Youtube-API-可以操作使用的-url" class="headerlink" title="取得 Youtube API 可以操作使用的 url"></a>取得 Youtube API 可以操作使用的 url</h2><p><a href="https://orow.github.io/2019/03/17/Youtube-Data-API/">參考網址: Youtube Data API - Search Engine</a></p><p>可以從這邊設定你想要添加的屬性並且操作看看會取得的網址內容且不會消耗配額<br><a href="https://developers.google.com/youtube/v3/docs/search/list">Data API 官方文件 - Try this API</a></p><p>針對這個專案我選用:<br>part: snippet(這個基本上就是我們需要的)</p><p>這邊不要勾 google oauth2.0<br><img src="https://i.imgur.com/391HfLY.png"></p><p>基本上就可以符合這個專案的需求瞜!<br><img src="https://i.imgur.com/ImoLbAV.png"></p><h2 id="url-回傳資料操作"><a href="#url-回傳資料操作" class="headerlink" title="url 回傳資料操作"></a>url 回傳資料操作</h2><p>需要操作的屬性標註在下方圖片中把他們貼到 DOM 就可以搂!</p><p><img src="https://i.imgur.com/EH4BHYn.png"></p><h2 id="變數設置"><a href="#變數設置" class="headerlink" title="變數設置"></a>變數設置</h2><ul><li>nextPageToken - 是換頁最重要的內容必須嵌入網址中</li><li>prevPageToken - 同上</li><li>q - 所有 function 都必須抓取搜尋欄的內容並且必須一致</li><li>output - 把 DOM 的內容貼進去再去做<code>append()</code>,<code>html()</code></li><li>DOM 的變數設置 - 處理資料並且針對屬性去做抓取的動作</li></ul><h2 id="functions"><a href="#functions" class="headerlink" title="functions:"></a>functions:</h2><ul><li>getVideoData(q) -功能:呈現搜尋內容</li></ul><p>使用<code>.ajax()</code>的 GET 方法取得 url 回傳的資料(url 部分必須嵌入參數讓其可以動態改變)</p><p>注意:</p><ol><li>datatype:必須填入 json</li><li>網址後方的 id key 要記得填入</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">    type: <span class="string">&quot;GET&quot;</span>,</span><br><span class="line">    url: <span class="string">`</span></span><br><span class="line"><span class="string">    https://youtube.googleapis.com/youtube/v3/search?part=snippet&amp;channelType=any&amp;order=relevance&amp;q=<span class="subst">$&#123;q&#125;</span>&amp;type=video&amp;videoCaption=any&amp;videoEmbeddable=any&amp;videoLicense=any&amp;videoType=any&amp;prettyPrint=true&amp;key=AIzaSyDNdqNoZCYqxEJ0nHKh3BWO7Yxc7fLLH2I`</span>,</span><br><span class="line">    dataType: <span class="string">&quot;json&quot;</span>,</span><br></pre></td></tr></table></figure><p>下一步在<code>.ajax()</code>屬性<code>sucess</code>中把回傳的資料處理並且<code>forEach</code>上去 DOM 上面</p><p>最後處理按鈕:</p><p>所有的頁面回傳資料都會包含上、下一頁的 token(如果有的話，沒有會回傳 undefined)，</p><hr><ul><li>nextPage() - 功能:呈現下一頁內容</li></ul><p>跟<code>getVideoData(q)</code>功能幾乎一樣，但是因為是下一頁所以必須以動態的方式抓取 token 以及 q，<br>頁面的 token 已經被傳入按鈕中，所以使用<code>.data()</code>的方式抓取資料(下方有補充資料)並且傳入 url 中，並且一樣會產出頁面 token(因為一樣得輸出上下頁按鈕)並且輸入到<code>getBtn(nextPageToken, prevPageToken)</code>讓下一頁可以吃到 token</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">    type: <span class="string">&quot;GET&quot;</span>,</span><br><span class="line">    url: <span class="string">`</span></span><br><span class="line"><span class="string">    https://youtube.googleapis.com/youtube/v3/search?part=snippet&amp;channelType=any&amp;order=relevance&amp;pageToken=<span class="subst">$&#123;nextPageToken&#125;</span>&amp;q=<span class="subst">$&#123;q&#125;</span>&amp;type=video&amp;videoCaption=any&amp;videoEmbeddable=any&amp;videoLicense=any&amp;videoType=any&amp;prettyPrint=true&amp;key=AIzaSyDNdqNoZCYqxEJ0nHKh3BWO7Yxc7fLLH2I`</span>,</span><br><span class="line">    dataType: <span class="string">&quot;json&quot;</span>,</span><br></pre></td></tr></table></figure><ul><li>prevPage() - 功能:呈現上一頁內容</li></ul><p>功能內容同上，只需要更改參數名稱</p><ul><li>getBtn(nextPageToken, prevPageToken) - 功能:製造按鈕</li></ul><ol><li>按鈕傳遞上一頁/下一頁的 token</li><li>使用判斷是來決定呈現什麼按鈕</li><li>一樣必須定義 q 是搜尋欄輸入的內容</li><li>使用<code>onclick</code>把換頁以及搜尋參數傳入<code>nextPage()</code>,<code>prevPage()</code> function 內</li></ol><h2 id="事件監聽"><a href="#事件監聽" class="headerlink" title="事件監聽"></a>事件監聽</h2><p>功能:取得 input 的值並且輸入 getVideoData(q)內</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 功能:取得input的值並且輸入getVideoData(q)內</span></span><br><span class="line">$(<span class="string">&quot;#btngetval&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">  e.preventDefault();</span><br><span class="line">  <span class="keyword">let</span> q = $(<span class="string">&quot;#inputval&quot;</span>).val();</span><br><span class="line">  getVideoData(q);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="iframe-使用"><a href="#iframe-使用" class="headerlink" title="iframe 使用"></a>iframe 使用</h2><h3 id="html-引入-iframe"><a href="#html-引入-iframe" class="headerlink" title="html 引入 iframe"></a>html 引入 iframe</h3><p><a href="https://cdnjs.com/libraries/fancybox">iframe 引用網址</a><br><a href="http://fancyapps.com/fancybox/3/docs/#iframe">iframe 官方文件</a></p><p>最上方引入 iframe 的 CSS 設定一定在官網可以找到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 來自fansybox官網 --&gt;</span><br><span class="line">    &lt;link</span><br><span class="line">      rel&#x3D;&quot;stylesheet&quot;</span><br><span class="line">      href&#x3D;&quot;https:&#x2F;&#x2F;cdnjs.cloudflare.com&#x2F;ajax&#x2F;libs&#x2F;fancybox&#x2F;3.5.7&#x2F;jquery.fancybox.min.css&quot;</span><br><span class="line">    &#x2F;&gt;</span><br></pre></td></tr></table></figure><p>直接擺入 html 最下方來引入(跟 jQuery 或是 js 檔案引入位置相同)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"> &lt;!-- 來自fancybox官網 --&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdnjs.cloudflare.com&#x2F;ajax&#x2F;libs&#x2F;fancybox&#x2F;3.5.7&#x2F;jquery.fancybox.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 來自fancybox官方文件 --&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  $(&quot;[data-fancybox]&quot;).fancybox(&#123;</span><br><span class="line">    toolbar: false,</span><br><span class="line">    smallBtn: true,</span><br><span class="line">    iframe: &#123;</span><br><span class="line">      preload: false,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;);</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h3 id="針對頁面超連結的部份"><a href="#針對頁面超連結的部份" class="headerlink" title="針對頁面超連結的部份"></a>針對頁面超連結的部份</h3><p>最後面的部份是 videoId 可以在 id 內找到(這邊是 sucess 後回傳的資料)<br><img src="https://i.imgur.com/mBBBWyj.png"></p><p>使用這串就可以把它們嵌入 iframe 內<br><code>https://www.youtube.com/embed/$&#123;vid.id.videoId&#125;</code></p><p>並且按照這個模式操作 iframe 的區塊</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a data-fancybox data-type=<span class="string">&quot;iframe&quot;</span> data-src=<span class="string">&quot;https://www.youtube.com/embed/$&#123;vid.id.videoId&#125;&quot;</span> href=<span class="string">&quot;javascript:;&quot;</span>&gt;&lt;/a&gt;</span><br></pre></td></tr></table></figure><h2 id="小補充"><a href="#小補充" class="headerlink" title="小補充"></a>小補充</h2><p><a href="https://api.jquery.com/data/">.data() - 官方文件</a></p><p><a href="https://api.jquery.com/jQuery.ajax/">.ajax() - 官方文件</a></p><h2 id="JS-完整程式碼"><a href="#JS-完整程式碼" class="headerlink" title="JS 完整程式碼:"></a>JS 完整程式碼:</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 功能:取得input的值並且輸入getVideoData(q)內</span></span><br><span class="line">$(<span class="string">&quot;#btngetval&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">  e.preventDefault();</span><br><span class="line">  <span class="keyword">let</span> q = $(<span class="string">&quot;#inputval&quot;</span>).val();</span><br><span class="line">  getVideoData(q);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 功能:呈現搜尋內容</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 把輸入的資料來搜尋影片使用$.ajax()</span></span><br><span class="line"><span class="comment">// 網址中的參數是輸入的內容成功載入資料後會跑func sucess</span></span><br><span class="line"><span class="comment">// 處理得到的資料並且forEach到DOM上面</span></span><br><span class="line"><span class="comment">// 取出當前網址的下一頁/上一頁的token並且賦予變數並且傳到getBtn裡面</span></span><br><span class="line"><span class="comment">// 把取得到頁面token以及DOM內容分別貼上HTML</span></span><br><span class="line"><span class="comment">// iframe 的使用格式得參照官網 頗複雜</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getVideoData</span>(<span class="params">q</span>) </span>&#123;</span><br><span class="line">  $.ajax(&#123;</span><br><span class="line">    type: <span class="string">&quot;GET&quot;</span>,</span><br><span class="line">    url: <span class="string">`</span></span><br><span class="line"><span class="string">    https://youtube.googleapis.com/youtube/v3/search?part=snippet&amp;channelType=any&amp;order=relevance&amp;q=<span class="subst">$&#123;q&#125;</span>&amp;type=video&amp;videoCaption=any&amp;videoEmbeddable=any&amp;videoLicense=any&amp;videoType=any&amp;prettyPrint=true&amp;key=AIzaSyDNdqNoZCYqxEJ0nHKh3BWO7Yxc7fLLH2I`</span>,</span><br><span class="line">    dataType: <span class="string">&quot;json&quot;</span>,</span><br><span class="line">    success: <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">let</span> videos = res.items;</span><br><span class="line">      <span class="keyword">let</span> nextPageToken = res.nextPageToken;</span><br><span class="line">      <span class="keyword">let</span> prevPageToken = res.prevPageToken;</span><br><span class="line">      <span class="keyword">let</span> output = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">      [...videos].forEach(<span class="function"><span class="keyword">function</span> (<span class="params">vid</span>) </span>&#123;</span><br><span class="line">        output += <span class="string">`&lt;section class=&quot;video-area&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;div class=&quot;img&quot;&gt;</span></span><br><span class="line"><span class="string">                  &lt;a data-fancybox data-type=&quot;iframe&quot; data-src=&quot;https://www.youtube.com/embed/<span class="subst">$&#123;vid.id.videoId&#125;</span>&quot; href=&quot;javascript:;&quot;</span></span><br><span class="line"><span class="string">                    &gt;&lt;img src=&quot;<span class="subst">$&#123;vid.snippet.thumbnails.<span class="keyword">default</span>.url&#125;</span>&quot;</span></span><br><span class="line"><span class="string">                  /&gt;&lt;/a&gt;</span></span><br><span class="line"><span class="string">                &lt;/div&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                &lt;div class=&quot;text&quot;&gt;</span></span><br><span class="line"><span class="string">                  &lt;a data-fancybox data-type=&quot;iframe&quot; data-src=&quot;https://www.youtube.com/embed/<span class="subst">$&#123;vid.id.videoId&#125;</span>&quot; href=&quot;javascript:;&quot;</span></span><br><span class="line"><span class="string">                    &gt;&lt;h3&gt;<span class="subst">$&#123;vid.snippet.title&#125;</span>&lt;/h3&gt;&lt;/a</span></span><br><span class="line"><span class="string">                  &gt;&lt;small&gt;By &lt;span&gt; <span class="subst">$&#123;vid.snippet.channelTitle&#125;</span> &lt;/span&gt; on <span class="subst">$&#123;vid.snippet.publishedAt&#125;</span>&lt;/small&gt;</span></span><br><span class="line"><span class="string">                  &lt;p&gt;<span class="subst">$&#123;vid.snippet.description&#125;</span>&lt;/p&gt;</span></span><br><span class="line"><span class="string">                &lt;/div&gt;</span></span><br><span class="line"><span class="string">              &lt;/section&gt;</span></span><br><span class="line"><span class="string">              `</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//貼上搜尋到的結果</span></span><br><span class="line">        $(<span class="string">&quot;.results&quot;</span>).html(output);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// // 加入下一頁按鈕</span></span><br><span class="line">        <span class="keyword">let</span> btn = getBtn(nextPageToken, prevPageToken);</span><br><span class="line">        $(<span class="string">&quot;.buttons&quot;</span>).html(btn);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 功能:呈現下一頁內容</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 功能跟getVideoData()類似</span></span><br><span class="line"><span class="comment">// 從getBtn()取得當前的q以及nextPageToken來跑下一個頁面的資料出來</span></span><br><span class="line"><span class="comment">// 清空最初的搜尋內容並且forEach下一頁的內容上去DOM</span></span><br><span class="line"><span class="comment">// 一樣得取出當前網址的下一頁/上一頁的token並且賦予變數並且傳到getBtn裡面(因為每個下一頁都可能會有上一頁/下一頁)</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">nextPage</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> nextPageToken = $(<span class="string">&quot;#next-button&quot;</span>).data(<span class="string">&quot;token&quot;</span>);</span><br><span class="line">  <span class="keyword">let</span> q = $(<span class="string">&quot;#next-button&quot;</span>).data(<span class="string">&quot;query&quot;</span>);</span><br><span class="line"></span><br><span class="line">  q = $(<span class="string">&quot;#inputval&quot;</span>).val();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 清空內容</span></span><br><span class="line">  $(<span class="string">&quot;.results&quot;</span>).html(<span class="string">&quot;&quot;</span>);</span><br><span class="line">  $(<span class="string">&quot;.buttons&quot;</span>).html(<span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line">  $.ajax(&#123;</span><br><span class="line">    type: <span class="string">&quot;GET&quot;</span>,</span><br><span class="line">    url: <span class="string">`</span></span><br><span class="line"><span class="string">    https://youtube.googleapis.com/youtube/v3/search?part=snippet&amp;channelType=any&amp;order=relevance&amp;pageToken=<span class="subst">$&#123;nextPageToken&#125;</span>&amp;q=<span class="subst">$&#123;q&#125;</span>&amp;type=video&amp;videoCaption=any&amp;videoEmbeddable=any&amp;videoLicense=any&amp;videoType=any&amp;prettyPrint=true&amp;key=AIzaSyDNdqNoZCYqxEJ0nHKh3BWO7Yxc7fLLH2I`</span>,</span><br><span class="line">    dataType: <span class="string">&quot;json&quot;</span>,</span><br><span class="line">    success: <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">let</span> nextPageToken = data.nextPageToken;</span><br><span class="line">      <span class="keyword">let</span> prevPageToken = data.prevPageToken;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// Log Data</span></span><br><span class="line">      <span class="keyword">let</span> res = data.items;</span><br><span class="line">      <span class="keyword">let</span> output = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">      [...res].forEach(<span class="function"><span class="keyword">function</span> (<span class="params">vid</span>) </span>&#123;</span><br><span class="line">        output += <span class="string">`&lt;section class=&quot;video-area&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;div class=&quot;img&quot;&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                  &lt;a data-fancybox data-type=&quot;iframe&quot; data-src=&quot;https://www.youtube.com/embed/<span class="subst">$&#123;vid.id.videoId&#125;</span>&quot; href=&quot;javascript:;&quot;</span></span><br><span class="line"><span class="string">                    &gt;&lt;img src=&quot;<span class="subst">$&#123;vid.snippet.thumbnails.<span class="keyword">default</span>.url&#125;</span>&quot;</span></span><br><span class="line"><span class="string">                  /&gt;&lt;/a&gt;</span></span><br><span class="line"><span class="string">                &lt;/div&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                &lt;div class=&quot;text&quot;&gt;</span></span><br><span class="line"><span class="string">                  &lt;a data-fancybox data-type=&quot;iframe&quot; data-src=&quot;https://www.youtube.com/embed/<span class="subst">$&#123;vid.id.videoId&#125;</span>&quot; href=&quot;javascript:;&quot;</span></span><br><span class="line"><span class="string">                    &gt;&lt;h3&gt;<span class="subst">$&#123;vid.snippet.title&#125;</span>&lt;/h3&gt;&lt;/a</span></span><br><span class="line"><span class="string">                  &gt;&lt;small&gt;By &lt;span&gt; <span class="subst">$&#123;vid.snippet.channelTitle&#125;</span> &lt;/span&gt; on <span class="subst">$&#123;vid.snippet.publishedAt&#125;</span>&lt;/small&gt;</span></span><br><span class="line"><span class="string">                  &lt;p&gt;<span class="subst">$&#123;vid.snippet.description&#125;</span>&lt;/p&gt;</span></span><br><span class="line"><span class="string">                &lt;/div&gt;</span></span><br><span class="line"><span class="string">              &lt;/section&gt;</span></span><br><span class="line"><span class="string">              `</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> btn = getBtn(nextPageToken, prevPageToken);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//貼上下一頁的搜尋結果</span></span><br><span class="line">        $(<span class="string">&quot;.results&quot;</span>).html(output);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Display Buttons</span></span><br><span class="line">        $(<span class="string">&quot;.buttons&quot;</span>).html(btn);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 功能:呈現上一頁內容</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 基本上跟netxPage()功能一樣指示修改參數名稱</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">prevPage</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> prevPageToken = $(<span class="string">&quot;#prev-button&quot;</span>).data(<span class="string">&quot;token&quot;</span>);</span><br><span class="line">  <span class="keyword">let</span> q = $(<span class="string">&quot;#next-button&quot;</span>).data(<span class="string">&quot;query&quot;</span>);</span><br><span class="line"></span><br><span class="line">  q = $(<span class="string">&quot;#inputval&quot;</span>).val();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 清空內容</span></span><br><span class="line">  $(<span class="string">&quot;.results&quot;</span>).html(<span class="string">&quot;&quot;</span>);</span><br><span class="line">  $(<span class="string">&quot;.buttons&quot;</span>).html(<span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line">  $.ajax(&#123;</span><br><span class="line">    type: <span class="string">&quot;GET&quot;</span>,</span><br><span class="line">    url: <span class="string">`</span></span><br><span class="line"><span class="string">    https://youtube.googleapis.com/youtube/v3/search?part=snippet&amp;channelType=any&amp;order=relevance&amp;pageToken=<span class="subst">$&#123;prevPageToken&#125;</span>&amp;q=<span class="subst">$&#123;q&#125;</span>&amp;type=video&amp;videoCaption=any&amp;videoEmbeddable=any&amp;videoLicense=any&amp;videoType=any&amp;prettyPrint=true&amp;key=AIzaSyDNdqNoZCYqxEJ0nHKh3BWO7Yxc7fLLH2I`</span>,</span><br><span class="line">    dataType: <span class="string">&quot;json&quot;</span>,</span><br><span class="line">    success: <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">let</span> nextPageToken = data.nextPageToken;</span><br><span class="line">      <span class="keyword">let</span> prevPageToken = data.prevPageToken;</span><br><span class="line">      <span class="keyword">let</span> res = data.items;</span><br><span class="line">      <span class="keyword">let</span> output = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">      [...res].forEach(<span class="function"><span class="keyword">function</span> (<span class="params">vid</span>) </span>&#123;</span><br><span class="line">        output += <span class="string">`&lt;section class=&quot;video-area&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;div class=&quot;img&quot;&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                  &lt;a data-fancybox data-type=&quot;iframe&quot; data-src=&quot;https://www.youtube.com/embed/<span class="subst">$&#123;vid.id.videoId&#125;</span>&quot; href=&quot;javascript:;&quot;</span></span><br><span class="line"><span class="string">                    &gt;&lt;img src=&quot;<span class="subst">$&#123;vid.snippet.thumbnails.<span class="keyword">default</span>.url&#125;</span>&quot;</span></span><br><span class="line"><span class="string">                  /&gt;&lt;/a&gt;</span></span><br><span class="line"><span class="string">                &lt;/div&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                &lt;div class=&quot;text&quot;&gt;</span></span><br><span class="line"><span class="string">                  &lt;a data-fancybox data-type=&quot;iframe&quot; data-src=&quot;https://www.youtube.com/embed/<span class="subst">$&#123;vid.id.videoId&#125;</span>&quot; href=&quot;javascript:;&quot;</span></span><br><span class="line"><span class="string">                    &gt;&lt;h3&gt;<span class="subst">$&#123;vid.snippet.title&#125;</span>&lt;/h3&gt;&lt;/a</span></span><br><span class="line"><span class="string">                  &gt;&lt;small&gt;By &lt;span&gt; <span class="subst">$&#123;vid.snippet.channelTitle&#125;</span> &lt;/span&gt; on <span class="subst">$&#123;vid.snippet.publishedAt&#125;</span>&lt;/small&gt;</span></span><br><span class="line"><span class="string">                  &lt;p&gt;<span class="subst">$&#123;vid.snippet.description&#125;</span>&lt;/p&gt;</span></span><br><span class="line"><span class="string">                &lt;/div&gt;</span></span><br><span class="line"><span class="string">              &lt;/section&gt;</span></span><br><span class="line"><span class="string">              `</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> btn = getBtn(nextPageToken, prevPageToken);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//貼上上一頁的搜尋結果</span></span><br><span class="line">        $(<span class="string">&quot;.results&quot;</span>).html(output);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//貼上按鈕</span></span><br><span class="line">        $(<span class="string">&quot;.buttons&quot;</span>).html(btn);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 功能:製造按鈕</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 按鈕傳遞上一頁/下一頁的token</span></span><br><span class="line"><span class="comment">// 使用判斷是來決定呈現什麼按鈕</span></span><br><span class="line"><span class="comment">// 一樣必須定義q是搜尋欄輸入的內容</span></span><br><span class="line"><span class="comment">// 使用onclick把換頁以及搜尋參數傳入nextPage(),prevPage() function內</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getBtn</span>(<span class="params">nextPageToken, prevPageToken</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> q = $(<span class="string">&quot;#inputval&quot;</span>).val();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 如果沒有下一頁則按鈕不顯示</span></span><br><span class="line">  <span class="keyword">if</span> (nextPageToken === <span class="literal">undefined</span>) &#123;</span><br><span class="line">    $(<span class="string">&quot;.buttons&quot;</span>).html();</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">    <span class="comment">// 如果沒有上一頁的token則只顯示下一頁</span></span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (prevPageToken === <span class="literal">undefined</span>) &#123;</span><br><span class="line">    $(<span class="string">&quot;.buttons&quot;</span>).html(</span><br><span class="line">      <span class="string">`&lt;div class=&quot;button-container&quot;&gt;&lt;button id=&quot;next-button&quot; class=&quot;btn paging-button&quot; data-token=&quot;<span class="subst">$&#123;nextPageToken&#125;</span>&quot; data-query=&quot;<span class="subst">$&#123;q&#125;</span>&quot; onclick=&quot;nextPage();&quot;&gt;Next Page&lt;/button&gt;&lt;/div&gt;`</span></span><br><span class="line">    );</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">    <span class="comment">//其他都顯示</span></span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $(<span class="string">&quot;.buttons&quot;</span>).html(</span><br><span class="line">      <span class="string">`&lt;div class=&quot;button-container&quot;&gt;&lt;button id=&quot;prev-button&quot; class=&quot;btn paging-button&quot; data-token=&quot;<span class="subst">$&#123;prevPageToken&#125;</span>&quot; data-query=&quot;<span class="subst">$&#123;q&#125;</span>&quot; onclick=&quot;prevPage();&quot;&gt;Prev Page&lt;/button&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;div class=&quot;button-container&quot;&gt;&lt;button id=&quot;next-button&quot; class=&quot;btn paging-button&quot; data-token=&quot;<span class="subst">$&#123;nextPageToken&#125;</span>&quot; data-query=&quot;<span class="subst">$&#123;q&#125;</span>&quot; onclick=&quot;nextPage();&quot;&gt;Next Page&lt;/button&gt;&lt;/div&gt; `</span></span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Youtube-Search-Engine-youtube-API&quot;&gt;&lt;a href=&quot;#Youtube-Search-Engine-youtube-API&quot; class=&quot;headerlink&quot; title=&quot;Youtube Search Engine - yo</summary>
      
    
    
    
    <category term="Javascript作品" scheme="http://example.com/categories/Javascript%E4%BD%9C%E5%93%81/"/>
    
    
    <category term="jQuery" scheme="http://example.com/tags/jQuery/"/>
    
    <category term="HTML" scheme="http://example.com/tags/HTML/"/>
    
    <category term="CSS" scheme="http://example.com/tags/CSS/"/>
    
    <category term="JavaScript" scheme="http://example.com/tags/JavaScript/"/>
    
    <category term="AJAX" scheme="http://example.com/tags/AJAX/"/>
    
  </entry>
  
  <entry>
    <title>實作練習-10 JS little practice</title>
    <link href="http://example.com/2021/02/27/[%E4%BD%9C%E5%93%81]10%20JS%20little%20practice/"/>
    <id>http://example.com/2021/02/27/[%E4%BD%9C%E5%93%81]10%20JS%20little%20practice/</id>
    <published>2021-02-26T18:11:36.748Z</published>
    <updated>2021-03-20T15:13:33.066Z</updated>
    
    <content type="html"><![CDATA[<h1 id="10-JS-little-practice-vanilla-Javascript"><a href="#10-JS-little-practice-vanilla-Javascript" class="headerlink" title="10 JS little practice - vanilla Javascript"></a>10 JS little practice - vanilla Javascript</h1><hr><h2 id="tags-Javascript-relate"><a href="#tags-Javascript-relate" class="headerlink" title="tags: Javascript relate"></a>tags: Javascript relate</h2><h6 id="tags-Javascript"><a href="#tags-Javascript" class="headerlink" title="tags: Javascript"></a>tags: <code>Javascript</code></h6><h1 id="製作十個小功能-JS-練習-1"><a href="#製作十個小功能-JS-練習-1" class="headerlink" title="製作十個小功能 JS 練習 - 1"></a>製作十個小功能 JS 練習 - 1</h1><h2 id="成品-漢堡選單功能"><a href="#成品-漢堡選單功能" class="headerlink" title="成品: 漢堡選單功能"></a>成品: 漢堡選單功能</h2><p><img src="https://i.imgur.com/INZcJQZ.gif"></p><p><a href="https://chiehliu.github.io/git-projects/10-Project-1-Hour/hamburger/index.html">成品網址</a></p><h2 id="成品功能"><a href="#成品功能" class="headerlink" title="成品功能:"></a>成品功能:</h2><p>點擊漢堡會開關右側欄位</p><h1 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h1><h2 id="html-程式碼"><a href="#html-程式碼" class="headerlink" title="html 程式碼:"></a>html 程式碼:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button id&#x3D;&quot;btn&quot;&gt;☰&lt;&#x2F;button&gt;</span><br><span class="line">    &lt;nav id&#x3D;&quot;nav&quot;&gt;</span><br><span class="line">        &lt;ul&gt;</span><br><span class="line">            &lt;li&gt;&lt;a href&#x3D;&quot;&quot;&gt;Google&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;</span><br><span class="line">            &lt;li&gt;&lt;a href&#x3D;&quot;&quot;&gt;Youtube&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;</span><br><span class="line">            &lt;li&gt;&lt;a href&#x3D;&quot;&quot;&gt;Twitter&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;</span><br><span class="line">        &lt;&#x2F;ul&gt;</span><br><span class="line">    &lt;&#x2F;nav&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;script.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h1 id="CSS"><a href="#CSS" class="headerlink" title="CSS:"></a>CSS:</h1><ul><li>當 class .active 加 btn 及 nav 上面時則選單跳出消失則選單消失</li><li>使用簡單的特效取處在進出時稍慢一點<br><code> transition: transform 0.3s ease-in-out;</code></li></ul><h2 id="CSS-完整程式碼"><a href="#CSS-完整程式碼" class="headerlink" title="CSS 完整程式碼"></a>CSS 完整程式碼</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">@import</span> url(<span class="string">&quot;https://fonts.googleapis.com/css2?family=Poppins:wght@200;400;600&amp;display=swap&quot;</span>);</span><br><span class="line"></span><br><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&quot;Poppins&quot;</span>, sans-serif;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">min-height</span>: <span class="number">100vh</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">上方為基礎設定 全置中 <span class="attribute">margin</span> <span class="number">0</span> <span class="attribute">border</span>-box 字體設定</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">button</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: gray;</span><br><span class="line">    <span class="attribute">border</span>: none;</span><br><span class="line">    <span class="attribute">color</span>: black;</span><br><span class="line">    <span class="attribute">position</span>: fixed;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">1rem</span>;</span><br><span class="line">    <span class="attribute">transition</span>: transform <span class="number">0.3s</span> ease-in-out;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">button</span><span class="selector-class">.active</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateX</span>(-<span class="number">100px</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">nav</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: gray;</span><br><span class="line">    <span class="attribute">position</span>: fixed;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100vh</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">2rem</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateX</span>(<span class="number">100%</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">nav</span><span class="selector-class">.active</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateX</span>(<span class="number">0</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 取消三個連結的padding,margin讓它們為0 */</span></span><br><span class="line"><span class="selector-tag">nav</span> <span class="selector-tag">ul</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">list-style-type</span>: none;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 行間上下的距離 */</span></span><br><span class="line"><span class="selector-tag">nav</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">1rem</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">nav</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="JS"><a href="#JS" class="headerlink" title="JS:"></a>JS:</h1><ul><li>抓取 btn 以及 nav 後做事件監聽</li><li>當點擊 btn 的時候 nav,btn 的元素會加上或是移除.active 這個 class</li><li><code>toggle()</code>的使用所以有開關的效果</li></ul><h2 id="JS-完整程式碼"><a href="#JS-完整程式碼" class="headerlink" title="JS 完整程式碼:"></a>JS 完整程式碼:</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> btn = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;btn&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> nav = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;nav&#x27;</span>);</span><br><span class="line"></span><br><span class="line">btn.addEventListener(<span class="string">&#x27;click&#x27;</span>, (<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    nav.classList.toggle(<span class="string">&#x27;active&#x27;</span>);</span><br><span class="line">    btn.classList.toggle(<span class="string">&#x27;active&#x27;</span>);</span><br><span class="line">&#125;))</span><br></pre></td></tr></table></figure><h1 id="製作十個小功能-JS-練習-2"><a href="#製作十個小功能-JS-練習-2" class="headerlink" title="製作十個小功能 JS 練習 - 2"></a>製作十個小功能 JS 練習 - 2</h1><h2 id="成品-點擊按鈕後跑出通知"><a href="#成品-點擊按鈕後跑出通知" class="headerlink" title="成品: 點擊按鈕後跑出通知"></a>成品: 點擊按鈕後跑出通知</h2><p><img src="https://i.imgur.com/SZ4bNM2.gif"></p><p><a href="https://chiehliu.github.io/git-projects/10-Project-1-Hour/toast-notification/index.html">成品網址</a></p><h2 id="成品功能-1"><a href="#成品功能-1" class="headerlink" title="成品功能:"></a>成品功能:</h2><ol><li>點擊按鈕後跑出通知</li><li>三秒後通知消失</li></ol><h1 id="HTML-1"><a href="#HTML-1" class="headerlink" title="HTML"></a>HTML</h1><h2 id="html-程式碼-1"><a href="#html-程式碼-1" class="headerlink" title="html 程式碼:"></a>html 程式碼:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id&#x3D;&quot;container&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;button id&#x3D;&quot;btn&quot;&gt;Click me Pretty Please&lt;&#x2F;button&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure><h1 id="CSS-1"><a href="#CSS-1" class="headerlink" title="CSS:"></a>CSS:</h1><ul><li>CSS 處理.toast 的修飾部分</li></ul><h2 id="CSS-完整程式碼-1"><a href="#CSS-完整程式碼-1" class="headerlink" title="CSS 完整程式碼"></a>CSS 完整程式碼</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">@import</span> url(<span class="string">&quot;https://fonts.googleapis.com/css2?family=Poppins:wght@200;400;600&amp;display=swap&quot;</span>);</span><br><span class="line"></span><br><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&quot;Poppins&quot;</span>, sans-serif;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">min-height</span>: <span class="number">100vh</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">button</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: gray;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">1rem</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*     字體直接繼承body */</span></span><br><span class="line">    <span class="attribute">font-family</span>: inherit;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">border</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 把notification定位 */</span></span><br><span class="line"><span class="selector-id">#container</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: fixed;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 針對notification修飾 */</span></span><br><span class="line"><span class="selector-class">.toast</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">2rem</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: gray;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">1rem</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="JS-1"><a href="#JS-1" class="headerlink" title="JS:"></a>JS:</h1><ul><li>抓取 btn 以及 container div</li><li>做事件監聽當點擊 btn 時會跑<code>createNotifiction()</code></li><li>設置<code>setTimeout()</code>定時三秒消失</li></ul><p><code>createNotifiction()</code><br>使用<code>createElement()</code>做 div 出來，給他加上 class .toast(在 toast 做他的修飾)<br>並且<code>appnedChild()</code> notif 到 container 裡面就完成瞜!</p><h2 id="JS-完整程式碼-1"><a href="#JS-完整程式碼-1" class="headerlink" title="JS 完整程式碼:"></a>JS 完整程式碼:</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> btn = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;btn&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> container = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;container&#x27;</span>);</span><br><span class="line"></span><br><span class="line">btn.addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    createNotifiction();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createNotifiction</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> notif = <span class="built_in">document</span>.createElement(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    notif.classList.add(<span class="string">&#x27;toast&#x27;</span>);</span><br><span class="line">    container.appendChild(notif);</span><br><span class="line"></span><br><span class="line">    notif.innerText = <span class="string">&#x27;this challenge is crazy&#x27;</span></span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        notif.remove();</span><br><span class="line">    &#125;, <span class="number">3000</span>)</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="製作十個小功能-JS-練習-3"><a href="#製作十個小功能-JS-練習-3" class="headerlink" title="製作十個小功能 JS 練習 - 3"></a>製作十個小功能 JS 練習 - 3</h1><h2 id="成品-自動輸入文字的跑馬燈"><a href="#成品-自動輸入文字的跑馬燈" class="headerlink" title="成品: 自動輸入文字的跑馬燈"></a>成品: 自動輸入文字的跑馬燈</h2><p><img src="https://i.imgur.com/DzgTev4.gif"></p><p><a href="https://chiehliu.github.io/git-projects/10-Project-1-Hour/auto-write-text/index.html">成品網址</a></p><h2 id="成品功能-2"><a href="#成品功能-2" class="headerlink" title="成品功能:"></a>成品功能:</h2><ul><li>文字會自動輸入在頁面中間</li><li>每 0.1 秒會跑下一段文字</li><li>不會中斷會無限跑下去</li></ul><h1 id="HTML-2"><a href="#HTML-2" class="headerlink" title="HTML"></a>HTML</h1><p>空白配置</p><h1 id="CSS-2"><a href="#CSS-2" class="headerlink" title="CSS:"></a>CSS:</h1><p>基本上也只修飾顏色跟字體</p><h2 id="CSS-完整程式碼-2"><a href="#CSS-完整程式碼-2" class="headerlink" title="CSS 完整程式碼"></a>CSS 完整程式碼</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">@import</span> url(<span class="string">&quot;https://fonts.googleapis.com/css2?family=Poppins:wght@200;400;600&amp;display=swap&quot;</span>);</span><br><span class="line"></span><br><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: gray;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">2rem</span>;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&quot;Poppins&quot;</span>, sans-serif;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">min-height</span>: <span class="number">100vh</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="JS-2"><a href="#JS-2" class="headerlink" title="JS:"></a>JS:</h1><ul><li><p><code>slice(begin index,end inedex)</code><br>到 end index “之前”停止提取。<br><a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/slice">slice() MDN</a></p></li><li><p>使用 index++ 讓 inneText 不斷印出每個 slice 擷取的字<br>最後使用判斷式當 index 大於字串長度時歸零從頭開始</p></li><li><p>使用 setInterval 不斷的呼叫 writeText 函式秒 0.1 秒呼叫一次無限循環</p></li></ul><h2 id="JS-完整程式碼-2"><a href="#JS-完整程式碼-2" class="headerlink" title="JS 完整程式碼:"></a>JS 完整程式碼:</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> text = <span class="string">&#x27;This string is going to show on the browser automatically using Javascript&#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> index = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">writeText</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">document</span>.body.innerText = text.slice(<span class="number">0</span>, index);</span><br><span class="line"></span><br><span class="line">    index++;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (index &gt; text.length) &#123;</span><br><span class="line">        index = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">setInterval</span>(writeText, <span class="number">100</span>);</span><br></pre></td></tr></table></figure><h1 id="製作十個小功能-JS-練習-4"><a href="#製作十個小功能-JS-練習-4" class="headerlink" title="製作十個小功能 JS 練習 - 4"></a>製作十個小功能 JS 練習 - 4</h1><h2 id="成品-點擊按鈕後跳出視窗並且可以關閉"><a href="#成品-點擊按鈕後跳出視窗並且可以關閉" class="headerlink" title="成品: 點擊按鈕後跳出視窗並且可以關閉"></a>成品: 點擊按鈕後跳出視窗並且可以關閉</h2><p><img src="https://i.imgur.com/PfmRNSw.gif"></p><p><a href="https://chiehliu.github.io/git-projects/10-Project-1-Hour/popup/index.html">成品網址</a></p><h2 id="成品功能-3"><a href="#成品功能-3" class="headerlink" title="成品功能:"></a>成品功能:</h2><ul><li>點擊按鈕後跳出視窗並且可以關閉</li><li>改變背景色</li></ul><h1 id="HTML-3"><a href="#HTML-3" class="headerlink" title="HTML"></a>HTML</h1><h2 id="html-程式碼-2"><a href="#html-程式碼-2" class="headerlink" title="html 程式碼:"></a>html 程式碼:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button id&#x3D;&quot;open&quot;&gt;Open&lt;&#x2F;button&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;popup-container&quot; id&#x3D;&quot;container&quot;&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;popup&quot;&gt;</span><br><span class="line">            &lt;button id&#x3D;&quot;close&quot;&gt;&amp;times;&lt;&#x2F;button&gt;</span><br><span class="line">            &lt;h1&gt;Popup-btn&lt;&#x2F;h1&gt;</span><br><span class="line">            &lt;p&gt;Using JS to pop this up &lt;&#x2F;p&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure><h1 id="CSS-3"><a href="#CSS-3" class="headerlink" title="CSS:"></a>CSS:</h1><ul><li>這邊的切換讓 popup 區塊出現</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.popup-container</span><span class="selector-class">.active</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="CSS-完整程式碼-3"><a href="#CSS-完整程式碼-3" class="headerlink" title="CSS 完整程式碼"></a>CSS 完整程式碼</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">@import</span> url(<span class="string">&quot;https://fonts.googleapis.com/css2?family=Poppins:wght@200;400;600&amp;display=swap&quot;</span>);</span><br><span class="line"></span><br><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&quot;Poppins&quot;</span>, sans-serif;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">min-height</span>: <span class="number">100vh</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">button</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: black;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">1rem</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span><br><span class="line">    <span class="attribute">border</span>: none;</span><br><span class="line">    <span class="attribute">font-family</span>: inherit;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.popup-container</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.5</span>);</span><br><span class="line"></span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.popup-container</span><span class="selector-class">.active</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.popup</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">2px</span> <span class="number">2px</span> <span class="number">5px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.3</span>);</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">2rem</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">500px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.popup</span> <span class="selector-tag">button</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: .<span class="number">5rem</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">color</span>: gray;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="JS-3"><a href="#JS-3" class="headerlink" title="JS:"></a>JS:</h1><ul><li>抓取 open,close 按鈕以及 popup 容器</li><li>open, close 設置事件監聽點擊時加上以及移除 class.active</li></ul><h2 id="JS-完整程式碼-3"><a href="#JS-完整程式碼-3" class="headerlink" title="JS 完整程式碼:"></a>JS 完整程式碼:</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> open = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;open&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> close = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;close&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> container = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;container&#x27;</span>);</span><br><span class="line"></span><br><span class="line">open.addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    container.classList.add(<span class="string">&#x27;active&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">close.addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    container.classList.remove(<span class="string">&#x27;active&#x27;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h1 id="製作十個小功能-JS-練習-5"><a href="#製作十個小功能-JS-練習-5" class="headerlink" title="製作十個小功能 JS 練習 - 5"></a>製作十個小功能 JS 練習 - 5</h1><h2 id="成品-下紫色愛心雨的背景"><a href="#成品-下紫色愛心雨的背景" class="headerlink" title="成品: 下紫色愛心雨的背景"></a>成品: 下紫色愛心雨的背景</h2><p><img src="https://i.imgur.com/YMmae6Y.gif"></p><p><a href="https://chiehliu.github.io/git-projects/10-Project-1-Hour/purple-heart-rain/index.html">成品網址</a></p><h2 id="成品功能-4"><a href="#成品功能-4" class="headerlink" title="成品功能:"></a>成品功能:</h2><ul><li>下紫色愛心雨</li><li>位置隨機</li><li>動畫延續時間隨機</li></ul><h1 id="HTML-4"><a href="#HTML-4" class="headerlink" title="HTML"></a>HTML</h1><p>空白配置</p><h1 id="CSS-4"><a href="#CSS-4" class="headerlink" title="CSS:"></a>CSS:</h1><p>heart 的修飾</p><ul><li>畫面一開始保持空白所以設置位置固定在螢幕外面</li><li>這邊把愛心移動到 Y 軸去生出來</li><li>動畫部分設置 延續 0.3 秒(讓愛心不那麼密集) linear 線性(動畫等速移動) forwards(forwards 代表動畫結束會就停在結束階段不會跑回去)</li></ul><p><a href="https://developer.mozilla.org/zh-TW/docs/Web/CSS/animation-fill-mode">animation-fill-mode forwards MDN</a></p><p><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/animation-timing-function">animation-timing-function linear MDN</a></p><h2 id="CSS-完整程式碼-4"><a href="#CSS-完整程式碼-4" class="headerlink" title="CSS 完整程式碼"></a>CSS 完整程式碼</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">@import</span> url(<span class="string">&quot;https://fonts.googleapis.com/css2?family=Poppins:wght@200;400;600&amp;display=swap&quot;</span>);</span><br><span class="line"></span><br><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&quot;Poppins&quot;</span>, sans-serif;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">min-height</span>: <span class="number">100vh</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.heart</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: fixed;</span><br><span class="line">    <span class="attribute">top</span>: -<span class="number">1vh</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="attribute">animation</span>: fall <span class="number">3s</span> linear forwards;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">2rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@keyframes</span> fall &#123;</span><br><span class="line">    <span class="selector-tag">to</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">105vh</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="JS-4"><a href="#JS-4" class="headerlink" title="JS:"></a>JS:</h1><ul><li><code>createElement(&#39;div&#39;)</code>創造愛心並且加上 class .heart</li><li>把位置做隨機 使用 style.left (其實 right 也可) 使用隨機數串接字串’vw’</li><li>把下降時間作隨機 使用 style.animationDuration 使用隨機數串接字串’s’</li><li>把出現在<code>innerText</code>的部分換成 💜</li><li>把 💜 貼到 body 上面使用<code>appendchild()</code></li><li>最後設置 setTimeout 讓愛心消失</li><li>每個愛心的出現時間 0.3 秒出現一顆<code>setInterval()</code>每 0.3 秒呼叫一次<code>createHeart()</code></li></ul><h2 id="JS-完整程式碼-4"><a href="#JS-完整程式碼-4" class="headerlink" title="JS 完整程式碼:"></a>JS 完整程式碼:</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createHeart</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> heart = <span class="built_in">document</span>.createElement(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">    heart.classList.add(<span class="string">&#x27;heart&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    heart.style.left = <span class="built_in">Math</span>.random() * <span class="number">100</span> + <span class="string">&#x27;vw&#x27;</span>;</span><br><span class="line">    heart.style.animationDuration = <span class="built_in">Math</span>.random() * <span class="number">2</span> + <span class="number">5</span> + <span class="string">&#x27;s&#x27;</span>;</span><br><span class="line">    heart.innerText = <span class="string">&#x27;💜&#x27;</span>;</span><br><span class="line">    <span class="built_in">document</span>.body.appendChild(heart);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        heart.remove();</span><br><span class="line">    &#125;, <span class="number">5000</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">setInterval</span>(createHeart, <span class="number">300</span>);</span><br></pre></td></tr></table></figure><h1 id="製作十個小功能-JS-練習-6"><a href="#製作十個小功能-JS-練習-6" class="headerlink" title="製作十個小功能 JS 練習 - 6"></a>製作十個小功能 JS 練習 - 6</h1><h2 id="成品-點擊按鈕更改背景顏色"><a href="#成品-點擊按鈕更改背景顏色" class="headerlink" title="成品: 點擊按鈕更改背景顏色"></a>成品: 點擊按鈕更改背景顏色</h2><p><img src="https://i.imgur.com/w1hsVtY.gif"></p><p><a href="https://chiehliu.github.io/git-projects/10-Project-1-Hour/background-changer/index.html">成品網址</a></p><h2 id="成品功能-5"><a href="#成品功能-5" class="headerlink" title="成品功能:"></a>成品功能:</h2><ul><li>點擊按鈕更改被景色</li></ul><h1 id="HTML-5"><a href="#HTML-5" class="headerlink" title="HTML"></a>HTML</h1><h2 id="html-程式碼-3"><a href="#html-程式碼-3" class="headerlink" title="html 程式碼:"></a>html 程式碼:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button id&#x3D;&quot;btn&quot;&gt;Change background&lt;&#x2F;button&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure><h1 id="CSS-5"><a href="#CSS-5" class="headerlink" title="CSS:"></a>CSS:</h1><p>修飾按鈕外觀</p><h2 id="CSS-完整程式碼-5"><a href="#CSS-完整程式碼-5" class="headerlink" title="CSS 完整程式碼"></a>CSS 完整程式碼</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">@import</span> url(<span class="string">&quot;https://fonts.googleapis.com/css2?family=Poppins:wght@200;400;600&amp;display=swap&quot;</span>);</span><br><span class="line"></span><br><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&quot;Poppins&quot;</span>, sans-serif;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">min-height</span>: <span class="number">100vh</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">button</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: gray;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">1rem</span>;</span><br><span class="line">    <span class="attribute">font-family</span>: inherit;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">2px</span> <span class="number">2px</span> <span class="number">4px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.2</span>);</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">border</span>: none;</span><br><span class="line">    <span class="attribute">outline</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">button</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">    <span class="attribute">background-color</span>: black;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="JS-5"><a href="#JS-5" class="headerlink" title="JS:"></a>JS:</h1><ul><li>抓取 btn 後做事件監聽處理當點擊時觸發<code>randombg()</code></li><li><code>randombg()</code>可以使用 rgba 或是 hsl 的方式用 Math.floor(Math.random()*100)去處理顏色的係數變化並使用樣板字面值（Template literals）<code>$&#123;&#125;</code>嵌入變數做操作</li></ul><h2 id="JS-完整程式碼-5"><a href="#JS-完整程式碼-5" class="headerlink" title="JS 完整程式碼:"></a>JS 完整程式碼:</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> btn = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;btn&#x27;</span>);</span><br><span class="line"></span><br><span class="line">btn.addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">document</span>.body.style.background = randomBg();</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">randomBg</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// return `hsl($&#123;Math.floor(Math.random()*360)&#125;, 100%, 50%)`</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">`rgba(<span class="subst">$&#123;<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">100</span>)&#125;</span>%, <span class="subst">$&#123;<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">100</span>)&#125;</span>%, <span class="subst">$&#123;<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">100</span>)&#125;</span>%, <span class="subst">$&#123;<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">100</span>)&#125;</span>%)`</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="製作十個小功能-JS-練習-7"><a href="#製作十個小功能-JS-練習-7" class="headerlink" title="製作十個小功能 JS 練習 - 7"></a>製作十個小功能 JS 練習 - 7</h1><h2 id="成品-製作一個切換頁面背景的按鈕"><a href="#成品-製作一個切換頁面背景的按鈕" class="headerlink" title="成品:製作一個切換頁面背景的按鈕"></a>成品:製作一個切換頁面背景的按鈕</h2><p><img src="https://i.imgur.com/3VY3teh.gif"></p><p><a href="https://chiehliu.github.io/git-projects/10-Project-1-Hour/dark-mode-toggle/index.html">成品網址</a></p><h2 id="成品功能-6"><a href="#成品功能-6" class="headerlink" title="成品功能:"></a>成品功能:</h2><ul><li>製作一個切換頁面背景的按鈕</li><li>切換動畫有時間延遲</li></ul><h1 id="HTML-6"><a href="#HTML-6" class="headerlink" title="HTML"></a>HTML</h1><p>label 處的 for 必須要跟 input 的 id 名稱一樣才能作連動，也就是點擊 label 處 input 的 checkbox 連動，這樣點擊圓圈才有用</p><h2 id="html-程式碼-4"><a href="#html-程式碼-4" class="headerlink" title="html 程式碼:"></a>html 程式碼:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;toggle-container&quot;&gt;</span><br><span class="line">        &lt;input type&#x3D;&quot;checkbox&quot; id&#x3D;&quot;toggle&quot; name&#x3D;&quot;toggle&quot;&gt;&lt;label for&#x3D;&quot;toggle&quot;&gt;&lt;&#x2F;label&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;h1&gt;using JS to toggle dark mode&lt;&#x2F;h1&gt;</span><br><span class="line">    &lt;p&gt;Lorem ipsum dolor sit amet consectetur adipisicing elit. Cumque obcaecati sint, libero dignissimos aliquam natus,</span><br><span class="line">        magnam dolorum iure, porro commodi magni repellendus quis quibusdam accusantium culpa iusto! Unde, debitis</span><br><span class="line">        minima.&lt;&#x2F;p&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure><h1 id="CSS-6"><a href="#CSS-6" class="headerlink" title="CSS:"></a>CSS:</h1><ul><li>transition 處理在 body 並且因為背景以及文字都有改變所以都可以加入持續時間以及速度</li><li>label 的部分也會切換顏色所以一樣使用 transition</li><li>label 需要有 blcok 屬性才有辦法設置 width</li><li>input 做隱藏(把打勾框框藏起來)只出現 label(所以要作連動)</li></ul><h2 id="CSS-完整程式碼-6"><a href="#CSS-完整程式碼-6" class="headerlink" title="CSS 完整程式碼"></a>CSS 完整程式碼</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">@import</span> url(<span class="string">&quot;https://fonts.googleapis.com/css2?family=Poppins:wght@200;400;600&amp;display=swap&quot;</span>);</span><br><span class="line"></span><br><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">flex-direction</span>: column;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&quot;Poppins&quot;</span>, sans-serif;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">min-height</span>: <span class="number">100vh</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">5rem</span>;</span><br><span class="line">    <span class="attribute">transition</span>: background <span class="number">0.3s</span> linear, color <span class="number">0.3s</span> linear;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span><span class="selector-class">.dark</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#1f1f1f</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.toggle-container</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: fixed;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">label</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: gray;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">    user-select: none;</span><br><span class="line">    <span class="attribute">transition</span>: background <span class="number">0.3s</span> linear;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span><span class="selector-class">.dark</span> <span class="selector-tag">label</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span> &#123;</span><br><span class="line">    <span class="attribute">visibility</span>: hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="JS-6"><a href="#JS-6" class="headerlink" title="JS:"></a>JS:</h1><ul><li><code>e.target.checked</code>是 Boolean 會回傳 true/false 也就是狀態 checked 與否，</li><li>當狀態是 true 則加入 class .dark，flase 的話則移除 class .dark</li><li><code>toggle(要被開關的東西, boolean)</code></li></ul><p><a href="https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/toggle">toggle MDN</a></p><h2 id="JS-完整程式碼-6"><a href="#JS-完整程式碼-6" class="headerlink" title="JS 完整程式碼:"></a>JS 完整程式碼:</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> toggle = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;toggle&#x27;</span>);</span><br><span class="line"></span><br><span class="line">toggle.addEventListener(<span class="string">&#x27;change&#x27;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">document</span>.body.classList.toggle(<span class="string">&#x27;dark&#x27;</span>, e.target.checked)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h1 id="製作十個小功能-JS-練習-8"><a href="#製作十個小功能-JS-練習-8" class="headerlink" title="製作十個小功能 JS 練習 - 8"></a>製作十個小功能 JS 練習 - 8</h1><h2 id="成品-自己滾動的投影片"><a href="#成品-自己滾動的投影片" class="headerlink" title="成品: 自己滾動的投影片"></a>成品: 自己滾動的投影片</h2><p><img src="https://i.imgur.com/LvYg0DB.gif"></p><p><a href="https://chiehliu.github.io/git-projects/10-Project-1-Hour/carousel/index.html">成品網址</a></p><h2 id="成品功能-7"><a href="#成品功能-7" class="headerlink" title="成品功能:"></a>成品功能:</h2><ul><li>每兩秒換一張投影片</li><li>換到最後一張時會回到最開頭</li><li>有慢進慢出特效</li></ul><h1 id="HTML-7"><a href="#HTML-7" class="headerlink" title="HTML"></a>HTML</h1><h2 id="html-程式碼-5"><a href="#html-程式碼-5" class="headerlink" title="html 程式碼:"></a>html 程式碼:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;carousel&quot;&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;image-container&quot; id&#x3D;&quot;imgs&quot;&gt;</span><br><span class="line">            &lt;img src&#x3D;&quot;https:&#x2F;&#x2F;images.unsplash.com&#x2F;photo-1599394022918-6c2776530abb?ixlib&#x3D;rb-1.2.1&amp;ixid&#x3D;eyJhcHBfaWQiOjEyMDd9&amp;auto&#x3D;format&amp;fit&#x3D;crop&amp;w&#x3D;1458&amp;q&#x3D;80&quot;</span><br><span class="line">                alt&#x3D;&quot;&quot; &#x2F;&gt;</span><br><span class="line">            &lt;img src&#x3D;&quot;https:&#x2F;&#x2F;images.unsplash.com&#x2F;photo-1593642632559-0c6d3fc62b89?ixlib&#x3D;rb-1.2.1&amp;ixid&#x3D;eyJhcHBfaWQiOjEyMDd9&amp;auto&#x3D;format&amp;fit&#x3D;crop&amp;w&#x3D;1500&amp;q&#x3D;80&quot;</span><br><span class="line">                alt&#x3D;&quot;&quot; &#x2F;&gt;</span><br><span class="line">            &lt;img src&#x3D;&quot;https:&#x2F;&#x2F;images.unsplash.com&#x2F;photo-1599423300746-b62533397364?ixlib&#x3D;rb-1.2.1&amp;ixid&#x3D;eyJhcHBfaWQiOjEyMDd9&amp;auto&#x3D;format&amp;fit&#x3D;crop&amp;w&#x3D;1500&amp;q&#x3D;80&quot;</span><br><span class="line">                alt&#x3D;&quot;&quot; &#x2F;&gt;</span><br><span class="line">            &lt;img src&#x3D;&quot;https:&#x2F;&#x2F;images.unsplash.com&#x2F;photo-1599561046251-bfb9465b4c44?ixlib&#x3D;rb-1.2.1&amp;ixid&#x3D;eyJhcHBfaWQiOjEyMDd9&amp;auto&#x3D;format&amp;fit&#x3D;crop&amp;w&#x3D;1492&amp;q&#x3D;80&quot;</span><br><span class="line">                alt&#x3D;&quot;&quot; &#x2F;&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure><h1 id="CSS-7"><a href="#CSS-7" class="headerlink" title="CSS:"></a>CSS:</h1><ul><li>使用 overflow:hidden 來隱藏圖片(不然因為 flex 圖片會並排並且出現卷軸)</li><li>在 image-container 做水平移動特效</li><li>使用<code>object-fit: cover;</code>讓圖片不失真</li></ul><h2 id="CSS-完整程式碼-7"><a href="#CSS-完整程式碼-7" class="headerlink" title="CSS 完整程式碼"></a>CSS 完整程式碼</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">@import</span> url(<span class="string">&quot;https://fonts.googleapis.com/css2?family=Poppins:wght@200;400;600&amp;display=swap&quot;</span>);</span><br><span class="line"></span><br><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&quot;Poppins&quot;</span>, sans-serif;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">min-height</span>: <span class="number">100vh</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.carousel</span> &#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">2px</span> <span class="number">2px</span> <span class="number">5px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.3</span>);</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">500px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">500px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.image-container</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">transition</span>: transform <span class="number">0.5s</span> ease-in-out;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateX</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">object-fit</span>: cover;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">500px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">500px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="JS-7"><a href="#JS-7" class="headerlink" title="JS:"></a>JS:</h1><ul><li>抓取<code>translsateX</code>設定的視窗也就是 image-container</li><li>為了取得 index 長度抓取所有的 img tag</li><li>用 style 加上水平移動並且使用 index * img 寬度 切換投影片位置剛剛好到下一張</li><li>使用判斷式當 idx 加到超過 img 長度-1 時回到開頭(因為只要跑三次)</li></ul><h2 id="JS-完整程式碼-7"><a href="#JS-完整程式碼-7" class="headerlink" title="JS 完整程式碼:"></a>JS 完整程式碼:</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> imgs = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;imgs&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> img = <span class="built_in">document</span>.querySelectorAll(<span class="string">&#x27;#img&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> idx = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">run</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    idx++;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (idx &gt; img.length - <span class="number">1</span>) &#123;</span><br><span class="line">        idx = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    imgs.style.transform = <span class="string">`translateX(<span class="subst">$&#123;-idx * <span class="number">500</span>&#125;</span>px)`</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">setInterval</span>(run, <span class="number">2000</span>);</span><br></pre></td></tr></table></figure><h1 id="製作十個小功能-JS-練習-9"><a href="#製作十個小功能-JS-練習-9" class="headerlink" title="製作十個小功能 JS 練習 - 9"></a>製作十個小功能 JS 練習 - 9</h1><h2 id="成品-聲音按鈕"><a href="#成品-聲音按鈕" class="headerlink" title="成品: 聲音按鈕"></a>成品: 聲音按鈕</h2><p><img src="https://i.imgur.com/7ZM93DI.png"></p><p><a href="https://chiehliu.github.io/git-projects/10-Project-1-Hour/sound-board/index.html">成品網址</a></p><h2 id="成品功能-8"><a href="#成品功能-8" class="headerlink" title="成品功能:"></a>成品功能:</h2><ul><li>點擊按鈕會產生音效</li><li>當點擊下一個按鈕時上一個的音效會停止</li><li>下一次點擊同樣的按鈕時音效會歸零從頭開始跑</li></ul><h1 id="HTML-8"><a href="#HTML-8" class="headerlink" title="HTML"></a>HTML</h1><ul><li>設置 audio tag 並且引入檔案</li></ul><h2 id="html-程式碼-6"><a href="#html-程式碼-6" class="headerlink" title="html 程式碼:"></a>html 程式碼:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;audio id&#x3D;&quot;clapping&quot; src&#x3D;&quot;sound&#x2F;clapping.mp3&quot;&gt;&lt;&#x2F;audio&gt;</span><br><span class="line">    &lt;audio id&#x3D;&quot;boo&quot; src&#x3D;&quot;sound&#x2F;boo.mp3&quot;&gt;&lt;&#x2F;audio&gt;</span><br><span class="line">    &lt;audio id&#x3D;&quot;gasp&quot; src&#x3D;&quot;sound&#x2F;gasp.mp3&quot;&gt;&lt;&#x2F;audio&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure><h1 id="CSS-8"><a href="#CSS-8" class="headerlink" title="CSS:"></a>CSS:</h1><ul><li>處理按鈕外觀</li></ul><h2 id="CSS-完整程式碼-8"><a href="#CSS-完整程式碼-8" class="headerlink" title="CSS 完整程式碼"></a>CSS 完整程式碼</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">@import</span> url(<span class="string">&quot;https://fonts.googleapis.com/css2?family=Poppins:wght@200;400;600&amp;display=swap&quot;</span>);</span><br><span class="line"></span><br><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&quot;Poppins&quot;</span>, sans-serif;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">min-height</span>: <span class="number">100vh</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.btn</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: gray;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">    <span class="attribute">font-family</span>: inherit;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">1.2rem</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">1.5rem</span> <span class="number">3rem</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">1rem</span>;</span><br><span class="line">    <span class="attribute">border</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="JS-8"><a href="#JS-8" class="headerlink" title="JS:"></a>JS:</h1><ul><li>建立陣列內容是音檔的 id 名稱</li><li>使用 forEach 個別印出所有的音檔的名字並且產生按鈕</li><li>處理點擊事件 1.先引入停止函式 2.開始撥放音效(這個順序讓聲音還是可以正常撥出)</li><li>停止函式的部分會把音效暫停<code>song.pause();</code>並且把撥放時間歸零<code>song.currentTime = 0;</code></li></ul><h2 id="JS-完整程式碼-8"><a href="#JS-完整程式碼-8" class="headerlink" title="JS 完整程式碼:"></a>JS 完整程式碼:</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> sounds = [</span><br><span class="line">    <span class="string">&#x27;clapping&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;boo&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;gasp&#x27;</span>,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">sounds.forEach(<span class="function">(<span class="params">sound</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> btn = <span class="built_in">document</span>.createElement(<span class="string">&#x27;button&#x27;</span>);</span><br><span class="line">    btn.classList.add(<span class="string">&#x27;btn&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">document</span>.body.appendChild(btn);</span><br><span class="line"></span><br><span class="line">    btn.innerText = sound;</span><br><span class="line"></span><br><span class="line">    btn.addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        stopSounds()</span><br><span class="line"></span><br><span class="line">        <span class="built_in">document</span>.getElementById(sound).play();</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">stopSounds</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    sounds.forEach(<span class="function">(<span class="params">sound</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> song = <span class="built_in">document</span>.getElementById(sound);</span><br><span class="line"></span><br><span class="line">        song.pause();</span><br><span class="line">        song.currentTime = <span class="number">0</span>;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="製作十個小功能-JS-練習-10"><a href="#製作十個小功能-JS-練習-10" class="headerlink" title="製作十個小功能 JS 練習 - 10"></a>製作十個小功能 JS 練習 - 10</h1><h2 id="成品-有-ZOOM-效果的圖片"><a href="#成品-有-ZOOM-效果的圖片" class="headerlink" title="成品: 有 ZOOM 效果的圖片"></a>成品: 有 ZOOM 效果的圖片</h2><p><img src="https://i.imgur.com/u2uLBko.gif"></p><p><a href="https://chiehliu.github.io/git-projects/10-Project-1-Hour/zoom-effect/index.html">成品網址</a></p><h2 id="成品功能-9"><a href="#成品功能-9" class="headerlink" title="成品功能:"></a>成品功能:</h2><ul><li>隨著滑鼠移動會有放大效果</li><li>滑鼠離開視窗效果就會解除</li></ul><h1 id="HTML-9"><a href="#HTML-9" class="headerlink" title="HTML"></a>HTML</h1><h2 id="html-程式碼-7"><a href="#html-程式碼-7" class="headerlink" title="html 程式碼:"></a>html 程式碼:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id&#x3D;&quot;container&quot;&gt;</span><br><span class="line">        &lt;img src&#x3D;&quot;https:&#x2F;&#x2F;images.unsplash.com&#x2F;photo-1582769923195-c6e60dc1d8dc?ixlib&#x3D;rb-1.2.1&amp;ixid&#x3D;eyJhcHBfaWQiOjEyMDd9&amp;auto&#x3D;format&amp;fit&#x3D;crop&amp;w&#x3D;1000&amp;q&#x3D;80&quot;</span><br><span class="line">            alt&#x3D;&quot;purple kitty&quot; &#x2F;&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure><h1 id="CSS-9"><a href="#CSS-9" class="headerlink" title="CSS:"></a>CSS:</h1><ul><li><code>overflow: hidden;</code>可以限制圖片在原地，非常重要</li></ul><h2 id="CSS-完整程式碼-9"><a href="#CSS-完整程式碼-9" class="headerlink" title="CSS 完整程式碼"></a>CSS 完整程式碼</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">@import</span> url(<span class="string">&quot;https://fonts.googleapis.com/css2?family=Poppins:wght@200;400;600&amp;display=swap&quot;</span>);</span><br><span class="line"></span><br><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: rebeccapurple;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&quot;Poppins&quot;</span>, sans-serif;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">min-height</span>: <span class="number">100vh</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#container</span> &#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">3px</span> <span class="number">3px</span> <span class="number">4px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.3</span>);</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">500px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">500px</span>;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">transform-origin</span>: center center;</span><br><span class="line">    <span class="attribute">object-fit</span>: cover;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="JS-9"><a href="#JS-9" class="headerlink" title="JS:"></a>JS:</h1><ul><li><p>抓取 container, img</p></li><li><p>clientX 代表滑鼠在瀏覽器上面的位置</p></li><li><p>offsetLeft 距離<br><img src="https://i.imgur.com/1AHmrcV.png"></p></li><li><p>故<code>x = e.clientX - e.target.offsetLeft;</code>就等於圖片上面的 x 軸的位置，y 軸同理</p></li></ul><p><img src="https://i.imgur.com/qGgPrP5.png"></p><ul><li><code>scale</code>以及<code>transform-origin</code>的組合技會友針對位置放大的效果</li><li>透過 mouseleave 事件把組合技還原</li></ul><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/overflow">overflow MDN</a><br><a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetLeft">offsetLeft MDN</a><br><a href="https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/clientX">clientX MDN</a><br><a href="https://developer.mozilla.org/zh-TW/docs/Web/CSS/transform-origin">transform-origin MDN</a></p><h2 id="JS-完整程式碼-9"><a href="#JS-完整程式碼-9" class="headerlink" title="JS 完整程式碼:"></a>JS 完整程式碼:</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> container = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;container&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> img = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;img&#x27;</span>);</span><br><span class="line"></span><br><span class="line">container.addEventListener(<span class="string">&#x27;mousemove&#x27;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> x = e.clientX - e.target.offsetLeft;</span><br><span class="line">    <span class="keyword">const</span> y = e.clientY - e.target.offsetTop;</span><br><span class="line"></span><br><span class="line">    img.style.transformOrigin = <span class="string">`<span class="subst">$&#123;x&#125;</span>px <span class="subst">$&#123;y&#125;</span>px`</span>;</span><br><span class="line">    img.style.transform = <span class="string">&#x27;scale(2)&#x27;</span>;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">container.addEventListener(<span class="string">&#x27;mouseleave&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    img.style.tranformOrigin = <span class="string">&#x27;0 0&#x27;</span>;</span><br><span class="line">    img.style.transform = <span class="string">&#x27;scale(1)&#x27;</span>;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;10-JS-little-practice-vanilla-Javascript&quot;&gt;&lt;a href=&quot;#10-JS-little-practice-vanilla-Javascript&quot; class=&quot;headerlink&quot; title=&quot;10 JS little</summary>
      
    
    
    
    <category term="Javascript作品" scheme="http://example.com/categories/Javascript%E4%BD%9C%E5%93%81/"/>
    
    
    <category term="jQuery" scheme="http://example.com/tags/jQuery/"/>
    
    <category term="HTML" scheme="http://example.com/tags/HTML/"/>
    
    <category term="CSS" scheme="http://example.com/tags/CSS/"/>
    
    <category term="JavaScript" scheme="http://example.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>實作練習-Show Weather</title>
    <link href="http://example.com/2021/02/27/Show%20Weather/"/>
    <id>http://example.com/2021/02/27/Show%20Weather/</id>
    <published>2021-02-26T18:10:49.989Z</published>
    <updated>2021-03-20T14:56:36.634Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Show-Weather-Fetch-Weather-API"><a href="#Show-Weather-Fetch-Weather-API" class="headerlink" title="Show Weather - Fetch Weather API"></a>Show Weather - Fetch Weather API</h1><hr><h2 id="tags-Javascript-relate"><a href="#tags-Javascript-relate" class="headerlink" title="tags: Javascript relate"></a>tags: Javascript relate</h2><h6 id="tags-Javascript"><a href="#tags-Javascript" class="headerlink" title="tags: Javascript"></a>tags: <code>Javascript</code></h6><h1 id="製作一個顯示台灣天氣的網頁"><a href="#製作一個顯示台灣天氣的網頁" class="headerlink" title="製作一個顯示台灣天氣的網頁"></a>製作一個顯示台灣天氣的網頁</h1><h2 id="成品"><a href="#成品" class="headerlink" title="成品:"></a>成品:</h2><p><img src="https://i.imgur.com/Pn1V4QU.png"><br><a href="https://chiehliu.github.io/git-projects/showweather/index.html">成品網址</a></p><h2 id="成品功能"><a href="#成品功能" class="headerlink" title="成品功能:"></a>成品功能:</h2><p>1.顯示相對應天氣狀況的圖片 2.資訊更新時間為晚上六點或是早上六點<br><img src="https://i.imgur.com/oB1zc3L.png"> 3.溫度，降雨機率，天氣狀況都會隨資料更新</p><h1 id="天氣-icon-來源"><a href="#天氣-icon-來源" class="headerlink" title="天氣 icon 來源"></a>天氣 icon 來源</h1><p><img src="https://i.imgur.com/ohjCs54.png"></p><p><a href="https://elements.envato.com/free/icons/weather/?_ga=2.231913695.1537833515.1612076540-1046268721.1612076540">Weather Icon</a></p><h1 id="天氣-API-取得方式"><a href="#天氣-API-取得方式" class="headerlink" title="天氣 API 取得方式"></a>天氣 API 取得方式</h1><p>先到<a href="https://opendata.cwb.gov.tw/userLogin">中央氣象局</a>註冊並且取得授權碼</p><p><img src="https://i.imgur.com/Zt3jZMb.png"></p><p><a href="https://opendata.cwb.gov.tw/dist/opendata-swagger.html#/%E9%A0%90%E5%A0%B1/get_v1_rest_datastore_F_C0032_001">中央氣象局開放資料平臺之資料擷取 API</a></p><p><img src="https://i.imgur.com/INfYNOq.png"></p><h1 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h1><h2 id="html-程式碼"><a href="#html-程式碼" class="headerlink" title="html 程式碼:"></a>html 程式碼:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot; &#x2F;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot; &#x2F;&gt;</span><br><span class="line">    &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;style.css&quot; &#x2F;&gt;</span><br><span class="line">    &lt;title&gt;Show Weather&lt;&#x2F;title&gt;</span><br><span class="line">  &lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;h1&gt;Weather In Taiwan&lt;&#x2F;h1&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;container&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script src&#x3D;&quot;script.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;code.jquery.com&#x2F;jquery-3.5.1.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">  &lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h1 id="CSS"><a href="#CSS" class="headerlink" title="CSS:"></a>CSS:</h1><h2 id="CSS-完整程式碼"><a href="#CSS-完整程式碼" class="headerlink" title="CSS 完整程式碼"></a>CSS 完整程式碼</h2><p>這邊使用 grid 直接排出上下左右的排版非常方便</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@import</span> url(<span class="string">&#x27;https://fonts.googleapis.com/css?family=Lato&amp;display=swap&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">214</span>, <span class="number">208</span>, <span class="number">208</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">flex-direction</span>: column;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: grid;</span><br><span class="line">    grid-template-<span class="attribute">columns</span>: <span class="number">200px</span> <span class="number">200px</span> <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.container</span> <span class="selector-class">.weather</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">250</span>, <span class="number">250</span>, <span class="number">250</span>);</span><br><span class="line">    <span class="attribute">border</span>: solid <span class="number">1px</span> <span class="built_in">rgb</span>(<span class="number">184</span>, <span class="number">182</span>, <span class="number">182</span>);</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">110px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">5px</span> <span class="number">10px</span> <span class="number">10px</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.container</span> <span class="selector-class">.weather</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: auto <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="JS"><a href="#JS" class="headerlink" title="JS:"></a>JS:</h1><h2 id="變數設置"><a href="#變數設置" class="headerlink" title="變數設置"></a>變數設置</h2><p><img src="https://i.imgur.com/xEMVVYg.png"></p><p>name -縣市的部分<br>POP -降雨機率<br>WX -天氣狀況描述<br>MinT -最低溫<br>MaxT -最高溫</p><h2 id="functions"><a href="#functions" class="headerlink" title="functions:"></a>functions:</h2><ul><li><p>使用 fetch 抓取從中央氣象局取得的 API 並且使用方法 json()轉換</p></li><li><p>使用展開運算子並且使用 forEach 直接處理資料印出取得下方的結果</p></li><li><p><img src="https://i.imgur.com/n8HRA1z.png"></p></li><li><p>個別抓取資料並且填入 DOM</p></li><li><p>圖片的判定是針對 POP(降雨機率去做判讀)</p></li></ul><h2 id="JS-完整程式碼"><a href="#JS-完整程式碼" class="headerlink" title="JS 完整程式碼:"></a>JS 完整程式碼:</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">fetch(</span><br><span class="line">  <span class="string">&quot;https://opendata.cwb.gov.tw/api/v1/rest/datastore/F-C0032-001?Authorization=CWB-B7CE0CAC-3B18-4745-B65B-190B83AD9DCD&amp;format=JSON&amp;locationName=&amp;elementName=&quot;</span></span><br><span class="line">)</span><br><span class="line">  .then(<span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> res.json();</span><br><span class="line">  &#125;)</span><br><span class="line">  .then(<span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> weatherData = data.records.location;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// console.log(data.records.location);</span></span><br><span class="line"></span><br><span class="line">    [...weatherData].forEach(<span class="function">(<span class="params">currentValue, index</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> name = weatherData[index].locationName;</span><br><span class="line">      <span class="keyword">let</span> POP =</span><br><span class="line">        weatherData[index].weatherElement[<span class="number">1</span>].time[<span class="number">2</span>].parameter.parameterName;</span><br><span class="line">      <span class="keyword">let</span> Wx =</span><br><span class="line">        weatherData[index].weatherElement[<span class="number">0</span>].time[<span class="number">2</span>].parameter.parameterName;</span><br><span class="line">      <span class="keyword">let</span> MinT =</span><br><span class="line">        weatherData[index].weatherElement[<span class="number">2</span>].time[<span class="number">2</span>].parameter.parameterName;</span><br><span class="line">      <span class="keyword">let</span> MaxT =</span><br><span class="line">        weatherData[index].weatherElement[<span class="number">4</span>].time[<span class="number">2</span>].parameter.parameterName;</span><br><span class="line"></span><br><span class="line">      <span class="built_in">console</span>.log(currentValue);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">let</span> img;</span><br><span class="line">      <span class="keyword">if</span> (POP == <span class="number">0</span>) &#123;</span><br><span class="line">        img = <span class="string">&quot;img/sun.svg&quot;</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (POP &gt; <span class="number">25</span> || POP &lt; <span class="number">40</span>) &#123;</span><br><span class="line">        img = <span class="string">&quot;img/cloud-sun.svg&quot;</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (POP &gt; <span class="number">50</span>) &#123;</span><br><span class="line">        img = <span class="string">&quot;Um.svg&quot;</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        img = <span class="string">&quot;rain.svg&quot;</span>;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">let</span> card = <span class="built_in">document</span>.querySelector(<span class="string">&quot;.container&quot;</span>);</span><br><span class="line">      card.innerHTML += <span class="string">`</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">      &lt;div class = &quot;weather&quot;&gt;</span></span><br><span class="line"><span class="string">          &lt;img src=&quot;<span class="subst">$&#123;img&#125;</span>&quot; alt=&quot;&quot;&gt;</span></span><br><span class="line"><span class="string">          &lt;p &gt;location: <span class="subst">$&#123;name&#125;</span>&lt;/p&gt;</span></span><br><span class="line"><span class="string">          &lt;p &gt;tmp: <span class="subst">$&#123;MinT&#125;</span>&amp;#8451~<span class="subst">$&#123;MaxT&#125;</span>&amp;#8451&lt;/p&gt;</span></span><br><span class="line"><span class="string">          &lt;p &gt;降雨機率: <span class="subst">$&#123;POP&#125;</span>%&lt;/p&gt;</span></span><br><span class="line"><span class="string">          &lt;p &gt;<span class="subst">$&#123;Wx&#125;</span>&lt;/p&gt;</span></span><br><span class="line"><span class="string">      &lt;/div&gt;</span></span><br><span class="line"><span class="string">      `</span>;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Show-Weather-Fetch-Weather-API&quot;&gt;&lt;a href=&quot;#Show-Weather-Fetch-Weather-API&quot; class=&quot;headerlink&quot; title=&quot;Show Weather - Fetch Weather API</summary>
      
    
    
    
    <category term="Javascript作品" scheme="http://example.com/categories/Javascript%E4%BD%9C%E5%93%81/"/>
    
    
    <category term="jQuery" scheme="http://example.com/tags/jQuery/"/>
    
    <category term="HTML" scheme="http://example.com/tags/HTML/"/>
    
    <category term="CSS" scheme="http://example.com/tags/CSS/"/>
    
    <category term="JavaScript" scheme="http://example.com/tags/JavaScript/"/>
    
    <category term="AJAX" scheme="http://example.com/tags/AJAX/"/>
    
  </entry>
  
  <entry>
    <title>實作練習-Githubfinder</title>
    <link href="http://example.com/2021/02/27/[%E4%BD%9C%E5%93%81]Githubfinder/"/>
    <id>http://example.com/2021/02/27/[%E4%BD%9C%E5%93%81]Githubfinder/</id>
    <published>2021-02-26T18:09:14.453Z</published>
    <updated>2021-03-20T14:55:07.764Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Githubfinder-github-API"><a href="#Githubfinder-github-API" class="headerlink" title="Githubfinder - github API"></a>Githubfinder - github API</h1><hr><h2 id="tags-Javascript-relate"><a href="#tags-Javascript-relate" class="headerlink" title="tags: Javascript relate"></a>tags: Javascript relate</h2><h6 id="tags-Javascript"><a href="#tags-Javascript" class="headerlink" title="tags: Javascript"></a>tags: <code>Javascript</code></h6><h1 id="製作一個-github-user-尋找器"><a href="#製作一個-github-user-尋找器" class="headerlink" title="製作一個 github user 尋找器"></a>製作一個 github user 尋找器</h1><h2 id="成品"><a href="#成品" class="headerlink" title="成品:"></a>成品:</h2><p><img src="https://i.imgur.com/7tIuxp8.png"></p><p><a href="https://chiehliu.github.io/git-projects/githubfinder/index2.html">成品網址</a></p><h2 id="成品功能"><a href="#成品功能" class="headerlink" title="成品功能:"></a>成品功能:</h2><p>1.會呈現表面上的各種資訊 大頭貼/profile 連結/Repo 數量/追蹤者數量/公司/Blog/地點/何時加入等 2.跳顯示警告，如果沒找到資訊 3.顯示最新的 Repo 在下方(最多五筆)<br>4.Repo 以及 Profile 會是有超連結的</p><h1 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h1><h2 id="html-程式碼"><a href="#html-程式碼" class="headerlink" title="html 程式碼:"></a>html 程式碼:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;ie&#x3D;edge&quot;&gt;</span><br><span class="line">    &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;bootswatch.com&#x2F;4&#x2F;litera&#x2F;bootstrap.min.css&quot;&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;code.jquery.com&#x2F;jquery-3.5.1.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;title&gt;GitHub Finder&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;nav class&#x3D;&quot;navbar navbar-dark bg-primary mb-3&quot;&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;container&quot;&gt;</span><br><span class="line">            &lt;a href&#x3D;&quot;#&quot; class&#x3D;&quot;navbar-brand&quot;&gt;GitHub Finder&lt;&#x2F;a&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;nav&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;container searchContainer&quot;&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;search card card-body&quot;&gt;</span><br><span class="line">            &lt;h1&gt;Search GitHub Users&lt;&#x2F;h1&gt;</span><br><span class="line">            &lt;p class&#x3D;&quot;lead&quot;&gt;Enter a username to fetch a user profile and repos&lt;&#x2F;p&gt;</span><br><span class="line">            &lt;div id&#x3D;&quot;alert&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">            &lt;input type&#x3D;&quot;text&quot; id&#x3D;&quot;searchUser&quot; class&#x3D;&quot;form-control&quot; placeholder&#x3D;&quot;GitHub Username...&quot;&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;br&gt;</span><br><span class="line">        &lt;div id&#x3D;&quot;profile&quot;&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            &lt;h3 class&#x3D;&quot;page-heading mb-3&quot;&gt;Latest Repos&lt;&#x2F;h3&gt;</span><br><span class="line">            &lt;div id&#x3D;&quot;repos&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div id&#x3D;&quot;123&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;footer class&#x3D;&quot;mt-5 p-3 text-center bg-light&quot;&gt;</span><br><span class="line">        GitHub Finder ©</span><br><span class="line">    &lt;&#x2F;footer&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;code.jquery.com&#x2F;jquery-3.2.1.slim.min.js&quot;</span><br><span class="line">        integrity&#x3D;&quot;sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr&#x2F;rE9&#x2F;Qpg6aAZGJwFDMVNA&#x2F;GpGFF93hXpG5KkN&quot; crossorigin&#x3D;&quot;anonymous&quot;&gt; --&gt;</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdnjs.cloudflare.com&#x2F;ajax&#x2F;libs&#x2F;popper.js&#x2F;1.12.3&#x2F;umd&#x2F;popper.min.js&quot;</span><br><span class="line">        integrity&#x3D;&quot;sha384-vFJXuSJphROIrBnz7yo7oB41mKfc8JzQZiCq4NCceLEaO4IHwicKwpJf9c9IpFgh&quot; crossorigin&#x3D;&quot;anonymous&quot;&gt;</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;maxcdn.bootstrapcdn.com&#x2F;bootstrap&#x2F;4.0.0-beta.2&#x2F;js&#x2F;bootstrap.min.js&quot;</span><br><span class="line">        integrity&#x3D;&quot;sha384-alpBpkh1PFOepccYVYDB4do5UnbKysX5WZXm3XxPqe5iKTfUKjNkCk9SaVuEZflJ&quot; crossorigin&#x3D;&quot;anonymous&quot;&gt;</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script src&#x3D;&quot;script.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;!-- &lt;script src&#x3D;&quot;github.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;ui.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;app.js&quot;&gt;&lt;&#x2F;script&gt; --&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h1 id="CSS"><a href="#CSS" class="headerlink" title="CSS:"></a>CSS:</h1><p>本篇使用 bootstrap</p><h1 id="JS"><a href="#JS" class="headerlink" title="JS:"></a>JS:</h1><p>本篇最大阻礙一直在阻擋存取 API 非常麻煩!</p><blockquote><p>{“message”:”API rate limit exceeded for 36.225.127.59. (But here’s the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)”,”documentation_url”:”<a href="https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting&quot;}">https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting&quot;}</a></p></blockquote><h2 id="主要的-ajax-屬性參考"><a href="#主要的-ajax-屬性參考" class="headerlink" title="主要的 ajax 屬性參考"></a>主要的 ajax 屬性參考</h2><p><a href="https://api.jquery.com/jQuery.ajax/">jQuery.ajax</a></p><h2 id="functions"><a href="#functions" class="headerlink" title="functions:"></a>functions:</h2><ul><li>getInputValue() -把從 input 取得的內容丟進去 AJAX 內部取得 user 資料</li><li>getUserData() - 使用 jQuery AJAX 取得 profile 區域的資料</li><li>getRepoData() - 使用 jQuery AJAX 取得 Repo 區域的資料並且把它們推到 DOM 上</li><li>pushElToProfile() -把取得 profile 區域的資料推到 DOM 上</li></ul><h3 id="getInputValue"><a href="#getInputValue" class="headerlink" title="getInputValue()"></a>getInputValue()</h3><p>單純使用 keyup 事件把 input 的值推進去 getUserData,getRepoData 去做 AJAX</p><h3 id="getUserData"><a href="#getUserData" class="headerlink" title="getUserData()"></a>getUserData()</h3><p>取得要操作的 url 使用變數的方式改變 username 為 input 去抓取 API 資料，</p><p>當成功後處理抓取到的陣列並指派給空的 obj 把它們的屬性一一取出並且指派，並且在此呼叫<code>pushElToProfile()</code>並且把指派的變數放入</p><h3 id="getRepoData"><a href="#getRepoData" class="headerlink" title="getRepoData()"></a>getRepoData()</h3><p>跟上方抓取使用者資料很像，但是這邊不指派給變數而是直接把取得的 API 資料(是陣列形式)做 forEach 處理當傳輸成功時直接把屬性推入 DOM 裡面，因為一次要印出五筆資料必須這樣操作。</p><p>當資料傳輸失敗則會跑判斷是判斷 status 是甚麼，給予因應的 msg，並且設置三秒後會移除</p><h3 id="pushElToProfile"><a href="#pushElToProfile" class="headerlink" title="pushElToProfile()"></a>pushElToProfile()</h3><p>把剛剛指派的 obj 的屬性推上去 DOM</p><h2 id="JS-完整程式碼"><a href="#JS-完整程式碼" class="headerlink" title="JS 完整程式碼:"></a>JS 完整程式碼:</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//取得input的值並且使用這個值抓取使用者資料</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getInputValue</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> searchUser = $(<span class="string">&quot;#searchUser&quot;</span>);</span><br><span class="line"></span><br><span class="line">    searchUser.keyup(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        getUserData($(<span class="built_in">this</span>).val());</span><br><span class="line">        getRepoData($(<span class="built_in">this</span>).val());</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">getInputValue();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 把取得的input作為變數放到url內去搜尋每個輸入的使用者</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getUserData</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> username = $(<span class="string">&quot;#searchUser&quot;</span>).val();</span><br><span class="line">    <span class="keyword">let</span> url = <span class="string">`https://api.github.com/users/<span class="subst">$&#123;username&#125;</span>`</span>;</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        type: <span class="string">&quot;GET&quot;</span>,</span><br><span class="line">        url: url,</span><br><span class="line">        dataType: <span class="string">&quot;json&quot;</span>,</span><br><span class="line">        success: <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">let</span> obj = &#123;&#125;;</span><br><span class="line">            obj.avatar_url = res.avatar_url || <span class="string">&quot;no data&quot;</span>;</span><br><span class="line">            obj.profile_url = res.html_url || <span class="string">&quot;no data&quot;</span>;</span><br><span class="line">            obj.public_gists = res.public_gists || <span class="string">&quot;no data&quot;</span>;</span><br><span class="line">            obj.public_repos = res.public_repos || <span class="string">&quot;no data&quot;</span>;</span><br><span class="line">            obj.followers = res.followers || <span class="string">&quot;no data&quot;</span>;</span><br><span class="line">            obj.following = res.following || <span class="string">&quot;no data&quot;</span>;</span><br><span class="line">            obj.company = res.company || <span class="string">&quot;no data&quot;</span>;</span><br><span class="line">            obj.location = res.location || <span class="string">&quot;no data&quot;</span>;</span><br><span class="line">            obj.blog = res.blog || <span class="string">&quot;no data&quot;</span>;</span><br><span class="line">            obj.create_at = res.created_at || <span class="string">&quot;no data&quot;</span>;</span><br><span class="line">            <span class="comment">// console.log(obj);</span></span><br><span class="line">            pushElToProfile(obj);</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getRepoData</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> username = $(<span class="string">&quot;#searchUser&quot;</span>).val();</span><br><span class="line">    <span class="keyword">let</span> url = <span class="string">`https://api.github.com/users/<span class="subst">$&#123;username&#125;</span>/repos?per_page=5&amp;sort=created: asc `</span>;</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        type: <span class="string">&quot;GET&quot;</span>,</span><br><span class="line">        url: url,</span><br><span class="line">        dataType: <span class="string">&quot;json&quot;</span>,</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 錯誤發生的時候跑這個func</span></span><br><span class="line">        error: <span class="function"><span class="keyword">function</span> (<span class="params">jqXHR, exception</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> msg = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">if</span> (jqXHR.status === <span class="number">0</span>) &#123;</span><br><span class="line">                msg = <span class="string">&quot;Not connect.\n Verify Network.&quot;</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (jqXHR.status == <span class="number">404</span>) &#123;</span><br><span class="line">                msg = <span class="string">`&lt;div class = &quot;alert alert-danger&quot;&gt;Requested page not found.&lt;/div&gt;`</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (jqXHR.status == <span class="number">500</span>) &#123;</span><br><span class="line">                msg = <span class="string">&quot;Internal Server Error [500].&quot;</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (exception === <span class="string">&quot;parsererror&quot;</span>) &#123;</span><br><span class="line">                msg = <span class="string">&quot;Requested JSON parse failed.&quot;</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (exception === <span class="string">&quot;timeout&quot;</span>) &#123;</span><br><span class="line">                msg = <span class="string">&quot;Time out error.&quot;</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (exception === <span class="string">&quot;abort&quot;</span>) &#123;</span><br><span class="line">                msg = <span class="string">&quot;Ajax request aborted.&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            $(<span class="string">&quot;#alert&quot;</span>).html(msg);</span><br><span class="line"></span><br><span class="line">            <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                $(<span class="string">&quot;#123&quot;</span>).html(<span class="string">&quot;&quot;</span>);</span><br><span class="line">                $(<span class="string">&quot;#alert&quot;</span>).html(<span class="string">&quot;&quot;</span>);</span><br><span class="line">                $(<span class="string">&quot;profile&quot;</span>).html(<span class="string">&quot;&quot;</span>);</span><br><span class="line">            &#125;, <span class="number">3000</span>);</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 把得到的陣列資料直接做forEach處理並且直接+=到設置為空的output上面最後再把處理好的output貼到html上面</span></span><br><span class="line">        success: <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">let</span> output = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">            res.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">re</span>) </span>&#123;</span><br><span class="line">                output += <span class="string">`</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;card card-body mb-2&quot;&gt;</span></span><br><span class="line"><span class="string">          &lt;div class=&quot;row&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;col-md-6&quot;&gt;</span></span><br><span class="line"><span class="string">              &lt;a href=&quot;<span class="subst">$&#123;re.profile&#125;</span>&quot; target=&quot;_blank&quot;&gt;<span class="subst">$&#123;re.name&#125;</span>&lt;/a&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;col-md-6&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;span class=&quot;badge badge-primary&quot;&gt;Stars: <span class="subst">$&#123;re.stargazers_count&#125;</span>&lt;/span&gt;</span></span><br><span class="line"><span class="string">            &lt;span class=&quot;badge badge-secondary&quot;&gt;Watchers: <span class="subst">$&#123;re.watchers_count&#125;</span>&lt;/span&gt;</span></span><br><span class="line"><span class="string">            &lt;span class=&quot;badge badge-success&quot;&gt;Forks: <span class="subst">$&#123;re.forks_count&#125;</span>&lt;/span&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">          &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">      `</span>;</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 把剛剛做好的output貼上去html位置&lt;div id=&quot;123&quot;&gt;</span></span><br><span class="line">            $(<span class="string">&quot;#123&quot;</span>).html(output);</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//profile區域比較單純只要貼上變數即可</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">pushElToProfile</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> profile = <span class="string">`&lt;div id=&quot;profile&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;card card-body mb-3&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;div class=&quot;row&quot;&gt;</span></span><br><span class="line"><span class="string">                    &lt;div class=&quot;col-md-3&quot;&gt;</span></span><br><span class="line"><span class="string">                        &lt;img class=&quot;img-fluid mb-2&quot; src=&quot;<span class="subst">$&#123;obj.avatar_url&#125;</span>&quot;&gt;</span></span><br><span class="line"><span class="string">                        &lt;a href=&quot;<span class="subst">$&#123;obj.profile_url&#125;</span>&quot; target=&quot;_blank&quot; class=&quot;btn btn-primary btn-block mb-4&quot;&gt;View</span></span><br><span class="line"><span class="string">                            Profile&lt;/a&gt;</span></span><br><span class="line"><span class="string">                    &lt;/div&gt;</span></span><br><span class="line"><span class="string">                    &lt;div class=&quot;col-md-9&quot;&gt;</span></span><br><span class="line"><span class="string">                        &lt;span class=&quot;badge badge-primary&quot;&gt;Public Repos: <span class="subst">$&#123;obj.public_repos&#125;</span>&lt;/span&gt;</span></span><br><span class="line"><span class="string">                        &lt;span class=&quot;badge badge-secondary&quot;&gt;Public Gists: <span class="subst">$&#123;obj.public_gists&#125;</span>&lt;/span&gt;</span></span><br><span class="line"><span class="string">                        &lt;span class=&quot;badge badge-success&quot;&gt;Followers: <span class="subst">$&#123;obj.followers&#125;</span>&lt;/span&gt;</span></span><br><span class="line"><span class="string">                        &lt;span class=&quot;badge badge-info&quot;&gt;Following: <span class="subst">$&#123;obj.following&#125;</span>&lt;/span&gt;</span></span><br><span class="line"><span class="string">                        &lt;br&gt;&lt;br&gt;</span></span><br><span class="line"><span class="string">                        &lt;ul class=&quot;list-group&quot;&gt;</span></span><br><span class="line"><span class="string">                            &lt;li class=&quot;list-group-item&quot;&gt;Company: <span class="subst">$&#123;obj.company&#125;</span>&lt;/li&gt;</span></span><br><span class="line"><span class="string">                            &lt;li class=&quot;list-group-item&quot;&gt;Website/Blog: <span class="subst">$&#123;obj.blog&#125;</span>&lt;/li&gt;</span></span><br><span class="line"><span class="string">                            &lt;li class=&quot;list-group-item&quot;&gt;Location: <span class="subst">$&#123;obj.location&#125;</span>&lt;/li&gt;</span></span><br><span class="line"><span class="string">                            &lt;li class=&quot;list-group-item&quot;&gt;Member Since: <span class="subst">$&#123;obj.create_at&#125;</span>&lt;/li&gt;</span></span><br><span class="line"><span class="string">                        &lt;/ul&gt;</span></span><br><span class="line"><span class="string">                    &lt;/div&gt;</span></span><br><span class="line"><span class="string">                &lt;/div&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;`</span>;</span><br><span class="line"></span><br><span class="line">    $(<span class="string">&quot;#profile&quot;</span>).html(profile);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Githubfinder-github-API&quot;&gt;&lt;a href=&quot;#Githubfinder-github-API&quot; class=&quot;headerlink&quot; title=&quot;Githubfinder - github API&quot;&gt;&lt;/a&gt;Githubfinder - </summary>
      
    
    
    
    <category term="Javascript作品" scheme="http://example.com/categories/Javascript%E4%BD%9C%E5%93%81/"/>
    
    
    <category term="jQuery" scheme="http://example.com/tags/jQuery/"/>
    
    <category term="HTML" scheme="http://example.com/tags/HTML/"/>
    
    <category term="CSS" scheme="http://example.com/tags/CSS/"/>
    
    <category term="JavaScript" scheme="http://example.com/tags/JavaScript/"/>
    
    <category term="AJAX" scheme="http://example.com/tags/AJAX/"/>
    
  </entry>
  
</feed>
