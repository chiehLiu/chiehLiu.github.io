<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Chieh Liu&#39;s Blog</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-02-22T14:06:23.604Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Chieh Liu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Git &amp; GitHub Crash Course For Beginners</title>
    <link href="http://example.com/2021/02/22/Git&amp;GitHub-Crash-Course-For-Beginners/"/>
    <id>http://example.com/2021/02/22/Git&amp;GitHub-Crash-Course-For-Beginners/</id>
    <published>2021-02-22T14:05:23.000Z</published>
    <updated>2021-02-22T14:06:23.604Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Git-amp-GitHub-Crash-Course-For-Beginners"><a href="#Git-amp-GitHub-Crash-Course-For-Beginners" class="headerlink" title="Git &amp; GitHub Crash Course For Beginners"></a>Git &amp; GitHub Crash Course For Beginners</h1><hr><h2 id="tags-git-relate"><a href="#tags-git-relate" class="headerlink" title="tags: git relate"></a>tags: git relate</h2><h6 id="tags-git"><a href="#tags-git" class="headerlink" title="tags: git"></a>tags: <code>git</code></h6><h1 id="GIT-是甚麼"><a href="#GIT-是甚麼" class="headerlink" title="GIT 是甚麼"></a>GIT 是甚麼</h1><ul><li><p>VCS(Version Control System)追蹤電腦檔案的改變</p></li><li><p>分散式版本控制(去中央化版本控制) Distributed version control</p><blockquote><p>代表專案的開發者們不需要在同一個網路環境下完成</p></blockquote></li><li><p>2005 年被 Linus Torvalds 創造也是 Linux 的創造者</p></li><li><p>JAVA PYTHON Static html node.js c#….都能使用它，它只是單純儲存檔案</p></li><li><p>隨時都能回朔檔案只要有其他時期儲存的 commits</p></li><li><p>有使用者端以及遠端的存在</p></li></ul><h1 id="GIT-的概念"><a href="#GIT-的概念" class="headerlink" title="GIT 的概念"></a>GIT 的概念</h1><ul><li>追蹤 code 的歷史紀錄</li><li>為你的檔案做簡潔的紀錄</li><li>commit 就是”簡潔的紀錄”並且可以在任意時候完成</li><li>可以造訪那些 commit 在任意時候</li><li>在 commit 之前可以有一個前置階段</li></ul><h1 id="安裝-GIT"><a href="#安裝-GIT" class="headerlink" title="安裝 GIT"></a>安裝 GIT</h1><p>Mac</p><p><a href="http://git-scm.com/download/mac">http://git-scm.com/download/mac</a></p><p>Windows</p><p><a href="http://git-scm.com/download/win">http://git-scm.com/download/win</a></p><h1 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h1><h2 id="基本指令"><a href="#基本指令" class="headerlink" title="基本指令"></a>基本指令</h2><p><code>git init</code> // 啟動一個本地端的 Git 檔案夾</p><ul><li>當要操作任何檔案之前都要做這個動作</li></ul><p><code>git add&lt;file&gt;</code> // 加入檔案到 Index 裡面</p><p><code>git add .</code> // 加入全部檔案到 Index 裡面</p><p><code>git rm --cashed &lt;file&gt;</code> // 刪除 git add 的狀態</p><p><code>git status</code> // 確認檔案狀況從整個工作樹中(Working Tree)</p><ul><li>這裡是 commit 之前的一個前置階段</li></ul><p><code>git commit -m&quot;file&quot;</code> // commit</p><p><code>git push</code> // 把檔案推到遠端的檔案夾(如 Github)</p><p><code>git pull</code> // 從遠端把最新的檔案抓下來</p><p><code>git clone</code> // 把遠端的檔案複製下來目前本機端要使用的檔案夾內</p><p><code>git rm --cashed &lt;file&gt;</code> //</p><h1 id="實際專案操作"><a href="#實際專案操作" class="headerlink" title="實際專案操作"></a>實際專案操作</h1><p>首先設立一個資料夾並且選 git bash here<br><img src="https://i.imgur.com/2wufyAV.png"></p><p>就可以看到會直接連結到這個資料夾的位置<br><img src="https://i.imgur.com/ut0UI5H.png"></p><p><code>touch</code> index.html, app.js<br><img src="https://i.imgur.com/urCbII6.png"></p><p><code>git init</code> 啟用這個資料夾<br><img src="https://i.imgur.com/HhoZRia.png"><br>會多一個.git 資料夾出現<br><img src="https://i.imgur.com/3AxGzqP.png"></p><h2 id="git-自機版本存檔操作"><a href="#git-自機版本存檔操作" class="headerlink" title="git 自機版本存檔操作"></a>git 自機版本存檔操作</h2><p>建立一個檔案 hello.txt</p><p><code>git status</code> 查看狀態</p><p>會有剛剛加入的文件名稱並且顯示紅字</p><p><img src="https://i.imgur.com/jOWrDeS.jpg"></p><hr><p>這時候使用 <code>git add .</code> 加入資料夾內所有的檔案加入追蹤</p><p>通常輸入成功會沒有東西出現就是好事，有出錯的話會有錯誤訊息顯示</p><p>再次輸入 <code>git status</code> 查看狀態</p><p>這個時候會顯示剛剛加入的文件名稱並且變成綠色</p><p><img src="https://i.imgur.com/lpZRx4r.jpg"></p><hr><p>接著輸入 <code>git commit -m &quot;add new file hello.txt&quot;</code> 存檔的概念(版本紀錄)</p><p><img src="https://i.imgur.com/MCrXkbm.jpg"></p><p>再次輸入 <code>git status</code> 確認內容</p><p><img src="https://i.imgur.com/zQitUFx.jpg"></p><p>到這個階段剛剛的新的文件存上去存檔的地方摟!</p><h2 id="註冊-github-以及把檔案推上去"><a href="#註冊-github-以及把檔案推上去" class="headerlink" title="註冊 github 以及把檔案推上去"></a>註冊 github 以及把檔案推上去</h2><p><a href="https://github.com/">https://github.com/</a></p><p>接下來就是正常的註冊流程，推薦先不要開啟二階段認證會造成比較多麻煩</p><p>下一步就是要開啟新的 Repository，它就是在 Github 上最主要的運作單位</p><p>在 your repositories 的頁面下找到 NEW 新增後會進入</p><p><img src="https://i.imgur.com/cmLoaj6.png"></p><p>通常填完 Repository 之後 點擊 Create Repository</p><h3 id="上傳本機端的資料上傳到雲端"><a href="#上傳本機端的資料上傳到雲端" class="headerlink" title="上傳本機端的資料上傳到雲端"></a>上傳本機端的資料上傳到雲端</h3><p>這個時候要先從 CMD 確認說有無連結雲端:</p><p><img src="https://i.imgur.com/96pTucw.png"></p><p>這時候看到的空白代表雲端是沒有關聯的遠端空間，所以下一步我們就開始做連結</p><p><img src="https://i.imgur.com/2Bo6Unw.png"></p><p>ps. 大部分會用 origin 做遠端的名字是個習慣，但其實可以自己取都行</p><p>下一步到剛剛 your repositories 上面尋找上面尋找這裡點下 HTTPS 後複製這段網址並貼回去上面</p><p><img src="https://i.imgur.com/zItM0W7.png"></p><p><img src="https://i.imgur.com/A1G0ffL.png"></p><p>如果是第一次連結它會需要你做一些認證輸入帳號密碼名稱等等</p><p>這個時候再查詢一次做 git remote -v 這個時候會顯示這個</p><p><img src="https://i.imgur.com/6NU4JaK.png"></p><p>fetch 以及 push 左邊那串網址代表我們上傳以及我們下載檔案的雲端網址非常重要</p><h3 id="git-push-把檔案推上雲端"><a href="#git-push-把檔案推上雲端" class="headerlink" title="git push 把檔案推上雲端"></a>git push 把檔案推上雲端</h3><p>當我們要把檔案存到雲端上面的時候我們會使用這個指令，</p><p><code>git push origin(雲端名稱) master(分支名稱)</code></p><p><img src="https://i.imgur.com/TVqeZLG.png"></p><p>推上去檔案之後雲端就會有連接到的檔案</p><p><img src="https://i.imgur.com/pX2Xi8X.png"></p><p>在這個介面下就可以看到每次建立的 commit 紀錄非常方便！</p><h2 id="安裝-SourceTree"><a href="#安裝-SourceTree" class="headerlink" title="安裝 SourceTree"></a>安裝 SourceTree</h2><p>下載網址</p><p><a href="https://sourcetreeapp.com/">https://sourcetreeapp.com/</a></p><p>因為 Windows 不像 Mac 系統可以使用 stree . 這個指令叫出程式</p><p>可以從 File 的地方開啟待會要作業的檔案的資料夾</p><p><img src="https://i.imgur.com/AgB5S10.png"></p><p>就可以從這邊看到剛剛檔案的編輯紀錄</p><p><img src="https://i.imgur.com/ESeQnMN.png"></p><h1 id="git-的工作流程圖"><a href="#git-的工作流程圖" class="headerlink" title="git 的工作流程圖"></a>git 的工作流程圖</h1><p><img src="https://i.imgur.com/StCQLji.png"></p><p><img src="https://i.imgur.com/LcfUBpn.png"></p><h1 id="其他學習資源"><a href="#其他學習資源" class="headerlink" title="其他學習資源"></a>其他學習資源</h1><p><a href="https://gitbook.tw/">https://gitbook.tw/</a></p><p><a href="https://ihower.tw/git/index.html">https://ihower.tw/git/index.html</a></p><p><a href="https://github.com/doggy8088/Learn-Git-in-30-days?fbclid=IwAR2tU7V7kmvVJJgZVJpyHu8ACiJPk7vifaQCKULHKCUrp7OUJwT8HeQy_j4">https://github.com/doggy8088/Learn-Git-in-30-days?fbclid=IwAR2tU7V7kmvVJJgZVJpyHu8ACiJPk7vifaQCKULHKCUrp7OUJwT8HeQy_j4</a></p><p><a href="https://backlog.com/git-tutorial/tw/intro/intro1_1.html">https://backlog.com/git-tutorial/tw/intro/intro1_1.html</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Git-amp-GitHub-Crash-Course-For-Beginners&quot;&gt;&lt;a href=&quot;#Git-amp-GitHub-Crash-Course-For-Beginners&quot; class=&quot;headerlink&quot; title=&quot;Git &amp;amp; </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>SASS The Complete SASS Course(CSS Preprocessor)</title>
    <link href="http://example.com/2021/02/22/Preprocessor/"/>
    <id>http://example.com/2021/02/22/Preprocessor/</id>
    <published>2021-02-22T13:58:32.000Z</published>
    <updated>2021-02-22T13:59:03.272Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SASS-The-Complete-SASS-Course-CSS-Preprocessor"><a href="#SASS-The-Complete-SASS-Course-CSS-Preprocessor" class="headerlink" title="SASS The Complete SASS Course(CSS Preprocessor)"></a>SASS The Complete SASS Course(CSS Preprocessor)</h1><hr><h2 id="tags-HTML-CSS-relate"><a href="#tags-HTML-CSS-relate" class="headerlink" title="tags: HTML CSS relate"></a>tags: HTML CSS relate</h2><h6 id="tags-HTML-CSS-SASS"><a href="#tags-HTML-CSS-SASS" class="headerlink" title="tags: HTML, CSS, SASS"></a>tags: <code>HTML, CSS, SASS</code></h6><h1 id="SASS-簡介"><a href="#SASS-簡介" class="headerlink" title="SASS 簡介"></a>SASS 簡介</h1><h2 id="SASS-是什麼"><a href="#SASS-是什麼" class="headerlink" title="SASS 是什麼"></a>SASS 是什麼</h2><ul><li>Syntactically Awesome Style Sheets</li><li>是 CSS 的擴展配件、預處理器</li><li>可以讓 CSS 更加強大且具有更多的活動空間</li></ul><h2 id="Sass-特點"><a href="#Sass-特點" class="headerlink" title="Sass 特點"></a>Sass 特點</h2><ul><li><p>讓 CSS 可以跟其他語言一樣有更多邏輯的操作 -因為可以使用變數跟函式以及判斷式</p></li><li><p>可以把不同的 Style 檔案分開在做引入避免把所有元素都丟進同一個 css 檔案(最重要)</p></li></ul><p>像這樣分區做修飾並且全部整合進去 main.scss 檔案<br><img src="https://i.imgur.com/sOhNmax.png"></p><h2 id="How-Sass-Work"><a href="#How-Sass-Work" class="headerlink" title="How Sass Work"></a>How Sass Work</h2><p>一般瀏覽器是無法讀取 Sass 檔案的，所以我們在撰寫玩 Sass 之後必須作轉檔成 Css 檔案</p><p>而這個過程就叫做 Transpiling<br><img src="https://i.imgur.com/KfgAlO6.png"></p><h2 id="SASS-vs-SCSS"><a href="#SASS-vs-SCSS" class="headerlink" title="SASS vs SCSS"></a>SASS vs SCSS</h2><p>SASS 的部分再縮排方面會比較敏感</p><ul><li>去掉大括號做操作</li><li>可以巢狀寫法</li><li>沒有分號(;)</li></ul><p><img src="https://i.imgur.com/yhQEXkY.png"></p><p>SCSS 會比較常用並且跟 CSS 寫法雷同</p><ul><li>一樣有大括號以及分號</li><li>可以巢狀寫法</li><li>對縮排以及空白沒有 SASS 哪麼敏感</li></ul><p><img src="https://i.imgur.com/7Tcnfrk.png"></p><h1 id="SASS-入門"><a href="#SASS-入門" class="headerlink" title="SASS 入門"></a>SASS 入門</h1><h2 id="環境設定"><a href="#環境設定" class="headerlink" title="環境設定"></a>環境設定</h2><ul><li>Google Chrome 是最推薦使用</li><li>Firefox 也推薦使用(第二個作品會使用到)</li><li>Brackets 是作者推薦使用的 code editor(因為 VS CODE 本身的一些問題在處理 SASS code 上)</li><li>桌面建立資料夾 - sass-introduction</li><li>Ready to go!</li></ul><h2 id="安裝-SASS-Compiler"><a href="#安裝-SASS-Compiler" class="headerlink" title="安裝 SASS Compiler"></a>安裝 SASS Compiler</h2><h3 id="如何安裝"><a href="#如何安裝" class="headerlink" title="如何安裝"></a>如何安裝</h3><ul><li><a href="https://nodejs.org/en/">node.js</a></li><li>npm(下載 node.js 會自動下載)</li><li>下載 node.sass</li><li>創建 package.json(包含描述其他檔案的 metadata(檔案的結構資訊))</li></ul><p>確認是否完成可以使用 command prompt</p><p>並輸入 <code>node --version</code><br><code>npm --version</code></p><p>有出現版本就是有成功瞜!</p><p><img src="https://i.imgur.com/YdTp4tZ.png"></p><p>使用 code editor 開啟資料夾並且創建好以下內容<br><img src="https://i.imgur.com/zxqd2FZ.png"></p><p>使用 command prompt 進入該資料夾<br><img src="https://i.imgur.com/rKCvvc2.png"></p><p>並輸入 <code>npm init --yes</code></p><p>來創建 json 檔案<br><img src="https://i.imgur.com/3QkjyCg.png"><br>他會就出現在操作的資料夾中顯示所有各種資訊摟!<br><img src="https://i.imgur.com/urWuNL7.png"></p><p>下載 node.sass</p><p>輸入 <code>npm i -g node-sass</code></p><p><img src="https://i.imgur.com/Zfsaiso.png"></p><p>接下來就可以做簡易的操作搂!</p><p>在 scss 檔案簡單寫入一些修飾，但這個時候還沒有專換成 css 所以並不會有效果<br><img src="https://i.imgur.com/tE7Yl8U.png"></p><p>輸入 <code>node-sass -o css scss/main.scss</code></p><p><img src="https://i.imgur.com/wbUGUsC.png"></p><p>就可以順利的傳換 scss 成 css 檔案摟!<br><img src="https://i.imgur.com/S0S87uP.png"></p><p>但是每次操作就要使用這行程式碼去轉換 scss 太惱人了所以這邊使用</p><p>輸入 <code>node-sass -o css scss/main.scss -w</code></p><p>當 scss 檔案更改並且存檔時就會及時轉換過去搂!</p><p>但是當我們操作專案時不想要一直切換到 terminal 上面</p><p>可對這邊做修改<br><img src="https://i.imgur.com/1Wj4eMQ.png"></p><p>並且回到 terminal 頁面輸入 CTRL+C 輸入 y 同意後</p><p>輸入 <code>npm run watch</code></p><p>就可以順利直接做轉換並且不用切到換 terminal 輸入瞜!<br><img src="https://i.imgur.com/Rv1w9iU.png"></p><h2 id="SASS-變數"><a href="#SASS-變數" class="headerlink" title="SASS 變數"></a>SASS 變數</h2><h3 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h3><blockquote><p>變數像是一個容器儲存可重複利用的資料</p></blockquote><p>基本的呈現方式會像這樣:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$color-primary:orange !important;</span><br><span class="line">$color-secondary:gray;</span><br><span class="line">$color-tertiary:royalblue;</span><br><span class="line"></span><br><span class="line">$font-lg: 40px;</span><br><span class="line">$font-md: 30px;</span><br><span class="line">$font-sm: 20px;</span><br></pre></td></tr></table></figure><p>SCSS:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">.nav &#123;</span><br><span class="line">  background-color: $color-primary;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.banner h1 &#123;</span><br><span class="line">  font-size: $font-lg;</span><br><span class="line">  color: $color-secondary;</span><br><span class="line">  text-align: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.footer h3 &#123;</span><br><span class="line">  font-size: $font-md;</span><br><span class="line">  color: $color-secondary;</span><br><span class="line">  text-align: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>轉換過後的 CSS</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.nav</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: orange <span class="meta">!important</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.banner</span> <span class="selector-tag">h1</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">40px</span>;</span><br><span class="line">  <span class="attribute">color</span>: gray;</span><br><span class="line">  <span class="attribute">text-align</span>: center; &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.footer</span> <span class="selector-tag">h3</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">30px</span>;</span><br><span class="line">  <span class="attribute">color</span>: gray;</span><br><span class="line">  <span class="attribute">text-align</span>: center; &#125;</span><br></pre></td></tr></table></figure><p>這邊可以觀察到 h1,h3 的字體顏色我使用一樣的變數操作，所以當最上方的變數改變時<br><img src="https://i.imgur.com/mcJ14U5.png"><br>整體的顏色都可以做到條整，就不需要逐一修改內容的顏色而是在頂端直接修改變數內容即可<br><img src="https://i.imgur.com/YRcMDHS.png"></p><h3 id="變數的影響範圍-Scope-of-Variable"><a href="#變數的影響範圍-Scope-of-Variable" class="headerlink" title="變數的影響範圍(Scope of Variable)"></a>變數的影響範圍(Scope of Variable)</h3><ul><li><strong>全域變數</strong></li><li><strong>區域變數</strong></li></ul><p>全域變數的操作基本上就是把變數設置在外層並且沒有用大括號包裹住</p><p>區域變數則設置在大括號內只供括號內部使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">.nav &#123;</span><br><span class="line">  background-color: $color-primary;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.banner h1 &#123;</span><br><span class="line">  $color-secondary: red;</span><br><span class="line">  font-size: $font-lg;</span><br><span class="line">  color: $color-secondary;</span><br><span class="line">  text-align: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.footer h3 &#123;</span><br><span class="line">  font-size: $font-md;</span><br><span class="line">  color: $color-secondary;</span><br><span class="line">  text-align: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>像是這邊可以觀察到因為 h1 內部的區域變數的關係所以 h1 為紅色<br><img src="https://i.imgur.com/MHEvycZ.png"></p><h3 id="區域變數轉變成全域變數"><a href="#區域變數轉變成全域變數" class="headerlink" title="區域變數轉變成全域變數"></a>區域變數轉變成全域變數</h3><p>但也可以針對特定的變數做 !global 就可以把區域變數轉變成全域變數瞜!</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.banner h1 &#123;</span><br><span class="line">  $color-secondary: red ! global;</span><br><span class="line">  font-size: $font-lg;</span><br><span class="line">  color: $color-secondary;</span><br><span class="line">  text-align: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>紅色就可以影響到全域了!<br><img src="https://i.imgur.com/9oZ0jb7.png"></p><h3 id="作者提醒"><a href="#作者提醒" class="headerlink" title="作者提醒"></a>作者提醒</h3><ul><li>基本上不推薦使用區域變數，大多數時候以全域變數為主</li><li>變數設置時候的(-)dash sign / (_)underscore 這兩個部分是可以交替使用的</li></ul><p>它們可以達到一樣的效果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$color-primary:orange !important;</span><br><span class="line">$color_primary:orange !important;</span><br></pre></td></tr></table></figure><h2 id="SASS-巢狀寫法"><a href="#SASS-巢狀寫法" class="headerlink" title="SASS 巢狀寫法"></a>SASS 巢狀寫法</h2><ul><li>避免寫很多行的 CSS</li><li>容易使用</li><li>一種 CSS 的縮寫</li></ul><h3 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h3><p>SCSS 巢狀寫法<br>直接把要修飾的內容寫在大標題下即可不用像 CSS 一樣多寫一個大括號</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.nav &#123;</span><br><span class="line">  background-color: $color-primary;</span><br><span class="line"></span><br><span class="line">  ul li &#123;</span><br><span class="line">    list-style: none;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>轉換後的 CSS 必須寫在大括號內</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.nav</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: orange <span class="meta">!important</span>; &#125;</span><br><span class="line">  <span class="selector-class">.nav</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">list-style</span>: none; &#125;</span><br></pre></td></tr></table></figure><h3 id="偽元素-偽類"><a href="#偽元素-偽類" class="headerlink" title="偽元素/偽類"></a>偽元素/偽類</h3><p>hover 前面的&amp;字元代表 parent 元素也就是要修飾的 a tag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">a &#123;</span><br><span class="line">    text-decoration: none;</span><br><span class="line">    font-size: $font-sm;</span><br><span class="line">    color: $color-secondary;</span><br><span class="line"></span><br><span class="line">    &amp;:hover &#123;</span><br><span class="line">      color: $color-tertiary;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h3 id="作者提醒-1"><a href="#作者提醒-1" class="headerlink" title="作者提醒"></a>作者提醒</h3><blockquote><p>在寫 sass 的過程中要不時確認 main.css 的狀況可以更了解 sass 之外也更了解背後的原理</p></blockquote><h2 id="SASS-Mixin"><a href="#SASS-Mixin" class="headerlink" title="SASS Mixin"></a>SASS Mixin</h2><ul><li>避免 DRY(don’t repeat yourself)</li><li>把我們會重複使用的 code 包起來就不需要一直重複輸入</li><li>有點像變數但是更強大且動態</li></ul><h3 id="基本操作-1"><a href="#基本操作-1" class="headerlink" title="基本操作"></a>基本操作</h3><p>h1,h3 的修飾其實都是一樣的，所以拿出來做 Mixin</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@mixin 名字可以自訂&#123;</span><br><span class="line">&#x2F;&#x2F;輸入修飾的內容</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;把這一行填入需要被修飾的地方</span><br><span class="line">@inclue 名字可以自訂</span><br></pre></td></tr></table></figure><p>實際操作如下:<br>把重複的地方拉出來做<code>@mixin</code>並且命名，再<code>@include名字</code>嵌入要修飾的元素中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">@mixin headingStyles &#123;</span><br><span class="line">  color: $color-secondary;</span><br><span class="line">  text-align: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.banner h1 &#123;</span><br><span class="line"></span><br><span class="line">  font-size: $font-lg;</span><br><span class="line">  @include headingStyles;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.footer h3 &#123;</span><br><span class="line">  font-size: $font-md;</span><br><span class="line">  @include headingStyles;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用類似-function-的寫法嵌入參數"><a href="#使用類似-function-的寫法嵌入參數" class="headerlink" title="使用類似 function 的寫法嵌入參數"></a>使用類似 function 的寫法嵌入參數</h3><p>就可以針對內容物不同輸入不同的變數內容達到類似函式的寫法，讓程式碼更簡潔</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">@mixin headingStyles($fontSize) &#123;</span><br><span class="line">  font-size: $fontSize;</span><br><span class="line">  color: $color-secondary;</span><br><span class="line">  text-align: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.banner h1 &#123;</span><br><span class="line">  @include headingStyles($font-lg);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.footer h3 &#123;</span><br><span class="line">  @include headingStyles($font-md);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>也可以把<code>$fontSize</code>指派預設值(50px)，如果在參數沒有被擺入的預設的文字大小就是 50px</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@mixin headingStyles($fontSize:50px) &#123;</span><br><span class="line">  font-size: $fontSize;</span><br><span class="line">  color: $color-secondary;</span><br><span class="line">  text-align: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="多個參數的寫法-param…"><a href="#多個參數的寫法-param…" class="headerlink" title="多個參數的寫法($param…)"></a>多個參數的寫法($param…)</h3><p>讓 h3 hover 的時候改變顏色字體並且有延緩 字體:0.5s 背景色:1s</p><p>使用<code>$自訂名稱...</code> 來定義多個參數並且使用 transition 來作範例:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">@mixin transition($param...) &#123;</span><br><span class="line">  transition: $param;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.footer h3 &#123;</span><br><span class="line">  @include headingStyles($font-md);</span><br><span class="line">  @include transition(color .5s, background-color 1s);</span><br><span class="line"></span><br><span class="line">  &amp;:hover &#123;</span><br><span class="line">    color: $color-tertiary;</span><br><span class="line">    background-color: $color-primary;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>CSS 的部分會正常顯示不過 scss 部分相當的簡潔易懂<br><img src="https://i.imgur.com/vLQR4Ny.png"></p><h3 id="作者提醒-2"><a href="#作者提醒-2" class="headerlink" title="作者提醒"></a>作者提醒</h3><p>如果出現轉換沒有發生效果的狀況往往查看 terminal 的錯誤訊息會很有用</p><h2 id="SASS-Extend"><a href="#SASS-Extend" class="headerlink" title="SASS Extend"></a>SASS Extend</h2><ul><li>讓選擇器的 style 可以被繼承給另一個選擇器</li><li>避免代碼膨脹(code bloat)程式過於龐大、執行緩慢、浪費資源</li><li>把擁有同樣元素的選擇器包起來跟 mixin 有點像</li><li>寫出更乾淨簡潔的程式碼</li></ul><h3 id="基本操作-2"><a href="#基本操作-2" class="headerlink" title="基本操作"></a>基本操作</h3><p>直接把 heading 的屬性全部繼承出去使用<code>@extend</code>放入想要繼承的屬性選擇器內</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">.heading &#123;</span><br><span class="line">  color: $color-primary;</span><br><span class="line">  font-size: $font-lg;</span><br><span class="line">  background-color: $color-secondary;</span><br><span class="line">  text-align: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.banner h1 &#123;</span><br><span class="line">  @extend .heading;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.footer h3 &#123;</span><br><span class="line">  @extend .heading;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="作者提醒-3"><a href="#作者提醒-3" class="headerlink" title="作者提醒"></a>作者提醒</h3><p>(重要)這樣的操作會出錯!!</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">.heading &#123;</span><br><span class="line">  color: $color-primary;</span><br><span class="line">  font-size: $font-lg;</span><br><span class="line">  background-color: $color-secondary;</span><br><span class="line">  text-align: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.banner h1 &#123;</span><br><span class="line">  @extend .heading;</span><br><span class="line">  &amp;:hover&#123;</span><br><span class="line">  color:blue;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.footer h3 &#123;</span><br><span class="line">  @extend .banner h1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面的 .banner h1 的部分是錯誤的 extend 使用方式修改如下:</p><ul><li>去掉.banner 直接使用 h1</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">h1 &#123;</span><br><span class="line">  @extend .heading;</span><br><span class="line">  &amp;:hover&#123;</span><br><span class="line">  color:blue;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.footer h3 &#123;</span><br><span class="line">  @extend h1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>h1 新增一個 class:h1style</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">h1style &#123;</span><br><span class="line">  @extend .heading;</span><br><span class="line">  &amp;:hover&#123;</span><br><span class="line">  color:blue;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.footer h3 &#123;</span><br><span class="line">  @extend h1style;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="SASS-function"><a href="#SASS-function" class="headerlink" title="SASS function"></a>SASS function</h2><blockquote><p>Function 當我們做呼叫的動作的時候，不斷重複的跑一段程式碼</p></blockquote><h3 id="基本操作-自定-function"><a href="#基本操作-自定-function" class="headerlink" title="基本操作(自定 function)"></a>基本操作(自定 function)</h3><p>製作一個 functiond 可以讓輸入的 font-size * 2 並且呼叫函式放入參數($font-sm)或是輸入值也可以操作(放入 30px)使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">@function fontSize($size) &#123;</span><br><span class="line">  @return $size*2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.banner p &#123;</span><br><span class="line">  font-size: fontSize($font-sm);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>也可以放入預設的值，當呼叫函式並且沒有使用參數時就會使用預設值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">@function fontSize($size:25px) &#123;</span><br><span class="line">  @return $size*2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.footer p &#123;</span><br><span class="line">  font-size: fontSize();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="內建函式-build-in-function"><a href="#內建函式-build-in-function" class="headerlink" title="內建函式(build-in function)"></a>內建函式(build-in function)</h3><p><code>lighten()</code><br><code>darken()</code></p><p>前面放入顏色，後方填變淡、深的%數</p><p><code>transparentize()</code></p><p>後方填入 0-1 之間代表透明度 1 = 透明(跟 CSS 的 rgba 剛好相反)</p><p><code>mix()</code></p><p>混和顏色參數的內容(顏色 1,顏色 2,代表顏色 1:顏色 2 的趴數)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">.nav &#123;</span><br><span class="line">  background-color: lighten($color-primary, 20%);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> .nav &#123;</span><br><span class="line">  background-color: transparentize($color-primary, 20%);</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> .nav &#123;</span><br><span class="line">  background-color: mix(blue, green, 10%);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>變暗<br><img src="https://i.imgur.com/cHnlIjC.png"></p><p>變亮<br><img src="https://i.imgur.com/PoKol9j.png"></p><p>透明<br><img src="https://i.imgur.com/g6zrexM.png"></p><p>混和出來的藍綠色<br><img src="https://i.imgur.com/jJTA4X8.png"></p><h3 id="更多的-Built-In-function"><a href="#更多的-Built-In-function" class="headerlink" title="更多的 Built-In function"></a>更多的 Built-In function</h3><p><a href="https://sass-lang.com/documentation/modules">Built-In Modules</a></p><h2 id="SASS-Placeholder-Selectors"><a href="#SASS-Placeholder-Selectors" class="headerlink" title="SASS Placeholder Selectors"></a>SASS Placeholder Selectors</h2><ul><li>可以產生 selectors 在 CSS 檔案內看不到</li><li>使用%開頭</li><li>讓 CSS 檔案更加簡潔</li></ul><h3 id="基本操作-3"><a href="#基本操作-3" class="headerlink" title="基本操作"></a>基本操作</h3><p>把一些容易重複的 style 寫在一起並且使用%在名字前方:</p><p><code>%heading</code>不會出現在 css 檔案內可是 h1,h3 依舊可以使用他的 style</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">%heading &#123;</span><br><span class="line">  color: $color-primary;</span><br><span class="line">  font-size: $font-lg;</span><br><span class="line">  background-color: $color-secondary;</span><br><span class="line">  text-align: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">h1 &#123;</span><br><span class="line">  @extend %heading;</span><br><span class="line"></span><br><span class="line">  &amp;:hover &#123;</span><br><span class="line">    background-color: green;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.footer h3 &#123;</span><br><span class="line">  @extend h1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="SASS-Imports-and-Partials"><a href="#SASS-Imports-and-Partials" class="headerlink" title="SASS Imports and Partials"></a>SASS Imports and Partials</h2><ul><li><p>解構整個 SASS code 變成不同的檔案</p></li><li><p>讓專案更有結構</p></li><li><p>減少專案複雜度增加便利性</p></li><li><p>Partials<br>建立一個新的 scss 檔案並且名稱加上底線(_)<br><img src="https://i.imgur.com/PWii48j.png"></p></li></ul><p>輸入簡單的內容在 test.scss 內</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.footer h3 &#123;</span><br><span class="line">  font-style: italic;</span><br><span class="line">  border: 3px solid red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Imports<br>在 main.scss 輸入:</li></ul><p><code>@import &quot;test&quot;;</code></p><p>修改 package.json 的內容變成讀取整個 scss 檔案資料，並且重新執行一次<br><code>npm run watch</code><br><img src="https://i.imgur.com/acA7B86.png"></p><p>就可以引入這些 style 瞜!<br><img src="https://i.imgur.com/9dOXph2.png"></p><h1 id="SASS-進階"><a href="#SASS-進階" class="headerlink" title="SASS 進階"></a>SASS 進階</h1><h2 id="Data-Types-in-SASS"><a href="#Data-Types-in-SASS" class="headerlink" title="Data Types in SASS"></a>Data Types in SASS</h2><ul><li>Numbers</li><li>Strings</li><li>Colors</li><li>Lists</li><li>Maps</li><li>Booleans</li><li>Null</li></ul><p><strong>Numbers</strong></p><p>跟一般程式語言一樣有整數跟小數，數字也一樣有單位存在</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; Numbers</span><br><span class="line">.numbers &#123;</span><br><span class="line">    font-weight: 400;</span><br><span class="line">    line-height: 1.5;</span><br><span class="line">    font-size: 20px; &#x2F;&#x2F; rem, em, %</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Strings</strong></p><p>字串可以被<code>&#39;&#39;&quot;&quot;</code>包裹住或者是直接撰寫</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; Strings</span><br><span class="line">.strings &#123;</span><br><span class="line">    font-family: &#39;Helvetica&#39;, Arial, sans-serif;</span><br><span class="line">    font-weight: bold;</span><br><span class="line">    font-style: italic;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Colors</strong></p><p>有這幾種顏色表示方式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; Colors</span><br><span class="line">.colors &#123;</span><br><span class="line">    color: red;</span><br><span class="line">    background-color: #ff0000;</span><br><span class="line">    border-color: rgb(255, 0, 0); &#x2F;&#x2F; rgba(255, 0, 0, .5)</span><br><span class="line">    outline-color: hsl(0, 100%, 50%);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>HSL stands for hue, saturation, and lightness.<br>色調、飽和、亮度</p><p><strong>Lists</strong></p><p>可以是 Number, String, 也可以是混和甚至加入 Color 進去</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#x2F;&#x2F; Lists</span><br><span class="line">.lists &#123;</span><br><span class="line">    margin: 10px 15px 5px 20px;</span><br><span class="line">    font-family: &#39;Raleway&#39;, &#39;Dosis&#39;, &#39;Lato&#39;;</span><br><span class="line">    border: 1px solid red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Maps</strong></p><p>使用 <code>$命名:(key:value, key:value)</code> 的方式建立</p><p>使用 build-in function <code>map-get($命名, 要使用的key)</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; Maps</span><br><span class="line">$colors: (</span><br><span class="line">    &quot;primary&quot;: red,</span><br><span class="line">    2: green,</span><br><span class="line">    3: blue</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">h1 &#123;</span><br><span class="line">    color: map-get($colors, primary);</span><br><span class="line">    background-color: map-get($colors, 2);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Booleans,null</strong></p><p>Booleans 有兩個值 true,false</p><p>null 對於大小寫很敏感如果大小寫打錯就會變成單純的字串沒有效果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; Booleans</span><br><span class="line">&#x2F;&#x2F; true, false</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; null</span><br></pre></td></tr></table></figure><h2 id="SASS-Interpolation-類似-JS-的-template-literal-ES6-版本的"><a href="#SASS-Interpolation-類似-JS-的-template-literal-ES6-版本的" class="headerlink" title="SASS Interpolation(類似 JS 的 template literal,ES6 版本的)"></a>SASS Interpolation(類似 JS 的 template literal,ES6 版本的)</h2><p>可以使用變數在 selectors, properties, 或是其他 values 裡面</p><p>針對下圖這個寫法我們可以用類似 JS 的 template literal 的方式設定變數並且放入字串中<br><img src="https://i.imgur.com/ytHiMHB.png"></p><p>由下方程式碼可以看出:</p><p>使用<code>#&#123;&#125;</code><br>可以用在值、key 裡面都沒有問題會得到上圖的結果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$b: &quot;border&quot;;</span><br><span class="line">$c: &quot;color&quot;;</span><br><span class="line"></span><br><span class="line">h2 &#123;</span><br><span class="line">    box-sizing: #&#123;$b&#125;-box;</span><br><span class="line">    #&#123;$b&#125;: 1px solid blue;</span><br><span class="line">    #&#123;$c&#125;: red;</span><br><span class="line">    background-#&#123;$c&#125;: green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="SASS-For-Loop"><a href="#SASS-For-Loop" class="headerlink" title="SASS For Loop"></a>SASS For Loop</h2><blockquote><p>Loop</p><p>要不斷的跑一段相同的程式碼並且每一次使用不同的 value</p></blockquote><p>可以使用 for loop 達到這樣的效果:<br><img src="https://i.imgur.com/e2YctUB.png"></p><p>使用 through: 呈現 1<del>4<br>使用 to: 呈現 1</del>3(4 會被省略)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$colors: (</span><br><span class="line">    1: red,</span><br><span class="line">    2: green,</span><br><span class="line">    3: blue,</span><br><span class="line">    4: orange</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">@for $i from 1 through 4 &#123;</span><br><span class="line">    .paragraph-#&#123;$i&#125; &#123;</span><br><span class="line">        background-color: map-get($colors, $i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="SASS-Each-Loop"><a href="#SASS-Each-Loop" class="headerlink" title="SASS Each Loop"></a>SASS Each Loop</h2><p>可以使用 each loop 達到這樣的效果:<br><img src="https://i.imgur.com/AExqhlZ.png"></p><p>首先設置 list 也就是 paragraph 的名稱</p><p>接下來使用</p><p>@each 設置參數名稱 in list 名稱{<br>要修飾的屬性-#{設置參數名稱}{<br>屬性:設置參數名稱;</p><p>}</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$colors: red green blue orange;</span><br><span class="line"></span><br><span class="line">@each $color in $colors &#123;</span><br><span class="line">    .paragraph-#&#123;$color&#125; &#123;</span><br><span class="line">        background-color: $color;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="SASS-If-Directive"><a href="#SASS-If-Directive" class="headerlink" title="SASS If Directive"></a>SASS If Directive</h2><ul><li>if()內的結果會以 Boolean 的方式呈現也就是 true/false</li></ul><p>if()判斷市裡面的條件必須是 true 才會執行，所以下方的 h1 修飾 color:red 並不會執行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">h1 &#123;</span><br><span class="line">   @if(false) &#123;</span><br><span class="line">       color: red;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用判斷式判斷參數內容如果不是 large 或 medium 就呈現<code>font-size: 15px</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">@mixin headingSize($size) &#123;</span><br><span class="line">    @if($size &#x3D;&#x3D; large) &#123;</span><br><span class="line">        font-size: 45px;</span><br><span class="line">    &#125; @else if($size &#x3D;&#x3D; medium) &#123;</span><br><span class="line">        font-size: 30px;</span><br><span class="line">    &#125; @else &#123;</span><br><span class="line">        font-size: 15px;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">h1 &#123;</span><br><span class="line">    @include headingSize(small);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;SASS-The-Complete-SASS-Course-CSS-Preprocessor&quot;&gt;&lt;a href=&quot;#SASS-The-Complete-SASS-Course-CSS-Preprocessor&quot; class=&quot;headerlink&quot; title=&quot;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>TEST</title>
    <link href="http://example.com/2021/02/22/TOTO/"/>
    <id>http://example.com/2021/02/22/TOTO/</id>
    <published>2021-02-22T13:58:32.000Z</published>
    <updated>2021-02-26T12:54:39.360Z</updated>
    
    <content type="html"><![CDATA[<p>testText</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;testText&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>JS 幼幼班 - Javascript 篇</title>
    <link href="http://example.com/2021/02/22/JS-for-beginner/"/>
    <id>http://example.com/2021/02/22/JS-for-beginner/</id>
    <published>2021-02-22T13:54:15.401Z</published>
    <updated>2021-02-22T13:55:27.320Z</updated>
    
    <content type="html"><![CDATA[<h1 id="JS-幼幼班"><a href="#JS-幼幼班" class="headerlink" title="JS 幼幼班"></a>JS 幼幼班</h1><hr><h2 id="tags-Javascript-relate"><a href="#tags-Javascript-relate" class="headerlink" title="tags: Javascript relate"></a>tags: Javascript relate</h2><h6 id="tags-Javascript"><a href="#tags-Javascript" class="headerlink" title="tags: Javascript"></a>tags: <code>Javascript</code></h6><h2 id="JS-簡介"><a href="#JS-簡介" class="headerlink" title="JS 簡介"></a>JS 簡介</h2><ul><li>JS 因為想跟 JAVA 一樣熱門所以取的很像</li><li>但它們是完全不同的語言</li><li>JS 後來成為瀏覽器唯一指定「內建程式語言」</li></ul><h3 id="瀏覽器怎麼運作的"><a href="#瀏覽器怎麼運作的" class="headerlink" title="瀏覽器怎麼運作的"></a>瀏覽器怎麼運作的</h3><p>有鑑於 JS 是瀏覽器唯一指定「內建程式語言」，當然需要了解瀏覽器是如何運作的</p><p>這邊舉例說明:瀏覽網頁時，當你點選假設商品好了，伺服器會回傳給你商品資料並且並且顯示在瀏覽器上<br><img src="https://i.imgur.com/s7ZThkq.png"></p><p>從網頁開發工具可以看到以下頁面:</p><p>記得點 Network 跟類別選擇 ALL</p><p><img src="https://i.imgur.com/GhoaXp2.png"></p><h3 id="JS-跟-jQuery-的關係"><a href="#JS-跟-jQuery-的關係" class="headerlink" title="JS 跟 jQuery 的關係"></a>JS 跟 jQuery 的關係</h3><ul><li>JS 是一個程式語言(programming language)</li><li>jQuery 是一個 JS 的函式庫<br>簡單來說他像個工具可以隨時呼叫在不同的瀏覽器上面使用，當然 JS 也可以完全做到一樣的事情，畢竟適用 JS 寫的</li></ul><h3 id="HTTP-請求方法與-HTTP-動詞"><a href="#HTTP-請求方法與-HTTP-動詞" class="headerlink" title="HTTP 請求方法與 HTTP 動詞"></a>HTTP 請求方法與 HTTP 動詞</h3><ul><li>request methods</li><li>HTTP Verb</li></ul><p><img src="https://i.imgur.com/MhxjDdV.png"></p><h2 id="JS-語言基礎-01-變數-amp-數據型態"><a href="#JS-語言基礎-01-變數-amp-數據型態" class="headerlink" title="JS 語言基礎 01 變數&amp;數據型態"></a>JS 語言基礎 01 變數&amp;數據型態</h2><h3 id="變數-variable"><a href="#變數-variable" class="headerlink" title="變數 variable"></a>變數 variable</h3><p>變數在使用前會被宣告</p><p><img src="https://i.imgur.com/on7Vysy.png"></p><p>如果像一開始的那個只有宣告的變數的話</p><p>他會跑出來的結果會是 undefined</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(x);</span><br></pre></td></tr></table></figure><p>當給他 value 的時候就能正常印出數字摟!</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> y = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(y);</span><br></pre></td></tr></table></figure><h4 id="變數是值的符號名稱，可以透過名稱來獲得值的引用"><a href="#變數是值的符號名稱，可以透過名稱來獲得值的引用" class="headerlink" title="變數是值的符號名稱，可以透過名稱來獲得值的引用"></a>變數是值的符號名稱，可以透過名稱來獲得值的引用</h4><p>var x =10 並不是把 10 丟給 X 的意思</p><p>而是透過變數 var x = 10 名稱來獲得值的引用(reference)</p><p><img src="https://i.imgur.com/5AAZt2Q.png"></p><h3 id="第一種型別-Number"><a href="#第一種型別-Number" class="headerlink" title="第一種型別 Number"></a>第一種型別 Number</h3><ul><li>整數 integer</li><li>浮點數 float</li></ul><p>JS 中不會區分這兩者都只會顯示”Number”</p><p><img src="https://i.imgur.com/pwV5N3E.png"></p><p>Python 中這兩者就有區別瞜!</p><p><img src="https://i.imgur.com/5NBqH3i.png"></p><h4 id="浮點數的陷阱"><a href="#浮點數的陷阱" class="headerlink" title="浮點數的陷阱"></a>浮點數的陷阱</h4><p>浮點數可能會造成誤差</p><p><img src="https://i.imgur.com/R3cvdo1.png"></p><p><img src="https://i.imgur.com/pnwCyTs.png"></p><h3 id="第二種資料型別-字串-String"><a href="#第二種資料型別-字串-String" class="headerlink" title="第二種資料型別 字串 String"></a>第二種資料型別 字串 String</h3><p>宣告方法:</p><ul><li>單引號</li><li>雙引號</li><li>單雙引號不可以混用</li><li>ES6 可以使用<code>(``)</code>來宣告</li></ul><p><img src="https://i.imgur.com/PwREY9M.png"></p><p>字串的串接<br><img src="https://i.imgur.com/m6dinYH.png"></p><h3 id="第三種資料型態-Boolean-布林值"><a href="#第三種資料型態-Boolean-布林值" class="headerlink" title="第三種資料型態 Boolean 布林值"></a>第三種資料型態 Boolean 布林值</h3><p><img src="https://i.imgur.com/wXpRpPV.png"></p><p>使用 Boolean 來做判斷流程是他很重要的作用</p><p><img src="https://i.imgur.com/NVksCqE.png"></p><h3 id="第四、第五種資料型別-null-空值-與-undefined-未定義"><a href="#第四、第五種資料型別-null-空值-與-undefined-未定義" class="headerlink" title="第四、第五種資料型別 null 空值 與 undefined 未定義"></a>第四、第五種資料型別 null 空值 與 undefined 未定義</h3><ul><li>undefined 未定義</li></ul><p>宣告變數卻沒有指派時候印出 x 會得到</p><p>undefined 因為值還沒有指派</p><p>型別也是 undefined</p><p><img src="https://i.imgur.com/9IWUrwW.png"></p><ul><li>null 空值</li></ul><p>指派一個空值給變數</p><p><img src="https://i.imgur.com/oyPNi5x.png"></p><h2 id="JS-語言基礎-02-運算元與運算子"><a href="#JS-語言基礎-02-運算元與運算子" class="headerlink" title="JS 語言基礎 02 運算元與運算子"></a>JS 語言基礎 02 運算元與運算子</h2><p>下圖中 1, 2 的部分是運算元，(+)就是運算子，整段式子為運算式</p><p><img src="https://i.imgur.com/F9oedTH.png"></p><h3 id="比較運算子介紹-大於小於-與等於-screenflow"><a href="#比較運算子介紹-大於小於-與等於-screenflow" class="headerlink" title="比較運算子介紹 大於小於.與等於 screenflow"></a>比較運算子介紹 大於小於.與等於 screenflow</h3><p>這邊的觀念比較直覺只要內容是正確的就顯示 true 反之則顯示 false</p><p><img src="https://i.imgur.com/EwkmXyu.png"></p><h3 id="比較運算子第二部分-三個等於與兩個等於-有什麼不一樣"><a href="#比較運算子第二部分-三個等於與兩個等於-有什麼不一樣" class="headerlink" title="比較運算子第二部分 三個等於與兩個等於 有什麼不一樣"></a>比較運算子第二部分 三個等於與兩個等於 有什麼不一樣</h3><ul><li>一個等於是指派賦值運算子</li></ul><p><img src="https://i.imgur.com/4rFvd13.png"></p><ul><li>兩個等於不是嚴格的比較</li></ul><p>所以下圖就算是型別不同還是會判斷成這樣</p><p><img src="https://i.imgur.com/qx46t5f.png"></p><ul><li>三個等於是嚴格的比較</li></ul><p>實務中也比較常使用</p><p><img src="https://i.imgur.com/wkiL9kW.png"></p><h3 id="算數運算子-加減乘除"><a href="#算數運算子-加減乘除" class="headerlink" title="算數運算子 加減乘除"></a>算數運算子 加減乘除</h3><p>這邊觀念比較簡單<br><img src="https://i.imgur.com/8tsDdJx.png"></p><h3 id="算數運算子-餘數與被除數"><a href="#算數運算子-餘數與被除數" class="headerlink" title="算數運算子 餘數與被除數"></a>算數運算子 餘數與被除數</h3><p>這邊觀念比較簡單</p><p>(%)這個運算子可以計算出餘數<br><img src="https://i.imgur.com/uZ2rxFD.png"></p><h3 id="邏輯運算子-AND-amp-amp-與-OR"><a href="#邏輯運算子-AND-amp-amp-與-OR" class="headerlink" title="邏輯運算子 AND (&amp;&amp;) 與 OR(||)"></a>邏輯運算子 AND (&amp;&amp;) 與 OR(||)</h3><p>(||)</p><p>只要有一個是 true 就是 true</p><p><img src="https://i.imgur.com/0x5Fr9b.png"></p><p>(&amp;&amp;)</p><p>兩邊必須一樣才是 true</p><p><img src="https://i.imgur.com/q92vvGV.png"><br><img src="https://i.imgur.com/IaaX9lR.png"></p><p>進階的例子:</p><p>就算前面是 false 但是因為是(||)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(<span class="number">3</span>==<span class="number">2</span>) || <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">=&gt;<span class="literal">true</span></span><br></pre></td></tr></table></figure><p>因為&amp;&amp;這個運算符必須兩個都跑過所以會跑到第二個</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="number">5</span></span><br><span class="line">y =<span class="number">2</span></span><br><span class="line"></span><br><span class="line">(x-y) &amp;&amp; (y-<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">=&gt; <span class="number">1</span></span><br></pre></td></tr></table></figure><p>左邊如果是 false 會直接返回 false<br><img src="https://i.imgur.com/SN7fByu.png"></p><p>如果是(||)就會左邊的跑完就出結果</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="number">5</span></span><br><span class="line">y =<span class="number">2</span></span><br><span class="line"></span><br><span class="line">(x-y) || (y-<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">=&gt; <span class="number">1</span></span><br></pre></td></tr></table></figure><p>這邊卻會繼續執行是比較不一樣的地方</p><p><img src="https://i.imgur.com/nRZaUGG.png"></p><p>或等於 (||=)</p><p><img src="https://i.imgur.com/X6EedzQ.png"></p><p>如果有預設值則跑預設值的結果</p><p><img src="https://i.imgur.com/AqAlpQS.png"></p><h3 id="邏輯運算子-NOT"><a href="#邏輯運算子-NOT" class="headerlink" title="邏輯運算子 NOT (!)"></a>邏輯運算子 NOT (!)</h3><p>不等於!!</p><p><img src="https://i.imgur.com/gWqzZXN.png"></p><h3 id="三元運算子"><a href="#三元運算子" class="headerlink" title="三元運算子"></a>三元運算子</h3><p>這句話很好的解釋了三元運算子的運算式<br><img src="https://i.imgur.com/I1Tg8LV.png"></p><p>如果 1&gt;=3 我就印出 a 不然我就印出 b</p><p>明顯問句是 1 不大於等於 3 錯得所以印出 b</p><p><img src="https://i.imgur.com/YEOuI5J.png"></p><p>其實三元運算子實際上長這樣:<br><img src="https://i.imgur.com/3irInfK.png"></p><p>賦值運算子與次方(+= 系列)</p><h3 id="賦值運算子與次方-系列"><a href="#賦值運算子與次方-系列" class="headerlink" title="賦值運算子與次方(+= 系列)"></a>賦值運算子與次方(+= 系列)</h3><p>這邊解釋各種加減乘除=的用法</p><p><img src="https://i.imgur.com/YXFU62o.png"><br><img src="https://i.imgur.com/tYtlRg0.png"></p><h2 id="JS-語言基礎-03-控制流程-Control-Flow"><a href="#JS-語言基礎-03-控制流程-Control-Flow" class="headerlink" title="JS 語言基礎 03 控制流程 Control Flow"></a>JS 語言基礎 03 控制流程 Control Flow</h2><h3 id="if-else-if-else"><a href="#if-else-if-else" class="headerlink" title="if else if else:"></a>if else if else:</h3><p>如果判斷內容顯示 true 則跑所屬下方程式碼不然就是繼續往下判斷</p><p><img src="https://i.imgur.com/cNEfylI.png"></p><h3 id="switch"><a href="#switch" class="headerlink" title="switch"></a>switch</h3><p>跟 if 的判斷式很像，但要注意 break 不然程式會一直跑下去部跳出迴圈</p><p><img src="https://i.imgur.com/77yyb2Z.png"></p><h3 id="for"><a href="#for" class="headerlink" title="for"></a>for</h3><h4 id="基本的-for-迴圈"><a href="#基本的-for-迴圈" class="headerlink" title="基本的 for 迴圈:"></a>基本的 for 迴圈:</h4><p>包含了 (初始值 終止條件 每次執行的語句)</p><p>迭代: 逐一的印出來</p><p><img src="https://i.imgur.com/Pfz23lY.png"></p><h4 id="倒著數回來的綿羊"><a href="#倒著數回來的綿羊" class="headerlink" title="倒著數回來的綿羊~"></a>倒著數回來的綿羊~</h4><p><img src="https://i.imgur.com/v6mpbCu.png"></p><h4 id="組合技-數到-31-隻的時候睡著了-第-10-隻的時候有點想睡"><a href="#組合技-數到-31-隻的時候睡著了-第-10-隻的時候有點想睡" class="headerlink" title="組合技 數到 31 隻的時候睡著了 第 10 隻的時候有點想睡"></a>組合技 數到 31 隻的時候睡著了 第 10 隻的時候有點想睡</h4><p><img src="https://i.imgur.com/Ihh2aEC.png"></p><h4 id="跳著數綿羊"><a href="#跳著數綿羊" class="headerlink" title="跳著數綿羊"></a>跳著數綿羊</h4><p><img src="https://i.imgur.com/K13mpV6.png"></p><h4 id="跳過特定數字的綿羊"><a href="#跳過特定數字的綿羊" class="headerlink" title="跳過特定數字的綿羊"></a>跳過特定數字的綿羊</h4><p>使用<code>continue</code></p><p><img src="https://i.imgur.com/NMQffWx.png"></p><h3 id="while"><a href="#while" class="headerlink" title="while"></a>while</h3><p>比較攏長的寫法不過還是要懂~</p><p><img src="https://i.imgur.com/e1s86SP.png"></p><h3 id="do-while"><a href="#do-while" class="headerlink" title="do..while"></a>do..while</h3><p>先跑一次，再判斷要不要繼續跑</p><p>直接跑出第十一隻綿羊 因為它會先進一次迴圈</p><p><img src="https://i.imgur.com/EpL1orX.png"></p><h3 id="九九乘法表"><a href="#九九乘法表" class="headerlink" title="九九乘法表"></a>九九乘法表</h3><p>使用雙重迴圈加上字串串接</p><p>當 i = 1<br>j 會開始印出 1~10</p><p>當 i = 2<br>j 會開始印出 1~10</p><p>把兩者放入字串串接之後就完成瞜~</p><p><img src="https://i.imgur.com/29lA79T.png"></p><h2 id="JS-語言基礎-04-function"><a href="#JS-語言基礎-04-function" class="headerlink" title="JS 語言基礎 04 function"></a>JS 語言基礎 04 function</h2><p>DRY = don’t repeat yourself</p><p>盡量避免重複讓他工具化就是 function 的目的瞜!</p><p><img src="https://i.imgur.com/nHJ7rDY.png"></p><h3 id="了解表達式-Expression-與陳述句-Statement-的差異"><a href="#了解表達式-Expression-與陳述句-Statement-的差異" class="headerlink" title="了解表達式(Expression)與陳述句(Statement)的差異"></a>了解表達式(Expression)與陳述句(Statement)的差異</h3><ul><li>陳述句(Statement)</li></ul><p>不會有值</p><p>如　 if else,switch</p><ul><li>表達式(Expression)</li></ul><p>一定會有值</p><p>如 1 + 1</p><h3 id="使用函式陳述式-Function-Statement-與函式表達式-Function-Expression"><a href="#使用函式陳述式-Function-Statement-與函式表達式-Function-Expression" class="headerlink" title="使用函式陳述式(Function Statement)與函式表達式(Function Expression)"></a>使用函式陳述式(Function Statement)與函式表達式(Function Expression)</h3><ul><li>函式陳述式(Function Statement)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">helloFunctionStatement</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;hello function statement !!!&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">helloFunctionStatement()</span><br></pre></td></tr></table></figure><ul><li>函式表達式(Function Expression)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> helloFunctionExpression = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;hello function Expression !!!&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">helloFunctionExpression()</span><br></pre></td></tr></table></figure><ul><li>Hoisting 變數提升</li></ul><p>它讓函式陳述式可以先呼叫函式在執行他的身體</p><p><img src="https://i.imgur.com/qMf63CS.png"></p><p>函式表達式則不行呼叫函式一定要寫在身體下方</p><p><img src="https://i.imgur.com/CJzxbrr.png"></p><h3 id="變數能夠影響的範圍作用域-Scope"><a href="#變數能夠影響的範圍作用域-Scope" class="headerlink" title="變數能夠影響的範圍作用域( Scope )"></a>變數能夠影響的範圍作用域( Scope )</h3><p><img src="https://i.imgur.com/9HZOB1r.png"></p><p>印出的結果是</p><p>150<br>100</p><p>代表 funciton 裏面的變數不會影響到外面的</p><p>但是如果 function 裡面的關鍵字 var 或是 let const 忘記寫了就會影響到外面的變數瞜!</p><p><img src="https://i.imgur.com/ElbwThz.png"></p><p>印出的結果是</p><p>150<br>150</p><h3 id="全域變數與區域變數"><a href="#全域變數與區域變數" class="headerlink" title="全域變數與區域變數"></a>全域變數與區域變數</h3><p>在 function 內宣告的變數就是區域變數<br><img src="https://i.imgur.com/r55q1PP.png"></p><p>不再 function 內的話就是全域變數可以被當作 property 被 window 使用<br><img src="https://i.imgur.com/kXFHVro.png"></p><p>不是變數 (會被存取成屬性(property))</p><p><img src="https://i.imgur.com/KJ3S0XN.png"></p><p>當包含不是變數的 function 被呼叫執行後這個不是變數的部分也可以被當作 property 被 window 使用瞜!</p><p><img src="https://i.imgur.com/GosNh9F.png"></p><h3 id="回呼函數-Callback-Function-把函數做為參數傳遞"><a href="#回呼函數-Callback-Function-把函數做為參數傳遞" class="headerlink" title="回呼函數 Callback Function - 把函數做為參數傳遞"></a>回呼函數 Callback Function - 把函數做為參數傳遞</h3><p>這樣寫就可以把把函數做為參數傳遞:</p><p>當中的 alert 就可以改成各種方法去執行這個函式瞜<br><img src="https://i.imgur.com/GBM4gEb.png"></p><h3 id="匿名函式"><a href="#匿名函式" class="headerlink" title="匿名函式"></a>匿名函式</h3><p>下方的函式沒有名稱的部分就是匿名函式並且它只能放在回乎函式之中等待被呼叫的時候才使用</p><p>匿名的因為是因為它是預計要被傳進去的函式</p><p><img src="https://i.imgur.com/ztMucl2.png"></p><h3 id="IIFE-立即函式"><a href="#IIFE-立即函式" class="headerlink" title="IIFE 立即函式"></a>IIFE 立即函式</h3><p>使用的理由是避免一些不必要的汙染(變數的部分)</p><ul><li>全名: Immediately Invoked Functions Expression</li><li>可以立即呼叫的函式表達式</li><li>表達式: expression 它會回傳值</li><li>使用立即函式 會立刻執行函式</li></ul><p><img src="https://i.imgur.com/x18fhcO.png"></p><h3 id="hoisting-變數提升"><a href="#hoisting-變數提升" class="headerlink" title="hoisting 變數提升"></a>hoisting 變數提升</h3><p>不管在哪一行做的變數都視為在第一行做宣告</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//一開始的樣子</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(x);<span class="comment">// 結果是undefined因為它實際上長這樣</span></span><br><span class="line"></span><br><span class="line">----------</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> x;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(x);</span><br><span class="line"></span><br><span class="line"><span class="comment">//實際上內建提升上去變數</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>看四個 console.log()的印出結果:</p><p>第一個紅色框是 undefined</p><p>第二個是 10</p><p>第三個是 undefined</p><p>第四個是 20</p><p>原樣:<br><img src="https://i.imgur.com/kP0yVPP.png"></p><p>提升後的樣子:<br><img src="https://i.imgur.com/zRGav1B.png"></p><h2 id="JS-語言基礎-05-物件介紹"><a href="#JS-語言基礎-05-物件介紹" class="headerlink" title="JS 語言基礎 05 物件介紹"></a>JS 語言基礎 05 物件介紹</h2><h3 id="JS-中的物件"><a href="#JS-中的物件" class="headerlink" title="JS 中的物件"></a>JS 中的物件</h3><p>``</p><ul><li>用大括號宣告({})</li><li>鍵值對應(key value pairs)</li><li>值又稱屬性(attribute)</li></ul><p><img src="https://i.imgur.com/iAa2ft0.png"></p><h3 id="物件的創建"><a href="#物件的創建" class="headerlink" title="物件的創建:"></a>物件的創建:</h3><p>實際的例子:<br><img src="https://i.imgur.com/BTEz50W.png"></p><p>使用 attribute 的方法:</p><ul><li>使用(.)</li><li>使用[‘’]</li></ul><p><img src="https://i.imgur.com/wgz7dl0.png"></p><p>記得呼叫物件的 function 要使用括號喔!()</p><p><img src="https://i.imgur.com/CPDOeUz.png"></p><h3 id="添加屬性至物件上"><a href="#添加屬性至物件上" class="headerlink" title="添加屬性至物件上"></a>添加屬性至物件上</h3><p>添加的方式如下:</p><ul><li>使用(.)</li><li>使用[‘’]</li><li>function 添加的方式</li></ul><p><img src="https://i.imgur.com/67DDc7b.png"><br><img src="https://i.imgur.com/Si6hoZe.png"></p><p>添加後的屬性<br><img src="https://i.imgur.com/LKsFFo0.png"></p><h2 id="JS-語言基礎-06-陣列介紹"><a href="#JS-語言基礎-06-陣列介紹" class="headerlink" title="JS 語言基礎 06 陣列介紹"></a>JS 語言基礎 06 陣列介紹</h2><p>陣列是一種資料結構(Array)</p><ul><li>物件是鍵值對(key-value pairs)</li><li>陣列是依照索引排序(index)的資料結構</li><li>不推薦陣列的內容字串跟數字混用不然會比較不好操作</li></ul><p>通常長這樣:<br><img src="https://i.imgur.com/s76qbA0.png"></p><p>索引的部分(index):</p><p>0,1,2 的部分</p><p><img src="https://i.imgur.com/RCsgGVv.png"></p><p>擷取其值[]:</p><p><img src="https://i.imgur.com/2AJBh4f.png"></p><p>取陣列的長度大小 length:</p><p><img src="https://i.imgur.com/OTqScAn.png"></p><h3 id="陣列基本操作-pop-與-push"><a href="#陣列基本操作-pop-與-push" class="headerlink" title="陣列基本操作 pop 與 push"></a>陣列基本操作 pop 與 push</h3><p>pop 把最後一個元素去掉</p><p><img src="https://i.imgur.com/mK8tWm5.png"></p><p>push 把一個值加到最後</p><p><img src="https://i.imgur.com/ik9vRMy.png"></p><h3 id="陣列基本操作-替換元素-與-取得最後一個元素"><a href="#陣列基本操作-替換元素-與-取得最後一個元素" class="headerlink" title="陣列基本操作 替換元素 與 取得最後一個元素"></a>陣列基本操作 替換元素 與 取得最後一個元素</h3><p>替換元素:</p><p>帶入 index 後直接輸入要替換的值</p><p><img src="https://i.imgur.com/M6EV9jy.png"></p><p>取得最後一個元素的值:</p><p>使用 length 取得陣列長度後減一就是最後一個值的 index 搂</p><p><img src="https://i.imgur.com/8SDCdzk.png"></p><h3 id="陣列操作-indexOf-取得元素的索引"><a href="#陣列操作-indexOf-取得元素的索引" class="headerlink" title="陣列操作 indexOf 取得元素的索引"></a>陣列操作 indexOf 取得元素的索引</h3><p>很直接使用(.indexOf)</p><p><img src="https://i.imgur.com/axNFBsm.png"></p><h3 id="陣列的基本操作-切片-slice-與-方法這麼多到底要怎麼記"><a href="#陣列的基本操作-切片-slice-與-方法這麼多到底要怎麼記" class="headerlink" title="陣列的基本操作 切片 slice 與 方法這麼多到底要怎麼記"></a>陣列的基本操作 切片 slice 與 方法這麼多到底要怎麼記</h3><p>切片 slice</p><p><code>陣列.slice(起始點,終點)</code></p><p>切出來的值會包含起始點不包含終點</p><p><img src="https://i.imgur.com/4AlzU5O.png"></p><p><img src="https://i.imgur.com/2xclorT.png"></p><p>方法不死背 多巡查詢使用</p><h2 id="JS-語言基礎-06-陣列的進階方法"><a href="#JS-語言基礎-06-陣列的進階方法" class="headerlink" title="JS 語言基礎 06 陣列的進階方法"></a>JS 語言基礎 06 陣列的進階方法</h2><h3 id="6-1-用-map-方法來把陣列中的資料，改成你想要的樣子"><a href="#6-1-用-map-方法來把陣列中的資料，改成你想要的樣子" class="headerlink" title="6.1 用 map() 方法來把陣列中的資料，改成你想要的樣子"></a>6.1 用 map() 方法來把陣列中的資料，改成你想要的樣子</h3><p><code>Array.prototype.map()</code></p><p>這邊的意思是每個陣列都會有這方 map()方法<br>他可以針對陣列中的內容做操作並且產生一個新的陣列</p><ul><li>做數字運算</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> a1 = [<span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>];</span><br><span class="line"><span class="keyword">const</span> result2 = a1.map(<span class="function">(<span class="params">a</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> a * a</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(result2); <span class="comment">//</span></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/7K17cLP.png"></p><ul><li>做字串串接</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> dogs = [<span class="string">&quot;1&quot;</span>, <span class="string">&quot;2&quot;</span>, <span class="string">&quot;3&quot;</span>, <span class="string">&quot;4&quot;</span>]</span><br><span class="line"><span class="keyword">let</span> result = dogs.map(<span class="function">(<span class="params">dog</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> dog + <span class="string">&quot;dog is fury&quot;</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(result);</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/rGJrID4.png"></p><h3 id="6-2-如何使用-for-迴圈實作-map"><a href="#6-2-如何使用-for-迴圈實作-map" class="headerlink" title="6.2 如何使用 for 迴圈實作 map()"></a>6.2 如何使用 for 迴圈實作 map()</h3><p>比較複雜一些需要用到比較多邏輯的部分不像 map 簡潔，但可以得到一樣的結果</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> dogs = [<span class="string">&quot;1&quot;</span>, <span class="string">&quot;2&quot;</span>, <span class="string">&quot;3&quot;</span>, <span class="string">&quot;4&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">mapDemo</span>(<span class="params">dogs</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> result = [];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; dogs.length; i++) &#123;</span><br><span class="line">        <span class="keyword">let</span> str = dogs[i] + <span class="string">&quot;dog is fury&quot;</span>;</span><br><span class="line">        result.push(str);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>並且作呼叫印出的結果會跟使用 map 一樣<br><img src="https://i.imgur.com/4Rhsfzg.png"></p><h3 id="6-3-用-forEach-讓陣列中的元素一個一個出來面對"><a href="#6-3-用-forEach-讓陣列中的元素一個一個出來面對" class="headerlink" title="6.3 用 forEach() 讓陣列中的元素一個一個出來面對"></a>6.3 用 forEach() 讓陣列中的元素一個一個出來面對</h3><p>逐個印出值並且無法做出 return</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> a1 = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;f&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> forEachResult = a1.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">el</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(el);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/G9oDqoS.png"></p><h4 id="跟-map-做比較"><a href="#跟-map-做比較" class="headerlink" title="跟 map 做比較"></a>跟 map 做比較</h4><p>map 會返回值可以做 return<br>forEach 不會返回值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> a1 = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;f&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> forEachResult = a1.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">el</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> el + <span class="string">&quot;is good&quot;</span>;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> mapResult = a1.map(<span class="function"><span class="keyword">function</span> (<span class="params">el</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> el + <span class="string">&quot;is good&quot;</span>;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/nTE6jns.png"></p><h4 id="用-for-來寫-forEach"><a href="#用-for-來寫-forEach" class="headerlink" title="用 for 來寫 forEach"></a>用 for 來寫 forEach</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> a1 = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;f&#x27;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; a1.length; i++) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(a1[i] + <span class="string">&quot;is good&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一樣可以印出結果<br><img src="https://i.imgur.com/ufvZ70H.png"></p><h3 id="6-4-使用-filter-找出陣列中符合條件的元素-element"><a href="#6-4-使用-filter-找出陣列中符合條件的元素-element" class="headerlink" title="6.4 使用 filter() 找出陣列中符合條件的元素(element)"></a>6.4 使用 filter() 找出陣列中符合條件的元素(element)</h3><p>使用條件做篩選並把選中的內容放進新的陣列</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">as</span> = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>];</span><br><span class="line"></span><br><span class="line">newa = <span class="keyword">as</span>.filter(<span class="function"><span class="keyword">function</span> (<span class="params">a</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a &gt; <span class="number">5</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/wVu73h2.png"></p><h4 id="用物件做操作"><a href="#用物件做操作" class="headerlink" title="用物件做操作"></a>用物件做操作</h4><p>篩選出大於 25 歲小於 123 歲的物件排進新的陣列</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> bs = [&#123;</span><br><span class="line">        name: <span class="string">&#x27;tom&#x27;</span>,</span><br><span class="line">        age: <span class="number">36</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        name: <span class="string">&#x27;hoe&#x27;</span>,</span><br><span class="line">        age: <span class="number">123</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        name: <span class="string">&#x27;dif&#x27;</span>,</span><br><span class="line">        age: <span class="number">43</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        name: <span class="string">&#x27;aer&#x27;</span>,</span><br><span class="line">        age: <span class="number">25</span></span><br><span class="line">    &#125;</span><br><span class="line">]</span><br><span class="line">newa = bs.filter(<span class="function"><span class="keyword">function</span> (<span class="params">b</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> b.age &gt; <span class="number">25</span> &amp;&amp; b.age &lt; <span class="number">123</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/3UNrsks.png"></p><h3 id="6-5-Array-陣列的-find-方法，找到第一筆符合條件的資料"><a href="#6-5-Array-陣列的-find-方法，找到第一筆符合條件的資料" class="headerlink" title="6.5 Array 陣列的 find() 方法，找到第一筆符合條件的資料"></a>6.5 Array 陣列的 find() 方法，找到第一筆符合條件的資料</h3><ul><li>Array 陣列的 find()方法，找到第一筆符合條件的資料只印出一個找到的值</li><li>filter()方法則是過濾符合的條件(每一筆)並組成新陣列</li></ul><h4 id="find"><a href="#find" class="headerlink" title="find()"></a>find()</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> a1 = [<span class="number">1</span>, <span class="number">34</span>, <span class="number">52</span>, <span class="number">55</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">2345</span>, <span class="number">55</span>, <span class="number">44</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> find = a1.find(<span class="function">(<span class="params">found</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> found === <span class="number">12</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(find);</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/y9gnABv.png"></p><h4 id="filter"><a href="#filter" class="headerlink" title="filter()"></a>filter()</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> a1 = [<span class="number">1</span>, <span class="number">34</span>, <span class="number">52</span>, <span class="number">55</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">2345</span>, <span class="number">55</span>, <span class="number">44</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> find = a1.filter(<span class="function">(<span class="params">found</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> found === <span class="number">12</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(find);</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/uxgc2CL.png"></p><h3 id="6-6-為什麼查詢-Array-的方法時，需要找的是-Array-prototype-的方法"><a href="#6-6-為什麼查詢-Array-的方法時，需要找的是-Array-prototype-的方法" class="headerlink" title="6.6 為什麼查詢 Array 的方法時，需要找的是 Array.prototype 的方法"></a>6.6 為什麼查詢 Array 的方法時，需要找的是 Array.prototype 的方法</h3><p>由下圖可以理解，在 prototype 後面加入的屬性是可以真的使用的</p><p><img src="https://i.imgur.com/ukGal9q.png"></p><h3 id="6-7-用-reduce-加總陣列結果"><a href="#6-7-用-reduce-加總陣列結果" class="headerlink" title="6.7 用 reduce() 加總陣列結果"></a>6.7 用 reduce() 加總陣列結果</h3><p>可以使用 forEach 達到一樣的效果</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> num = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, ]</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> result = <span class="number">0</span>;</span><br><span class="line">num.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> result += n</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">console</span>.log(result);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> sum = num.reduce(<span class="function"><span class="keyword">function</span> (<span class="params">result, current</span>) </span>&#123;</span><br><span class="line">    result += current;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(sum);</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/NVlaXr3.png"></p><h2 id="JS-語言基礎-07-瀏覽器中的-JS"><a href="#JS-語言基礎-07-瀏覽器中的-JS" class="headerlink" title="JS 語言基礎 07 瀏覽器中的 JS"></a>JS 語言基礎 07 瀏覽器中的 JS</h2><h3 id="DOM-與樹狀結構"><a href="#DOM-與樹狀結構" class="headerlink" title="DOM 與樹狀結構"></a>DOM 與樹狀結構</h3><p>甚麼是 DOM</p><ul><li>Document Object Model 文件物件模型</li><li>HTML 的格式須遵守 W3C 的規範</li><li>而遵守 W3C 的 HTML 檔案可以被解成城 DOM 樹(Tree)</li></ul><p>解釋 DOM 樹(Tree)<br><img src="https://i.imgur.com/UTb1iPm.png"></p><p>文件物件模型的意義:<br><img src="https://i.imgur.com/9QAkMzK.png"></p><h3 id="在瀏覽器觀察-DOM-Tree-與-document-物件"><a href="#在瀏覽器觀察-DOM-Tree-與-document-物件" class="headerlink" title="在瀏覽器觀察 DOM Tree 與 document 物件"></a>在瀏覽器觀察 DOM Tree 與 document 物件</h3><p>在開發者瀏覽器打上 document 後:</p><p>會顯現出上方文件物件模型的意義</p><p><img src="https://i.imgur.com/9QAkMzK.png"></p><p><img src="https://i.imgur.com/99I45nJ.png"></p><h3 id="什麼是-API"><a href="#什麼是-API" class="headerlink" title="什麼是 API"></a>什麼是 API</h3><ul><li>Application Programming Interface</li><li>應用程式 編程 介面</li><li>透過寫程式來跟網頁上的功能(像是 email google MAP 搜尋等等)溝通</li></ul><h3 id="瀏覽-document-物件-API-文件"><a href="#瀏覽-document-物件-API-文件" class="headerlink" title="瀏覽 document 物件 API 文件"></a>瀏覽 document 物件 API 文件</h3><p><a href="https://developer.mozilla.org/zh-TW/docs/Web/API/document">document Web API</a></p><p><a href="https://www.w3schools.com/js/js_api_intro.asp">W3Cschool Web API</a></p><h3 id="BOM-與-window-物件"><a href="#BOM-與-window-物件" class="headerlink" title="BOM 與 window 物件"></a>BOM 與 window 物件</h3><ul><li>Browser Object Model 瀏覽器物件模型</li><li>就是 window 物件 就是整個瀏覽器所以其實不用打出來也可以有效果</li></ul><p><img src="https://i.imgur.com/6dViT6V.png"></p><p><img src="https://i.imgur.com/i6LTlLd.png"></p><h4 id="Location"><a href="#Location" class="headerlink" title="Location:"></a>Location:</h4><p><img src="https://i.imgur.com/3rsiA8V.png"></p><h4 id="History-back-go"><a href="#History-back-go" class="headerlink" title="History back() , go()"></a>History back() , go()</h4><p>back()</p><p>可以直接回到上一頁</p><p>go()必須加數字在參數的地方</p><p>可以去下一頁</p><h2 id="JS-語言基礎-08-ES6"><a href="#JS-語言基礎-08-ES6" class="headerlink" title="JS 語言基礎 08 ES6"></a>JS 語言基礎 08 ES6</h2><h3 id="01-let-與-const-01-作用域改變成大括號會怎麼樣"><a href="#01-let-與-const-01-作用域改變成大括號會怎麼樣" class="headerlink" title="01 let 與 const 01 作用域改變成大括號會怎麼樣"></a>01 let 與 const 01 作用域改變成大括號會怎麼樣</h3><p>let 與 const 對比舊時代的 var</p><p>1.作用域的改變</p><ul><li>var=&gt; function</li><li>let,const =&gt;{}</li></ul><h4 id="Example1"><a href="#Example1" class="headerlink" title="Example1:"></a>Example1:</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`迴圈跑第<span class="subst">$&#123;i&#125;</span>次`</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(i);</span><br></pre></td></tr></table></figure><p>很明顯的地方是外面的 var i = 0 被裡面的迴圈汙染到所以傳回來的結果是 10<br><img src="https://i.imgur.com/wexESY7.png"></p><p>所以改成 let 做操作時因為其作用域是{}因此沒有汙染到外面來</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`迴圈跑第<span class="subst">$&#123;i&#125;</span>次`</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(i);</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/za2DaSb.png"></p><h4 id="Example2"><a href="#Example2" class="headerlink" title="Example2:"></a>Example2:</h4><p>用在判斷式上面更明顯使用 var 來操作的話這邊的結果是會直接跑進判斷式中</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (x === <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> x = <span class="number">5</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> x = <span class="number">10</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(x);</span><br></pre></td></tr></table></figure><p>印出結果為 5<br><img src="https://i.imgur.com/ocAUxF2.png"></p><p>全面改成使用 let</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> x = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (x === <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> x = <span class="number">5</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> x = <span class="number">10</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(x);</span><br></pre></td></tr></table></figure><p>印出結果就沒有被汙染瞜</p><p><img src="https://i.imgur.com/BCKG9mX.png"></p><h4 id="Example3"><a href="#Example3" class="headerlink" title="Example3:"></a>Example3:</h4><p>使用大括號的效果跟 IFEE 一樣</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//IIFE立即函式</span></span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params">$</span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> x = <span class="number">1</span>;</span><br><span class="line">&#125;)(jQuery);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;<span class="keyword">let</span> x =<span class="number">1</span>;&#125;</span><br></pre></td></tr></table></figure><h4 id="支援度"><a href="#支援度" class="headerlink" title="支援度"></a>支援度</h4><ul><li>chrome 已經全面支援使用</li><li>但是 IE 部分還沒，所以舊的寫法還是需要了解</li><li>使用 babel 做編譯 ES6 =&gt;ES5</li></ul><h3 id="02-const-常數與注意事項"><a href="#02-const-常數與注意事項" class="headerlink" title="02 const 常數與注意事項"></a>02 const 常數與注意事項</h3><p>const 定義了之後不可以改變的變數</p><p><img src="https://i.imgur.com/V3Z9eDz.png"></p><h4 id="重要例外"><a href="#重要例外" class="headerlink" title="重要例外"></a>重要例外</h4><p>當常數定義物件的時候裡面的值是可以改變的並不會報錯</p><p><img src="https://i.imgur.com/PkrU1Ti.png"></p><p>但是如果你在複寫一次物件就會出問題摟!<br><img src="https://i.imgur.com/B4TwpLl.png"></p><h3 id="03-解構賦值陣列與物件為什麼可以這樣寫"><a href="#03-解構賦值陣列與物件為什麼可以這樣寫" class="headerlink" title="03 解構賦值陣列與物件為什麼可以這樣寫"></a>03 解構賦值陣列與物件為什麼可以這樣寫</h3><h4 id="陣列的解構賦值"><a href="#陣列的解構賦值" class="headerlink" title="陣列的解構賦值"></a>陣列的解構賦值</h4><p><img src="https://i.imgur.com/gKme5TF.png"></p><p>解構賦值的其中一種用法:讓賦值變簡潔<br><img src="https://i.imgur.com/FdPG2N1.png"></p><h4 id="物件的的解構賦值"><a href="#物件的的解構賦值" class="headerlink" title="物件的的解構賦值"></a>物件的的解構賦值</h4><p>前面 let 的部分其實是縮寫</p><p><code>let&#123;a:a,b:a&#125;</code>是原本的樣子</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> &#123;a,b&#125; = &#123;<span class="attr">a</span>: <span class="number">111</span>,<span class="attr">b</span>: <span class="number">222</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;a:&quot;</span> + a, <span class="string">&quot;b:&quot;</span> + b);</span><br></pre></td></tr></table></figure><h3 id="04-for-in-for-of-的區別"><a href="#04-for-in-for-of-的區別" class="headerlink" title="04 for in, for of 的區別"></a>04 for in, for of 的區別</h3><h4 id="for-of-用來迭代可以迭代的物件"><a href="#for-of-用來迭代可以迭代的物件" class="headerlink" title="for of 用來迭代可以迭代的物件"></a>for of 用來迭代可以迭代的物件</h4><blockquote><p>可以迭代的對象包含:<br>Array，Map，Set，String，TypedArray，arguments</p></blockquote><p><img src="https://i.imgur.com/A1qG3Jv.png"></p><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Statements/for...of">for of -MDN</a></p><h4 id="for-in"><a href="#for-in" class="headerlink" title="for in"></a>for in</h4><blockquote><p>迭代可以列舉的屬性</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> object = &#123;</span><br><span class="line">    a: <span class="number">1</span>,</span><br><span class="line">    b: <span class="number">2</span>,</span><br><span class="line">    c: <span class="number">3</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">show_props</span>(<span class="params">obj, objName</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> result = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> prop <span class="keyword">in</span> obj) &#123;</span><br><span class="line">        result += objName + <span class="string">&quot;.&quot;</span> + prop + <span class="string">&quot; = &quot;</span> + obj[prop] + <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 前方的參數是要引入的object 後方是物件的名字</span></span><br><span class="line">alert(show_props(object, <span class="string">&quot;物件&quot;</span>));</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/2jQmrqW.png"></p><h3 id="05-Iterator-迭代器是什麼-如何使用"><a href="#05-Iterator-迭代器是什麼-如何使用" class="headerlink" title="05 Iterator 迭代器是什麼? 如何使用"></a>05 Iterator 迭代器是什麼? 如何使用</h3><h4 id="可迭代協議（iterable-protocol）"><a href="#可迭代協議（iterable-protocol）" class="headerlink" title="可迭代協議（iterable protocol）"></a>可迭代協議（iterable protocol）</h4><p>一個物件如果要被迭代他必須有這個屬性<code>[Symbol.iterator]</code></p><p>而當這個物件需要被迭代的時候這個屬性的不需要引入參數的函式(下方圖片)就會被呼叫來獲得被迭代的值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> myStings = <span class="string">&quot;123&quot;</span>;</span><br><span class="line"></span><br><span class="line">myStings[<span class="built_in">Symbol</span>.iterator]();</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(myStings[<span class="built_in">Symbol</span>.iterator]());</span><br></pre></td></tr></table></figure><p>String Iterator<br><img src="https://i.imgur.com/Ofzt0LW.png"></p><h4 id="迭代器協議（iterator-protocol）"><a href="#迭代器協議（iterator-protocol）" class="headerlink" title="迭代器協議（iterator protocol）"></a>迭代器協議（iterator protocol）</h4><p>迭代器協議定義了一個標準的方式來產生迭代的有限或是無限的值並且都會回傳一個值，而 next()就是一個迭代器</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> myStings = <span class="string">&quot;hello&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> iterator = myStings[<span class="built_in">Symbol</span>.iterator]();</span><br></pre></td></tr></table></figure><p>之後在 chrome 呼叫方法 next()就可以迭代出字串摟</p><p><img src="https://i.imgur.com/7gelfsm.png"></p><h4 id="迭代-array"><a href="#迭代-array" class="headerlink" title="迭代 array"></a>迭代 array</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> myArray = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> arrayIterator = myArray[<span class="built_in">Symbol</span>.iterator]();</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/x24qipJ.png"></p><h3 id="06-for-of-的使用方法"><a href="#06-for-of-的使用方法" class="headerlink" title="06 for of 的使用方法"></a>06 for of 的使用方法</h3><p>從上面解釋過迭代的原理後下方這邊的用法就清楚多了</p><h4 id="for-of-字串的迭代"><a href="#for-of-字串的迭代" class="headerlink" title="for of:字串的迭代"></a>for of:字串的迭代</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> myStings = <span class="string">&quot;hello&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> str <span class="keyword">of</span> myStings) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(str);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/JhVcBmq.png"></p><h4 id="for-of-陣列的迭代"><a href="#for-of-陣列的迭代" class="headerlink" title="for of 陣列的迭代"></a>for of 陣列的迭代</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">let</span> myArray = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i <span class="keyword">of</span> myArray) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/zm9dNdj.png"></p><h3 id="07-樣板字面值-Template-Iterator-與字串字面值-String-Iterator"><a href="#07-樣板字面值-Template-Iterator-與字串字面值-String-Iterator" class="headerlink" title="07 樣板字面值 Template Iterator 與字串字面值 String Iterator"></a>07 樣板字面值 Template Iterator 與字串字面值 String Iterator</h3><ul><li>使用的符號不一樣使用(``)來包裹住文字</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&quot;123&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> str2 = <span class="string">`123`</span>;</span><br></pre></td></tr></table></figure><ul><li>斷行</li></ul><p>Template Iterator 可以直接空格下去不需要使用跳脫字元\n</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&quot;123 \n 123&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> str2 = <span class="string">`123</span></span><br><span class="line"><span class="string">123`</span>;</span><br></pre></td></tr></table></figure><ul><li>嵌入變數</li></ul><p>可以直接在字串串接中放入變數</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> name = <span class="string">&quot;john&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> str2 = <span class="string">`my name is <span class="subst">$&#123;name&#125;</span>`</span>;</span><br></pre></td></tr></table></figure><p>ES5 的寫法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> name = <span class="string">&quot;john&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> str2 = <span class="string">&quot;my name is &quot;</span> + name;</span><br></pre></td></tr></table></figure><h3 id="08-展開運算子-Spread-Operator"><a href="#08-展開運算子-Spread-Operator" class="headerlink" title="08 展開運算子 Spread Operator"></a>08 展開運算子 Spread Operator</h3><h4 id="印出其值"><a href="#印出其值" class="headerlink" title="印出其值"></a>印出其值</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>];</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(...arr1);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/zaP2dyN.png"></p><p>例子</p><p>數學方法 Math.min()取最小值參數不能放入陣列這個時候就可以使用展開運算子</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>];</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.min(arr1));</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/QRqoJvl.png"></p><p>這樣就可以正常使用搂!</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>];</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.min(...arr1)); <span class="comment">// 印出最小值為 1</span></span><br></pre></td></tr></table></figure><h4 id="陣列串接"><a href="#陣列串接" class="headerlink" title="陣列串接"></a>陣列串接</h4><p>把內容物有重疊的兩個陣列構成新的陣列</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> arr2 = [<span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> arr3 = [...arr1, ...arr2];</span><br></pre></td></tr></table></figure><p>這樣的寫法會等於<code>arr1.concat(arr2)</code></p><p><img src="https://i.imgur.com/TPTXpLY.png"></p><h4 id="物件的串接"><a href="#物件的串接" class="headerlink" title="物件的串接"></a>物件的串接</h4><p>把內容物有重疊的屬性直接用 o2 取代掉，後方的新屬性會取代掉舊的屬性</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> o1 = &#123; <span class="attr">a</span>: <span class="number">1</span>, <span class="attr">b</span>: <span class="number">2</span>, <span class="attr">c</span>: <span class="number">3</span> &#125;;</span><br><span class="line"><span class="keyword">let</span> o2 = &#123; <span class="attr">c</span>: <span class="number">100</span>, <span class="attr">d</span>: <span class="number">4</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> o3 = &#123; ...o1, ...o2 &#125;;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/4UgB52N.png"></p><h3 id="09-箭頭函式-1"><a href="#09-箭頭函式-1" class="headerlink" title="09 箭頭函式(1)"></a>09 箭頭函式(1)</h3><p>怎麼樣寫會有回傳值, 怎麼樣寫不會有回傳值</p><p>有回傳值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> function1 = <span class="function"><span class="params">x</span> =&gt;</span> x+<span class="number">1</span></span><br></pre></td></tr></table></figure><p>無回傳值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> function1 = <span class="function"><span class="params">x</span> =&gt;</span> &#123;x+<span class="number">1</span>&#125;</span><br></pre></td></tr></table></figure><h3 id="箭頭函式-2"><a href="#箭頭函式-2" class="headerlink" title="箭頭函式(2)"></a>箭頭函式(2)</h3><p>call 與 this</p><p>這邊 this 的指向是 window</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">greet</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> reply = <span class="string">`Hi, <span class="subst">$&#123;<span class="built_in">this</span>.person&#125;</span>`</span>;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="built_in">this</span>);</span><br><span class="line">&#125;;</span><br><span class="line">greet();</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/PeZfz24.png"></p><p>如果我們想要改變 this 的指向可以使用<code>call()</code>這個方法讓 this 去呼叫到 obj 裡面的屬性</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">greet</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> reply = <span class="string">`Hi, <span class="subst">$&#123;<span class="built_in">this</span>.person&#125;</span>`</span>;</span><br><span class="line">  <span class="built_in">console</span>.log(reply);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> obj = &#123; <span class="attr">person</span>: <span class="string">&quot;BIll&quot;</span> &#125;;</span><br><span class="line"></span><br><span class="line">greet.call(obj);</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/UWNoqdP.png"></p><h3 id="箭頭函式-3"><a href="#箭頭函式-3" class="headerlink" title="箭頭函式(3)"></a>箭頭函式(3)</h3><p>this 綁定的對象不再是 function 本身</p><h4 id="使用-ES5-的函式寫法"><a href="#使用-ES5-的函式寫法" class="headerlink" title="使用 ES5 的函式寫法"></a>使用 ES5 的函式寫法</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> obj = &#123; <span class="attr">person</span>: <span class="string">&quot;BIll&quot;</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">greet</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> reply = <span class="string">`Hi, <span class="subst">$&#123;<span class="built_in">this</span>.person&#125;</span>`</span>;</span><br><span class="line">  <span class="built_in">console</span>.log(reply);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;Hi,&quot;</span>, <span class="built_in">this</span>.perosn);</span><br><span class="line">  &#125;,<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">greet.call(obj);</span><br></pre></td></tr></table></figure><p>因為 function 內部的作用域會是隔開地所以是未定義(undefined)<br><img src="https://i.imgur.com/Dl7tOZ1.png"></p><h4 id="使用-ES6-箭頭函式"><a href="#使用-ES6-箭頭函式" class="headerlink" title="使用 ES6 箭頭函式"></a>使用 ES6 箭頭函式</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> obj = &#123; <span class="attr">person</span>: <span class="string">&quot;BIll&quot;</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">greet</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> reply = <span class="string">`Hi, <span class="subst">$&#123;<span class="built_in">this</span>.person&#125;</span>`</span>;</span><br><span class="line">  <span class="built_in">console</span>.log(reply);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;Hi,&quot;</span>, <span class="built_in">this</span>.person);</span><br><span class="line">  &#125;, <span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">greet.call(obj);</span><br></pre></td></tr></table></figure><p>箭頭函式不會有作用域的隔閡所以不會影響到 this，所以它是一樣吃到外面的 obj<br><img src="https://i.imgur.com/4iyrpM9.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;JS-幼幼班&quot;&gt;&lt;a href=&quot;#JS-幼幼班&quot; class=&quot;headerlink&quot; title=&quot;JS 幼幼班&quot;&gt;&lt;/a&gt;JS 幼幼班&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&quot;tags-Javascript-relate&quot;&gt;&lt;a href=&quot;#tags-Javas</summary>
      
    
    
    
    
    <category term="Javascript" scheme="http://example.com/tags/Javascript/"/>
    
  </entry>
  
  <entry>
    <title>JS 幼幼班 - jQuery 篇</title>
    <link href="http://example.com/2021/02/22/jQuery-for-beginner/"/>
    <id>http://example.com/2021/02/22/jQuery-for-beginner/</id>
    <published>2021-02-22T12:58:06.215Z</published>
    <updated>2021-02-22T13:54:30.380Z</updated>
    
    <content type="html"><![CDATA[<h1 id="JS-幼幼班-jQuery-篇"><a href="#JS-幼幼班-jQuery-篇" class="headerlink" title="JS 幼幼班 - jQuery 篇"></a>JS 幼幼班 - jQuery 篇</h1><hr><h2 id="tags-Javascript-relate"><a href="#tags-Javascript-relate" class="headerlink" title="tags: Javascript relate"></a>tags: Javascript relate</h2><h6 id="tags-Javascript-jQery"><a href="#tags-Javascript-jQery" class="headerlink" title="tags: Javascript, jQery"></a>tags: <code>Javascript, jQery</code></h6><h1 id="jQuery-簡介"><a href="#jQuery-簡介" class="headerlink" title="jQuery 簡介"></a>jQuery 簡介</h1><h2 id="01-為何還要繼續使用-jQuery-呢"><a href="#01-為何還要繼續使用-jQuery-呢" class="headerlink" title="01 為何還要繼續使用 jQuery 呢?"></a>01 為何還要繼續使用 jQuery 呢?</h2><p>1.台灣還是有高市佔率<br><img src="https://i.imgur.com/h05To2m.png"></p><p>2.支援套件仍然是最多</p><p>3.從 jQuery 了解 JS 在瀏覽器能做些什麼</p><ul><li>DOM 操作</li><li>事件觸發 (滑鼠點擊、鍵盤點擊)</li><li>表單送出</li></ul><h3 id="JQuery-就是把-JS-的內容”擷取”其精華，讓-JS-變得更具體更好操作"><a href="#JQuery-就是把-JS-的內容”擷取”其精華，讓-JS-變得更具體更好操作" class="headerlink" title="JQuery 就是把 JS 的內容”擷取”其精華，讓 JS 變得更具體更好操作"></a>JQuery 就是把 JS 的內容”擷取”其精華，讓 JS 變得更具體更好操作</h3><p>jQuery 的寫法<br><img src="https://i.imgur.com/qfAiSTZ.png"></p><p>JS 的寫法<br><img src="https://i.imgur.com/e19NOf4.png"></p><p>很明顯可以比較出 jQuery 的寫法是比較精簡好讀的</p><h2 id="02-如何使用-jQuery-並實現第一個範例"><a href="#02-如何使用-jQuery-並實現第一個範例" class="headerlink" title="02 如何使用 jQuery 並實現第一個範例"></a>02 如何使用 jQuery 並實現第一個範例</h2><p>步驟一到官網下載檔案<br><a href="https://jquery.com/">jQuery 官網</a></p><p><img src="https://i.imgur.com/doCOYon.png"></p><p>步驟二創建資料夾並把剛剛下載的檔案以及要使用 jQuery 的檔案擺在一起<br><img src="https://i.imgur.com/4taZYsp.png"></p><p>步驟三在 head 內引入 link(跟引入 CSS 很像)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">    &lt;script src=<span class="string">&quot;jquery-3.5.1.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br></pre></td></tr></table></figure><p>步驟四撰寫小範例:</p><p>點擊按鈕修改顏色</p><ul><li><code>$()</code>選擇器</li><li><code>.click</code> 點擊事件</li><li><code>.css</code> 修改 CSS</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h1 id=<span class="string">&quot;hello world&quot;</span>&gt;hello world&lt;/h1&gt;</span><br><span class="line">    &lt;button id=<span class="string">&quot;btnred&quot;</span>&gt;red&lt;/button&gt;</span><br><span class="line">    &lt;button id=<span class="string">&quot;btnblue&quot;</span>&gt;blue&lt;/button&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        $(<span class="string">&quot;#btnred&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            $(<span class="string">&quot;#btnred&quot;</span>).css(<span class="string">&#x27;color&#x27;</span>, <span class="string">&#x27;red&#x27;</span>);</span><br><span class="line">        &#125;)</span><br><span class="line">        $(<span class="string">&quot;#btnblue&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            $(<span class="string">&quot;#btnblue&quot;</span>).css(<span class="string">&#x27;color&#x27;</span>, <span class="string">&#x27;blue&#x27;</span>);</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/L1kNdgS.png"></p><h2 id="03-jQuery-到底在做些什麼"><a href="#03-jQuery-到底在做些什麼" class="headerlink" title="03 jQuery 到底在做些什麼 ?"></a>03 jQuery 到底在做些什麼 ?</h2><p>JS 可以在瀏覽器做的事情以及讓它更精簡且易讀</p><ul><li>當 按下按鈕 =&gt; 跳出視窗</li><li>當 送出表單 =&gt; 跳轉頁面</li><li>當 上傳檔案 =&gt; 通知完成</li></ul><h2 id="04-jQuery-的三大重點"><a href="#04-jQuery-的三大重點" class="headerlink" title="04 jQuery 的三大重點"></a>04 jQuery 的三大重點</h2><h3 id="1-選擇器"><a href="#1-選擇器" class="headerlink" title="1. 選擇器:"></a>1. 選擇器:</h3><p><code>$()</code></p><p>選取要觸發的元素</p><p>例如: <code>$(&quot;body&quot;)</code> 選取整個<code>&lt;body&gt;</code></p><h3 id="2-事件觸發"><a href="#2-事件觸發" class="headerlink" title="2. 事件觸發:"></a>2. 事件觸發:</h3><p>決定那些事件可以觸發 callback 函式</p><p>例如: <code>.click</code> 點擊觸發事件</p><h3 id="3-callback-函式"><a href="#3-callback-函式" class="headerlink" title="3. callback 函式:"></a>3. callback 函式:</h3><p>事件觸發後會執行甚麼動作</p><ul><li>顯示、隱藏元素</li><li>改變 CSS 效果</li><li>DOM 操作</li></ul><p>而上面的小範例就是點擊後執行修改按鈕顏色</p><p><img src="https://i.imgur.com/L1kNdgS.png"></p><h1 id="第一章-選擇器"><a href="#第一章-選擇器" class="headerlink" title="第一章 選擇器"></a>第一章 選擇器</h1><h2 id="id-選擇器"><a href="#id-選擇器" class="headerlink" title="id 選擇器"></a>id 選擇器</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h1 id=<span class="string">&quot;hello world&quot;</span>&gt;hello world&lt;/h1&gt;</span><br><span class="line">    &lt;button id=<span class="string">&quot;btnred&quot;</span>&gt;red&lt;/button&gt;</span><br><span class="line">    &lt;button id=<span class="string">&quot;btnblue&quot;</span>&gt;blue&lt;/button&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        $(<span class="string">&quot;#btnred&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            $(<span class="string">&quot;#btnred&quot;</span>).css(<span class="string">&#x27;color&#x27;</span>, <span class="string">&#x27;red&#x27;</span>);</span><br><span class="line">        &#125;)</span><br><span class="line">        $(<span class="string">&quot;#btnblue&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            $(<span class="string">&quot;#btnblue&quot;</span>).css(<span class="string">&#x27;color&#x27;</span>, <span class="string">&#x27;blue&#x27;</span>);</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p>一樣以上面的範例舉例:</p><p><code>$(&quot;#btnred&quot;)</code> - 抓取要操作的 id 加上#並用雙引號包起來就完成瞜!</p><h2 id="class-選擇器"><a href="#class-選擇器" class="headerlink" title="class 選擇器"></a>class 選擇器</h2><p>跟 id 抓法不同會抓取一樣 class 的全部內容</p><p><code>$(&quot;.btnred&quot;)</code> - 抓取要操作的 class 加上(.)並用雙引號包起來就完成瞜!</p><h3 id="元素選擇器"><a href="#元素選擇器" class="headerlink" title="元素選擇器"></a>元素選擇器</h3><p>一樣會選取全部的該名稱的元素</p><p>直接輸入名稱就可以抓取他們瞜</p><p><code>$(&quot;p&quot;)</code>抓去段落<code>&lt;p&gt;</code></p><h1 id="第二章-事件"><a href="#第二章-事件" class="headerlink" title="第二章 事件"></a>第二章 事件</h1><h2 id="01-滑鼠事件，點擊-click-與連續兩次點擊-dblclick"><a href="#01-滑鼠事件，點擊-click-與連續兩次點擊-dblclick" class="headerlink" title="01 滑鼠事件，點擊(click) 與連續兩次點擊(dblclick)"></a>01 滑鼠事件，點擊(click) 與連續兩次點擊(dblclick)</h2><p>我繼續沿用上面的範例做操作</p><ul><li>點擊一次改變紅色按鈕(click)</li><li>點擊兩次改變藍色按鈕(dblclick)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">        $(<span class="string">&quot;#btnred&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            $(<span class="string">&quot;#btnred&quot;</span>).css(<span class="string">&#x27;color&#x27;</span>, <span class="string">&#x27;red&#x27;</span>);</span><br><span class="line">        &#125;)</span><br><span class="line">        $(<span class="string">&quot;#btnblue&quot;</span>).dblclick(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            $(<span class="string">&quot;#btnblue&quot;</span>).css(<span class="string">&#x27;color&#x27;</span>, <span class="string">&#x27;blue&#x27;</span>);</span><br><span class="line">        &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>印出結果:<br><img src="https://i.imgur.com/L1kNdgS.png"></p><h2 id="02-滑鼠事件，移入-mouseenter-與移出-mouseout"><a href="#02-滑鼠事件，移入-mouseenter-與移出-mouseout" class="headerlink" title="02 滑鼠事件，移入(mouseenter)與移出(mouseout)"></a>02 滑鼠事件，移入(mouseenter)與移出(mouseout)</h2><ul><li>當滑鼠移入目標觸發事件</li><li>當滑鼠移出目標觸發事件</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">        $(<span class="string">&quot;#btnred&quot;</span>).mouseenter(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            $(<span class="string">&quot;#btnred&quot;</span>).css(<span class="string">&#x27;color&#x27;</span>, <span class="string">&#x27;red&#x27;</span>);</span><br><span class="line">        &#125;)</span><br><span class="line">        $(<span class="string">&quot;#btnblue&quot;</span>).mouseout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            $(<span class="string">&quot;#btnblue&quot;</span>).css(<span class="string">&#x27;color&#x27;</span>, <span class="string">&#x27;blue&#x27;</span>);</span><br><span class="line">        &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li>red 是進入觸發顏色</li><li>blue 是出去觸發顏色<br><img src="https://i.imgur.com/aMizEwl.gif"></li></ul><h2 id="03-滑鼠的-hover-事件"><a href="#03-滑鼠的-hover-事件" class="headerlink" title="03 滑鼠的 hover 事件"></a>03 滑鼠的 hover 事件</h2><p>當取得焦點時觸發事件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">        $(<span class="string">&quot;#btnred&quot;</span>).hover(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            $(<span class="string">&quot;#btnred&quot;</span>).css(<span class="string">&#x27;color&#x27;</span>, <span class="string">&#x27;red&#x27;</span>);</span><br><span class="line">        &#125;)</span><br><span class="line">        $(<span class="string">&quot;#btnblue&quot;</span>).hover(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            $(<span class="string">&quot;#btnblue&quot;</span>).css(<span class="string">&#x27;color&#x27;</span>, <span class="string">&#x27;blue&#x27;</span>);</span><br><span class="line">        &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>當取得焦點時觸發事件<br><img src="https://i.imgur.com/bVL8M6l.gif"></p><h2 id="04-如果遇到沒看過的滑鼠事件該怎麼辦"><a href="#04-如果遇到沒看過的滑鼠事件該怎麼辦" class="headerlink" title="04 如果遇到沒看過的滑鼠事件該怎麼辦?"></a>04 如果遇到沒看過的滑鼠事件該怎麼辦?</h2><p><a href="https://api.jquery.com/">閱讀官方文件</a></p><p><a href="https://www.w3schools.com/jquery/">w3cschool</a></p><h2 id="05-遇到-jQuery-文件中不懂得地方該怎麼辦"><a href="#05-遇到-jQuery-文件中不懂得地方該怎麼辦" class="headerlink" title="05 遇到 jQuery 文件中不懂得地方該怎麼辦 ?"></a>05 遇到 jQuery 文件中不懂得地方該怎麼辦 ?</h2><p>知道大方向在處理什麼內容<br>並從文件中去搜尋</p><h2 id="06-on-‘click’-與-click-是等價的"><a href="#06-on-‘click’-與-click-是等價的" class="headerlink" title="06 on(‘click’, ..) 與 click()是等價的"></a>06 on(‘click’, ..) 與 click()是等價的</h2><p>click 事件其實是個縮寫:</p><p>後面的 handler 是 callback 函式</p><p><code>.on(&quot;click&quot;, handler)</code></p><p>其實跟原生的 JS 的寫法很像</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">clickHandler</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">123</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">addEventListener(<span class="string">&#x27;click&#x27;</span>, clickHandler)</span><br></pre></td></tr></table></figure><h2 id="07-我們怎麼知道-DOM-是否已經就緒-使用-ready"><a href="#07-我們怎麼知道-DOM-是否已經就緒-使用-ready" class="headerlink" title="07 我們怎麼知道 DOM 是否已經就緒 ? 使用 ready()"></a>07 我們怎麼知道 DOM 是否已經就緒 ? 使用 ready()</h2><p>ready()這個方法提供了我們一個方式讓我們去跑 JS 並且在網頁的 DOM 載入完全的情況下去操作</p><p>下列方法都是等價的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">* $( handler )</span><br><span class="line">* $( document ).ready( handler )</span><br><span class="line">* $( &quot;document&quot; ).ready( handler )</span><br><span class="line">* $( &quot;img&quot; ).ready( handler )</span><br><span class="line">* $().ready( handler )</span><br></pre></td></tr></table></figure><h2 id="08-如何在-vscode-中快速產生-ready-code-snippet"><a href="#08-如何在-vscode-中快速產生-ready-code-snippet" class="headerlink" title="08 如何在 vscode 中快速產生 ready() code snippet"></a>08 如何在 vscode 中快速產生 ready() code snippet</h2><p>尋找這個套件<br><img src="https://i.imgur.com/PgDTgY7.png"></p><p>使用 jq 前墜去尋找就可以找到搂!<br><img src="https://i.imgur.com/3toG4kv.png"></p><h1 id="第三章-選擇器的進階"><a href="#第三章-選擇器的進階" class="headerlink" title="第三章 選擇器的進階"></a>第三章 選擇器的進階</h1><h2 id="選擇器的進階-Traversal-鄰居、爸爸與小孩-鄰居篇"><a href="#選擇器的進階-Traversal-鄰居、爸爸與小孩-鄰居篇" class="headerlink" title="選擇器的進階 Traversal 鄰居、爸爸與小孩 - 鄰居篇"></a>選擇器的進階 Traversal 鄰居、爸爸與小孩 - 鄰居篇</h2><p>使用<code>.siblings()</code>印出 id:1 以外其他同一層的鄰居</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h1 id=<span class="string">&quot;hello world&quot;</span>&gt;hello world&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">    &lt;p id=<span class="string">&quot;1&quot;</span>&gt;<span class="number">1</span>&lt;/p&gt;</span><br><span class="line">    &lt;p id=<span class="string">&quot;2&quot;</span>&gt;<span class="number">2</span>&lt;/p&gt;</span><br><span class="line">    &lt;p id=<span class="string">&quot;3&quot;</span>&gt;<span class="number">3</span>&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">        $(<span class="string">&#x27;#1&#x27;</span>).siblings().css(<span class="string">&#x27;color&#x27;</span>,<span class="string">&#x27;red&#x27;</span>);</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>讓其他同一層的鄰居呈現紅色<br>h1 以及 p 都在同一階層</p><p><img src="https://i.imgur.com/sShTlwU.png"></p><h3 id="搭配使用"><a href="#搭配使用" class="headerlink" title="搭配使用"></a>搭配使用</h3><p>使用<code>first()</code>去找到鄰居的第一個也就是 h1</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;#1&quot;</span>).siblings().first().css(<span class="string">&quot;color&quot;</span>, <span class="string">&quot;red&quot;</span>);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>印出結果<br><img src="https://i.imgur.com/6UhZ47W.png"></p><p>也可以搭配[]中括號使用 index 抓取內容去操作</p><p>不過要注意整段 sinbings 加上中括號的部分需要再用選擇器包裹住一次才有辦法使用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">      $($(<span class="string">&quot;#1&quot;</span>).siblings()[<span class="number">2</span>]).first().css(<span class="string">&quot;color&quot;</span>, <span class="string">&quot;red&quot;</span>);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>印出 index 為 2 的物件呈現紅色<br><img src="https://i.imgur.com/n6DvYyU.png"></p><h2 id="選擇器的進階-Traversal-鄰居、爸爸與小孩-父母篇"><a href="#選擇器的進階-Traversal-鄰居、爸爸與小孩-父母篇" class="headerlink" title="選擇器的進階 Traversal 鄰居、爸爸與小孩 - 父母篇"></a>選擇器的進階 Traversal 鄰居、爸爸與小孩 - 父母篇</h2><p>尋找元素本身的上一層就是找父母的意思</p><p>使用<code>parent()</code>這個方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;p id=<span class="string">&quot;1&quot;</span>&gt;<span class="number">1</span>&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;p id=<span class="string">&quot;2&quot;</span>&gt;<span class="number">2</span>&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;p id=<span class="string">&quot;3&quot;</span>&gt;<span class="number">3</span>&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;#1&quot;</span>).parent().css(<span class="string">&quot;background-color&quot;</span>, <span class="string">&quot;red&quot;</span>);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p>尋找段落 p 的 parent 也就是它外層的 div 並讓他上紅色</p><p><img src="https://i.imgur.com/tvhQf2P.png"></p><p><img src="https://i.imgur.com/G9ftHQM.png"></p><h3 id="搭配使用-1"><a href="#搭配使用-1" class="headerlink" title="搭配使用"></a>搭配使用</h3><p>一樣可以使用<code>siblings()</code>去尋找父母的鄰居</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;#1&quot;</span>).parent().siblings().css(<span class="string">&quot;background-color&quot;</span>, <span class="string">&quot;red&quot;</span>);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>會得到這個結果</p><p><img src="https://i.imgur.com/ZFk2NEP.png"></p><p><img src="https://i.imgur.com/gZL8ley.png"></p><h2 id="選擇器的進階-Traversal-鄰居、爸爸與小孩-小孩篇"><a href="#選擇器的進階-Traversal-鄰居、爸爸與小孩-小孩篇" class="headerlink" title="選擇器的進階 Traversal 鄰居、爸爸與小孩 - 小孩篇"></a>選擇器的進階 Traversal 鄰居、爸爸與小孩 - 小孩篇</h2><p>去尋找子層的元素做操作</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;p id=<span class="string">&quot;1&quot;</span>&gt;</span><br><span class="line">        &lt;l1&gt;<span class="number">1</span>&lt;/l1&gt;</span><br><span class="line">        &lt;l1&gt;<span class="number">1</span>&lt;/l1&gt;</span><br><span class="line">        &lt;l1&gt;<span class="number">1</span>&lt;/l1&gt;</span><br><span class="line">      &lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;p id=<span class="string">&quot;2&quot;</span>&gt;<span class="number">2</span>&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;p id=<span class="string">&quot;3&quot;</span>&gt;<span class="number">3</span>&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;#1&quot;</span>).children().css(<span class="string">&quot;background-color&quot;</span>, <span class="string">&quot;red&quot;</span>);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">  &lt;/body&gt;</span><br></pre></td></tr></table></figure><p>這三個 li 就是 id:1 元素的子層<br><img src="https://i.imgur.com/fBlSOuN.png"></p><p>印出結果<br><img src="https://i.imgur.com/ZQabatx.png"></p><h3 id="搭配使用-2"><a href="#搭配使用-2" class="headerlink" title="搭配使用"></a>搭配使用</h3><p>使用<code>.last()</code>抓取子層的最後一個元素做操作</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;#1&quot;</span>).children().last().css(<span class="string">&quot;background-color&quot;</span>, <span class="string">&quot;red&quot;</span>);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>抓取最後一個元素做操作<br><img src="https://i.imgur.com/xMJVkez.png"></p><p>印出結果<br><img src="https://i.imgur.com/e3112f8.png"></p><h2 id="chain-method"><a href="#chain-method" class="headerlink" title="chain method"></a>chain method</h2><p>如果要操作的元素外面有很多層也可以把<code>children()</code>疊很多層做操作</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=<span class="string">&quot;divgrand&quot;</span>&gt;</span><br><span class="line">      &lt;div id=<span class="string">&quot;divparent&quot;</span>&gt;</span><br><span class="line">        &lt;p id=<span class="string">&quot;1&quot;</span>&gt;</span><br><span class="line">          &lt;l1&gt;<span class="number">1</span>&lt;/l1&gt;</span><br><span class="line">          &lt;l1&gt;<span class="number">2</span>&lt;/l1&gt;</span><br><span class="line">          &lt;l1&gt;<span class="number">3</span>&lt;/l1&gt;</span><br><span class="line">        &lt;/p&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;p id=<span class="string">&quot;2&quot;</span>&gt;<span class="number">2</span>&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;p id=<span class="string">&quot;3&quot;</span>&gt;<span class="number">3</span>&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;#divgrand&quot;</span>)</span><br><span class="line">        .children()</span><br><span class="line">        .children()</span><br><span class="line">        .children()</span><br><span class="line">        .last()</span><br><span class="line">        .css(<span class="string">&quot;background-color&quot;</span>, <span class="string">&quot;red&quot;</span>);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">  &lt;/body&gt;</span><br></pre></td></tr></table></figure><p>找了三層進去並且使用 last()設定最後一個元素<br><img src="https://i.imgur.com/3zcBPSI.png"></p><p>印出結果<br><img src="https://i.imgur.com/B5rnI3K.png"></p><h2 id="parant-parants-parentsUntil-的差異"><a href="#parant-parants-parentsUntil-的差異" class="headerlink" title="parant(), parants(), parentsUntil()的差異"></a>parant(), parants(), parentsUntil()的差異</h2><p>比較上面三者的不同</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=<span class="string">&quot;divgrand&quot;</span>&gt;</span><br><span class="line">      &lt;div id=<span class="string">&quot;divparent&quot;</span>&gt;</span><br><span class="line">        &lt;p id=<span class="string">&quot;1&quot;</span>&gt;</span><br><span class="line">          &lt;l1&gt;<span class="number">1</span>&lt;/l1&gt;</span><br><span class="line">          &lt;l1&gt;<span class="number">2</span>&lt;/l1&gt;</span><br><span class="line">          &lt;l1&gt;<span class="number">3</span>&lt;/l1&gt;</span><br><span class="line">        &lt;/p&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;p id=<span class="string">&quot;2&quot;</span>&gt;<span class="number">2</span>&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;p id=<span class="string">&quot;3&quot;</span>&gt;<span class="number">3</span>&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;#1&quot;</span>).parent().css(<span class="string">&quot;border&quot;</span>, <span class="string">&quot; 5px solid red&quot;</span>);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><h3 id="parant"><a href="#parant" class="headerlink" title="parant()"></a><code>parant()</code></h3><p>只取其上層一個 parent</p><p><img src="https://i.imgur.com/78XdUAR.png"></p><p>也就是外面的這層 divparent<br><img src="https://i.imgur.com/pAfCSeV.png"></p><h3 id="parants"><a href="#parants" class="headerlink" title="parants()"></a><code>parants()</code></h3><p>取全部的 parent<br><img src="https://i.imgur.com/FbdAjTU.png"></p><p><img src="https://i.imgur.com/vF99WZn.png"></p><h3 id="parentsUntil"><a href="#parentsUntil" class="headerlink" title="parentsUntil()"></a><code>parentsUntil()</code></h3><p>取到哪個 parent 為止</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;#1&quot;</span>).parentsUntil(<span class="string">&quot;#divgrand&quot;</span>).css(<span class="string">&quot;border&quot;</span>, <span class="string">&quot; 5px solid red&quot;</span>);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>取到 parent - divgrand 為止所以只會給他的上一層 divparent 上外框<br><img src="https://i.imgur.com/kY1UIFW.png"></p><p>印出結果<br><img src="https://i.imgur.com/Yos10bF.png"></p><h2 id="Traversal-Traversing-中的-first-last-find"><a href="#Traversal-Traversing-中的-first-last-find" class="headerlink" title="Traversal : Traversing 中的 first(), last(), find()"></a>Traversal : Traversing 中的 first(), last(), find()</h2><h3 id="first"><a href="#first" class="headerlink" title="first()"></a><code>first()</code></h3><p>使用<code>first()</code>去找到鄰居的第一個也就是 h1</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;#1&quot;</span>).siblings().first().css(<span class="string">&quot;color&quot;</span>, <span class="string">&quot;red&quot;</span>);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>印出結果<br><img src="https://i.imgur.com/6UhZ47W.png"></p><h3 id="last"><a href="#last" class="headerlink" title="last()"></a><code>last()</code></h3><p>使用<code>.last()</code>抓取子層的最後一個元素做操作</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;#1&quot;</span>).children().last().css(<span class="string">&quot;background-color&quot;</span>, <span class="string">&quot;red&quot;</span>);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>抓取最後一個元素做操作<br><img src="https://i.imgur.com/xMJVkez.png"></p><p>印出結果<br><img src="https://i.imgur.com/e3112f8.png"></p><h3 id="find"><a href="#find" class="headerlink" title="find()"></a><code>find()</code></h3><p>尋找特定 id 底下的元素(任何都可以 div, p, li 等等)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=<span class="string">&quot;divgrand&quot;</span>&gt;</span><br><span class="line">      &lt;div id=<span class="string">&quot;divparent&quot;</span>&gt;</span><br><span class="line">        &lt;p id=<span class="string">&quot;1&quot;</span>&gt;</span><br><span class="line">          &lt;l1&gt;<span class="number">1</span>&lt;/l1&gt;</span><br><span class="line">          &lt;l1&gt;<span class="number">2</span>&lt;/l1&gt;</span><br><span class="line">          &lt;l1&gt;<span class="number">3</span>&lt;/l1&gt;</span><br><span class="line">        &lt;/p&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;p id=<span class="string">&quot;2&quot;</span>&gt;<span class="number">2</span>&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;p id=<span class="string">&quot;3&quot;</span>&gt;<span class="number">3</span>&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;#divgrand&quot;</span>).find(<span class="string">&quot;p&quot;</span>).css(<span class="string">&quot;border&quot;</span>, <span class="string">&quot; 5px solid red&quot;</span>);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">  &lt;/body&gt;</span><br></pre></td></tr></table></figure><p>尋找 divgrand 底下的 p 段落並且全部加上邊框</p><p>印出結果<br><img src="https://i.imgur.com/HrNk2Py.png"></p><h2 id="Traversal-中的-eq-filter-與-not"><a href="#Traversal-中的-eq-filter-與-not" class="headerlink" title="Traversal 中的 eq(), filter() 與 not()"></a>Traversal 中的 eq(), filter() 與 not()</h2><h3 id="eq"><a href="#eq" class="headerlink" title="eq()"></a>eq()</h3><p>可以選取指定的位置的元素</p><p>注意:ndex 得部分不一定從 0 開始 是可以自訂成從 1 或是從 0 開始</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=<span class="string">&quot;divgrand&quot;</span>&gt;</span><br><span class="line">      &lt;div id=<span class="string">&quot;divparent&quot;</span>&gt;</span><br><span class="line">        &lt;p id=<span class="string">&quot;1&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;1&quot;</span>&gt;</span><br><span class="line">          &lt;l1&gt;<span class="number">1</span>&lt;/l1&gt;</span><br><span class="line">          &lt;l1&gt;<span class="number">2</span>&lt;/l1&gt;</span><br><span class="line">          &lt;l1&gt;<span class="number">3</span>&lt;/l1&gt;</span><br><span class="line">        &lt;/p&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;p id=<span class="string">&quot;1&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;1&quot;</span>&gt;</span><br><span class="line">        &lt;l1&gt;a&lt;/l1&gt;</span><br><span class="line">        &lt;l1&gt;b&lt;/l1&gt;</span><br><span class="line">        &lt;l1&gt;c&lt;/l1&gt;</span><br><span class="line">      &lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;p id=<span class="string">&quot;1&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;1&quot;</span>&gt;</span><br><span class="line">        &lt;l1&gt;A&lt;/l1&gt;</span><br><span class="line">        &lt;l1&gt;B&lt;/l1&gt;</span><br><span class="line">        &lt;l1&gt;C&lt;/l1&gt;</span><br><span class="line">      &lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;.1&quot;</span>).eq(<span class="string">&quot;2&quot;</span>).css(<span class="string">&quot;border&quot;</span>, <span class="string">&quot;5px solid red&quot;</span>);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p>選取 index2 為 ABC<br><img src="https://i.imgur.com/jxnaNhR.png"></p><h3 id="filter"><a href="#filter" class="headerlink" title="filter()"></a>filter()</h3><p>可以篩選內容</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=<span class="string">&quot;divgrand&quot;</span>&gt;</span><br><span class="line">      &lt;div id=<span class="string">&quot;divparent&quot;</span>&gt;</span><br><span class="line">        &lt;p id=<span class="string">&quot;1&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;1&quot;</span>&gt;</span><br><span class="line">          &lt;l1&gt;<span class="number">1</span>&lt;/l1&gt;</span><br><span class="line">          &lt;l1&gt;<span class="number">2</span>&lt;/l1&gt;</span><br><span class="line">          &lt;l1&gt;<span class="number">3</span>&lt;/l1&gt;</span><br><span class="line">        &lt;/p&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;p id=<span class="string">&quot;1&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;1&quot;</span>&gt;</span><br><span class="line">        &lt;l1&gt;a&lt;/l1&gt;</span><br><span class="line">        &lt;l1&gt;b&lt;/l1&gt;</span><br><span class="line">        &lt;l1&gt;c&lt;/l1&gt;</span><br><span class="line">      &lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;p id=<span class="string">&quot;1&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;1&quot;</span>&gt;</span><br><span class="line">        &lt;l1&gt;A&lt;/l1&gt;</span><br><span class="line">        &lt;l1&gt;B&lt;/l1&gt;</span><br><span class="line">        &lt;l1&gt;C&lt;/l1&gt;</span><br><span class="line">      &lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;1&quot;</span>&gt;span&lt;/span&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;span&quot;</span>).filter(<span class="string">&quot;.1&quot;</span>).css(<span class="string">&quot;border&quot;</span>, <span class="string">&quot;5px solid red&quot;</span>);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p>使用 filter 篩選 span 裡面有 id = 1 元素加上紅框框就不會抓到 div 去搂!</p><p><img src="https://i.imgur.com/wglnP0T.png"></p><h3 id="not"><a href="#not" class="headerlink" title="not()"></a>not()</h3><p>篩選”不是的”內容做操作</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=<span class="string">&quot;divgrand&quot;</span>&gt;</span><br><span class="line">      &lt;div id=<span class="string">&quot;divparent&quot;</span>&gt;</span><br><span class="line">        &lt;p id=<span class="string">&quot;1&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;1&quot;</span>&gt;</span><br><span class="line">          &lt;l1&gt;<span class="number">1</span>&lt;/l1&gt;</span><br><span class="line">          &lt;l1&gt;<span class="number">2</span>&lt;/l1&gt;</span><br><span class="line">          &lt;l1&gt;<span class="number">3</span>&lt;/l1&gt;</span><br><span class="line">        &lt;/p&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;p id=<span class="string">&quot;1&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;2&quot;</span>&gt;</span><br><span class="line">        &lt;l1&gt;a&lt;/l1&gt;</span><br><span class="line">        &lt;l1&gt;b&lt;/l1&gt;</span><br><span class="line">        &lt;l1&gt;c&lt;/l1&gt;</span><br><span class="line">      &lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;p id=<span class="string">&quot;1&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;1&quot;</span>&gt;</span><br><span class="line">        &lt;l1&gt;A&lt;/l1&gt;</span><br><span class="line">        &lt;l1&gt;B&lt;/l1&gt;</span><br><span class="line">        &lt;l1&gt;C&lt;/l1&gt;</span><br><span class="line">      &lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;2&quot;</span>&gt;span&lt;/span&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;p&quot;</span>).not(<span class="string">&quot;.1&quot;</span>).css(<span class="string">&quot;border&quot;</span>, <span class="string">&quot;5px solid red&quot;</span>);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p>這邊我做篩選段落中的 P 不是 class = 1 的會產紅框框</p><p>由上面可以理解小寫的 abc 不符合所以上色<br><img src="https://i.imgur.com/R1lYusp.png"></p><h1 id="第四章：快速理解-jQuery-API-一-特效類"><a href="#第四章：快速理解-jQuery-API-一-特效類" class="headerlink" title="第四章：快速理解 jQuery API (一) 特效類"></a>第四章：快速理解 jQuery API (一) 特效類</h1><h2 id="顯示或隱藏元素-hide-與-show"><a href="#顯示或隱藏元素-hide-與-show" class="headerlink" title="顯示或隱藏元素 hide() 與 show()"></a>顯示或隱藏元素 hide() 與 show()</h2><p>這邊我設置點擊事件作範例</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button id=<span class="string">&quot;show&quot;</span>&gt;show&lt;/button&gt;</span><br><span class="line">    &lt;button id=<span class="string">&quot;hide&quot;</span>&gt;hide&lt;/button&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div&gt;div&lt;/div&gt;</span><br><span class="line">    &lt;div&gt;div&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;#hide&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="string">&quot;div&quot;</span>).hide();</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      $(<span class="string">&quot;#show&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="string">&quot;div&quot;</span>).show();</span><br><span class="line">      &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">  &lt;/body&gt;</span><br></pre></td></tr></table></figure><p>show,hide 的效果<br><img src="https://i.imgur.com/7OR5I3T.gif"></p><h2 id="淡入與淡出-fadeIn-fadeOut"><a href="#淡入與淡出-fadeIn-fadeOut" class="headerlink" title="淡入與淡出 fadeIn() fadeOut()"></a>淡入與淡出 fadeIn() fadeOut()</h2><p>這邊我設置個持續一秒效果如下:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;#hide&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="string">&quot;div&quot;</span>).fadeOut(<span class="number">1000</span>);</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      $(<span class="string">&quot;#show&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="string">&quot;div&quot;</span>).fadeIn(<span class="number">1000</span>);</span><br><span class="line">      &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/CgLEUwH.gif"></p><h2 id="特效類-animate-實現簡單動畫"><a href="#特效類-animate-實現簡單動畫" class="headerlink" title="特效類 animate() 實現簡單動畫"></a>特效類 animate() 實現簡單動畫</h2><p>一般不會這樣使用，會放到 CSS 裡面操作</p><p>不過使用起來長這樣:</p><ul><li>設定了變長</li><li>設定了透明</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;#hide&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="string">&quot;div&quot;</span>).animate(&#123; <span class="attr">opacity</span>: <span class="number">0.3</span> &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      $(<span class="string">&quot;#show&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="string">&quot;div&quot;</span>).animate(&#123; <span class="attr">width</span>: <span class="string">&quot;400px&quot;</span> &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/wzj5FRd.gif"></p><h2 id="jQuery-中的-Callback-回調-函式"><a href="#jQuery-中的-Callback-回調-函式" class="headerlink" title="jQuery 中的 Callback 回調(函式)"></a>jQuery 中的 Callback 回調(函式)</h2><p>當事件觸發後執行的函式就是回調函式</p><p>這裡的 animate 就是一種:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">     $(<span class="string">&quot;#hide&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">       $(<span class="string">&quot;div&quot;</span>).animate(&#123; <span class="attr">opacity</span>: <span class="number">0.3</span> &#125;);</span><br><span class="line">     &#125;);</span><br><span class="line"></span><br><span class="line">     $(<span class="string">&quot;#show&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">       $(<span class="string">&quot;div&quot;</span>).animate(&#123; <span class="attr">width</span>: <span class="string">&quot;400px&quot;</span> &#125;);</span><br><span class="line">     &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h1 id="第五章：快速理解-jQuery-API-二-「取得」與「覆寫」值"><a href="#第五章：快速理解-jQuery-API-二-「取得」與「覆寫」值" class="headerlink" title="第五章：快速理解 jQuery API (二) 「取得」與「覆寫」值"></a>第五章：快速理解 jQuery API (二) 「取得」與「覆寫」值</h1><h2 id="text-取得元素標籤中的文字-修改文字也可以的"><a href="#text-取得元素標籤中的文字-修改文字也可以的" class="headerlink" title="text()取得元素標籤中的文字 / 修改文字也可以的"></a>text()取得元素標籤中的文字 / 修改文字也可以的</h2><p><code>text()</code>不加內容的用法可以取得選取元素的文字內容</p><p>在這邊同時利用 alert 彈出選取元素的文字內容</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">    &lt;button <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;btnone&quot;</span>&gt;getstr&lt;/button&gt;</span><br><span class="line">    &lt;button <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;btntwo&quot;</span>&gt;getsecstr&lt;/button&gt;</span><br><span class="line"></span><br><span class="line">    &lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;1&quot;</span>&gt;<span class="number">123</span>&lt;/p&gt;</span><br><span class="line">    &lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;2&quot;</span>&gt;<span class="number">123</span>&lt;/p&gt;</span><br><span class="line">    &lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;3&quot;</span>&gt;<span class="number">123</span>&lt;/p&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;.btnone&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> str = $(<span class="string">&quot;.1&quot;</span>).text();</span><br><span class="line">        alert(str);</span><br><span class="line">      &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>點擊 getstr 後跳出 class = 1 那段落的文字內容<br><img src="https://i.imgur.com/rCpcu42.png"></p><h3 id="並且可以針對選取的-class-去選擇-first-last"><a href="#並且可以針對選取的-class-去選擇-first-last" class="headerlink" title="並且可以針對選取的 class 去選擇 first, last"></a>並且可以針對選取的 class 去選擇 first, last</h3><p>抓取元素第一個最後一個等等</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;btnone&quot;</span>&gt;getstr&lt;/button&gt;</span><br><span class="line">    &lt;button <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;btntwo&quot;</span>&gt;getsecstr&lt;/button&gt;</span><br><span class="line"></span><br><span class="line">    &lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;1&quot;</span>&gt;<span class="number">123456</span>&lt;/p&gt;</span><br><span class="line">    &lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;2&quot;</span>&gt;<span class="number">123</span>&lt;/p&gt;</span><br><span class="line">    &lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;3&quot;</span>&gt;<span class="number">123</span>&lt;/p&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;.btnone&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> str = $(<span class="string">&quot;p:first&quot;</span>).text();</span><br><span class="line">        alert(str);</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      $(<span class="string">&quot;#show&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;&#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">  &lt;/body&gt;</span><br></pre></td></tr></table></figure><p>點擊 getstr 的印出結果<br><img src="https://i.imgur.com/wNqYzHQ.png"></p><h3 id="針對抓取的元素可以做指定"><a href="#針對抓取的元素可以做指定" class="headerlink" title="針對抓取的元素可以做指定"></a>針對抓取的元素可以做指定</h3><p>這樣選取就可以針對修飾段落 p 中的 class = 3 的部分</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;btnone&quot;</span>&gt;getstr&lt;/button&gt;</span><br><span class="line">    &lt;button <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;btntwo&quot;</span>&gt;getsecstr&lt;/button&gt;</span><br><span class="line"></span><br><span class="line">    &lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;1&quot;</span>&gt;<span class="number">123456</span>&lt;/p&gt;</span><br><span class="line">    &lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;2&quot;</span>&gt;<span class="number">123</span>&lt;/p&gt;</span><br><span class="line">    &lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;3&quot;</span>&gt;<span class="number">12348</span>&lt;/p&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;.btnone&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> str = $(<span class="string">&quot;p.3&quot;</span>).text();</span><br><span class="line">        alert(str);</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      $(<span class="string">&quot;#show&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;&#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">  &lt;/body&gt;</span><br></pre></td></tr></table></figure><p>點擊 getstr 的印出結果<br><img src="https://i.imgur.com/t3YYetM.png"></p><h3 id="text-，把值放進去設定會修改文字內容"><a href="#text-，把值放進去設定會修改文字內容" class="headerlink" title="text()，把值放進去設定會修改文字內容"></a>text()，把值放進去設定會修改文字內容</h3><p>如果在 text()內部填入值的話會修改文字內容</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;btnone&quot;</span>&gt;getstr&lt;/button&gt;</span><br><span class="line">    &lt;button <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;btntwo&quot;</span>&gt;getsecstr&lt;/button&gt;</span><br><span class="line"></span><br><span class="line">    &lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;1&quot;</span>&gt;<span class="number">123456</span>&lt;/p&gt;</span><br><span class="line">    &lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;2&quot;</span>&gt;<span class="number">123</span>&lt;/p&gt;</span><br><span class="line">    &lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;3&quot;</span>&gt;<span class="number">12348</span>&lt;/p&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;.btnone&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="string">&quot;p.3&quot;</span>).text(<span class="string">&quot;hello world&quot;</span>);</span><br><span class="line">      &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p>在這邊操作的話會是點擊後改變文字內容成()內部的文字</p><p><img src="https://i.imgur.com/ZkBBG9u.png"></p><h2 id="html-取得或是修改-DOM"><a href="#html-取得或是修改-DOM" class="headerlink" title="html() 取得或是修改 DOM"></a>html() 取得或是修改 DOM</h2><h3 id="html-內不填入值"><a href="#html-內不填入值" class="headerlink" title="html()內不填入值"></a>html()內不填入值</h3><p>取得 html 內部的值:<br>html()內不填入值，一樣會取得元素的值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;btnone&quot;</span>&gt;change&lt;/button&gt;</span><br><span class="line">    &lt;button <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;btntwo&quot;</span>&gt;reverse&lt;/button&gt;</span><br><span class="line"></span><br><span class="line">    &lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;1&quot;</span>&gt;I will change&lt;/p&gt;</span><br><span class="line">    &lt;div&gt;&lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;.btnone&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> str = $(<span class="string">&quot;.1&quot;</span>).html();</span><br><span class="line">        alert(str);</span><br><span class="line">      &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p>按下 change 後顯示這個段落 p 內部的值<br><img src="https://i.imgur.com/3ZtIw43.png"></p><p>取得 html tag:<br>html()內不填入值，但是抓取 parent 的話會直接印出 children 的 html tag+內容</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;btnone&quot;</span>&gt;change&lt;/button&gt;</span><br><span class="line">    &lt;button <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;btntwo&quot;</span>&gt;reverse&lt;/button&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;p id=<span class="string">&quot;1&quot;</span>&gt;I will change&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;.btnone&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> str = $(<span class="string">&quot;div&quot;</span>).html();</span><br><span class="line">        alert(str);</span><br><span class="line">      &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">  &lt;/body&gt;</span><br></pre></td></tr></table></figure><p>點擊 change 後印出結果會包含子層的 html tag+內容<br><img src="https://i.imgur.com/PPIeixT.png"></p><h3 id="html-內部填入值"><a href="#html-內部填入值" class="headerlink" title="html()內部填入值"></a>html()內部填入值</h3><p>會取代掉原本的內容</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;btnone&quot;</span>&gt;change&lt;/button&gt;</span><br><span class="line">    &lt;button <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;btntwo&quot;</span>&gt;reverse&lt;/button&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div&gt;&lt;/div&gt;</span><br><span class="line">    &lt;p id=<span class="string">&quot;1&quot;</span>&gt;I will change&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;.btnone&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="string">&quot;.btntwo&quot;</span>).html(<span class="string">&quot;&lt;p&gt;hello world&lt;/p&gt;&quot;</span>);</span><br><span class="line">      &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">  &lt;/body&gt;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/SvvmhJg.png"></p><p>點下 change 後 reverse 會轉變成 hello world<br><img src="https://i.imgur.com/noiha7A.png"></p><h4 id="比較奇怪的情況是"><a href="#比較奇怪的情況是" class="headerlink" title="比較奇怪的情況是"></a>比較奇怪的情況是</h4><p>如果把內容換成 div 就不會被取代而是增加一個 children 進去如下圖</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;.btnone&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="string">&quot;div&quot;</span>).html(<span class="string">&quot;&lt;p&gt;hello world&lt;/p&gt;&quot;</span>);</span><br><span class="line">      &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br></pre></td></tr></table></figure><p>點擊 change 後 hello world 加入 div 內部<br><img src="https://i.imgur.com/VPothxj.png"></p><h2 id="attr-取得或改變元素的屬性"><a href="#attr-取得或改變元素的屬性" class="headerlink" title="attr() 取得或改變元素的屬性"></a>attr() 取得或改變元素的屬性</h2><h3 id="取得元素的屬性"><a href="#取得元素的屬性" class="headerlink" title="取得元素的屬性"></a>取得元素的屬性</h3><p>取得 href,alt 的值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button id=<span class="string">&quot;btn1&quot;</span>&gt;getHREF&lt;/button&gt;</span><br><span class="line">    &lt;button id=<span class="string">&quot;btn2&quot;</span>&gt;getImagealt&lt;/button&gt;</span><br><span class="line"></span><br><span class="line">    &lt;p&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://123123123.com&quot;</span>&gt;</span>123123123<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span>&lt;/p&gt;</span><br><span class="line">    &lt;img src=<span class="string">&quot;123.jpg&quot;</span> alt=<span class="string">&quot;cloudy sky&quot;</span> /&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;#btn1&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> str = $(<span class="string">&quot;a&quot;</span>).attr(<span class="string">&quot;href&quot;</span>);</span><br><span class="line">        alert(str);</span><br><span class="line">      &#125;);</span><br><span class="line">      $(<span class="string">&quot;#btn2&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> str = $(<span class="string">&quot;img&quot;</span>).attr(<span class="string">&quot;alt&quot;</span>);</span><br><span class="line">        alert(str);</span><br><span class="line">      &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p>點擊 getHREF<br><img src="https://i.imgur.com/hSXgj0A.png"></p><p>點擊 getimagealt<br><img src="https://i.imgur.com/Ug7xGVE.png"></p><h3 id="複寫值"><a href="#複寫值" class="headerlink" title="複寫值"></a>複寫值</h3><h4 id="複寫單一屬性"><a href="#複寫單一屬性" class="headerlink" title="複寫單一屬性"></a>複寫單一屬性</h4><p><code>attr(&quot;要被複寫的屬性名稱&quot;, &quot;改寫的內容&quot;)</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button id=<span class="string">&quot;btn1&quot;</span>&gt;getHREF&lt;/button&gt;</span><br><span class="line">    &lt;button id=<span class="string">&quot;btn2&quot;</span>&gt;getImagealt&lt;/button&gt;</span><br><span class="line"></span><br><span class="line">    &lt;p&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://123123123.com&quot;</span>&gt;</span>123123123<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span>&lt;/p&gt;</span><br><span class="line">    &lt;img src=<span class="string">&quot;123.jpg&quot;</span> alt=<span class="string">&quot;cloudy sky&quot;</span> /&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;#btn2&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="string">&quot;img&quot;</span>).attr(<span class="string">&quot;alt&quot;</span>, <span class="string">&quot;123&quot;</span>);</span><br><span class="line">      &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><h4 id="一次複寫多種屬性需要加入中括號並且要修改的屬性鍵值配對"><a href="#一次複寫多種屬性需要加入中括號並且要修改的屬性鍵值配對" class="headerlink" title="一次複寫多種屬性需要加入中括號並且要修改的屬性鍵值配對"></a>一次複寫多種屬性需要加入中括號並且要修改的屬性鍵值配對</h4><p>ex.(title: “jQuery”)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button id=<span class="string">&quot;btn1&quot;</span>&gt;getHREF&lt;/button&gt;</span><br><span class="line">    &lt;button id=<span class="string">&quot;btn2&quot;</span>&gt;getImagealt&lt;/button&gt;</span><br><span class="line"></span><br><span class="line">    &lt;p&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://123123123.com&quot;</span>&gt;</span>123123123<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span>&lt;/p&gt;</span><br><span class="line">    &lt;img src=<span class="string">&quot;123.jpg&quot;</span> alt=<span class="string">&quot;cloudy sky&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">      $(<span class="string">&quot;#btn2&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> str = $(<span class="string">&quot;img&quot;</span>).attr(&#123;</span><br><span class="line">          title: <span class="string">&quot;jQuery&quot;</span>,</span><br><span class="line">          alt: <span class="string">&quot;jQuery Logo&quot;</span>,</span><br><span class="line">        &#125;);</span><br><span class="line">        alert(str);</span><br><span class="line">      &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>image 就會被複寫新的值進去(修改 alt 以及增加 title 進去)<br><img src="https://i.imgur.com/AmoHfW7.png"></p><h2 id="val-取得或修改-form-表單的值"><a href="#val-取得或修改-form-表單的值" class="headerlink" title="val() 取得或修改 form 表單的值"></a>val() 取得或修改 form 表單的值</h2><h3 id="val-取得值"><a href="#val-取得值" class="headerlink" title="val()取得值"></a>val()取得值</h3><p>針對輸入在#name, #comment, #city 這三個區域的值並且使用 alert 把它們抓出來</p><p><img src="https://i.imgur.com/BQnlJwV.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;label <span class="keyword">for</span>=<span class="string">&quot;&quot;</span>&gt;姓名&lt;/label&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;text&quot;</span> id=<span class="string">&quot;name&quot;</span> /&gt;<span class="xml"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span></span><br><span class="line">    &lt;label <span class="keyword">for</span>=<span class="string">&quot;&quot;</span>&gt;comments&lt;/label&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;text&quot;</span> id=<span class="string">&quot;comment&quot;</span> /&gt;<span class="xml"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span></span><br><span class="line">    &lt;label&gt;city&lt;/label&gt;</span><br><span class="line">    &lt;select id=<span class="string">&quot;city&quot;</span>&gt;</span><br><span class="line">      &lt;option value=<span class="string">&quot;JP&quot;</span>&gt;JP&lt;/option&gt;</span><br><span class="line">      &lt;option value=<span class="string">&quot;USA&quot;</span>&gt;USA&lt;/option&gt;</span><br><span class="line">      &lt;option value=<span class="string">&quot;UK&quot;</span>&gt;UK&lt;/option&gt;</span><br><span class="line">    &lt;/select&gt;</span><br><span class="line">    &lt;br /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;button id=<span class="string">&quot;getname&quot;</span>&gt;getname&lt;/button&gt;</span><br><span class="line">    &lt;button id=<span class="string">&quot;getcomment&quot;</span>&gt;getcomment&lt;/button&gt;</span><br><span class="line">    &lt;button id=<span class="string">&quot;getcity&quot;</span>&gt;getcity&lt;/button&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;#getname&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> name = $(<span class="string">&quot;#name&quot;</span>).val();</span><br><span class="line">        alert(name);</span><br><span class="line">      &#125;);</span><br><span class="line">      $(<span class="string">&quot;#getcomment&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> comment = $(<span class="string">&quot;#comment&quot;</span>).val();</span><br><span class="line">        alert(comment);</span><br><span class="line">      &#125;);</span><br><span class="line">      $(<span class="string">&quot;#getcity&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> city = $(<span class="string">&quot;#city&quot;</span>).val();</span><br><span class="line">        alert(city);</span><br><span class="line">      &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">  &lt;/body&gt;</span><br></pre></td></tr></table></figure><p>輸出結果:<br><img src="https://i.imgur.com/Fl99mpu.png"></p><h3 id="val-修改內容"><a href="#val-修改內容" class="headerlink" title="val()修改內容"></a>val()修改內容</h3><p>這邊使用$(“#getname”).text()取得要修改的內容後指派給變數 name</p><p>在使用 val(name)直接更換裡面的內容</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;label <span class="keyword">for</span>=<span class="string">&quot;&quot;</span>&gt;國家&lt;/label&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;text&quot;</span> id=<span class="string">&quot;name&quot;</span> /&gt;<span class="xml"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span></span><br><span class="line"></span><br><span class="line">    &lt;button id=<span class="string">&quot;getname&quot;</span>&gt;TW&lt;/button&gt;</span><br><span class="line">    &lt;button id=<span class="string">&quot;getcomment&quot;</span>&gt;UK&lt;/button&gt;</span><br><span class="line">    &lt;button id=<span class="string">&quot;getcity&quot;</span>&gt;USA&lt;/button&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;#getname&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> name = $(<span class="string">&quot;#getname&quot;</span>).text();</span><br><span class="line">        $(<span class="string">&quot;#name&quot;</span>).val(name);</span><br><span class="line">      &#125;);</span><br><span class="line">      $(<span class="string">&quot;#getcomment&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> name = $(<span class="string">&quot;#getcomment&quot;</span>).text();</span><br><span class="line">        $(<span class="string">&quot;#name&quot;</span>).val(name);</span><br><span class="line">      &#125;);</span><br><span class="line">      $(<span class="string">&quot;#getcity&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> name = $(<span class="string">&quot;#getcity&quot;</span>).text();</span><br><span class="line">        $(<span class="string">&quot;#name&quot;</span>).val(name);</span><br><span class="line">      &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p>點擊事件觸發修改 value</p><p><img src="https://i.imgur.com/6noHN7z.gif"></p><h1 id="第六章-快速理解-jQuery-API-三-DOM-的操作"><a href="#第六章-快速理解-jQuery-API-三-DOM-的操作" class="headerlink" title="第六章 快速理解 jQuery API (三) DOM 的操作"></a>第六章 快速理解 jQuery API (三) DOM 的操作</h1><h2 id="append-選取元素內部最後加入內容"><a href="#append-選取元素內部最後加入內容" class="headerlink" title="append()選取元素內部最後加入內容"></a>append()選取元素內部最後加入內容</h2><p>在所選取的元素內部的最後方加入內容</p><p>可以是純文字或是<code>&lt;p&gt;&lt;div&gt;&lt;h1&gt;</code></p><p>範例處我做<code>&lt;h1&gt;</code>示範<br><img src="https://i.imgur.com/dXMUKkz.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h1&gt;append&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div id=<span class="string">&quot;div&quot;</span>&gt;</span><br><span class="line">      &lt;p&gt;</span><br><span class="line">        Lorem ipsum dolor sit amet consectetur adipisicing elit. Consectetur,</span><br><span class="line">        quasi?</span><br><span class="line">      &lt;/p&gt;</span><br><span class="line">      &lt;p&gt;</span><br><span class="line">        Lorem ipsum dolor, sit amet consectetur adipisicing elit. In,</span><br><span class="line">        voluptatem?</span><br><span class="line">      &lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;#div&quot;</span>).append(<span class="string">&quot;&lt;div&gt;this is how append work&lt;/div&gt;&quot;</span>);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><h2 id="prepend-選取元素內部最前加入內容"><a href="#prepend-選取元素內部最前加入內容" class="headerlink" title="prepend()選取元素內部最前加入內容"></a>prepend()選取元素內部最前加入內容</h2><p>在所選取的元素內部的最前方加入內容</p><p>可以是純文字或是<code>&lt;p&gt;&lt;div&gt;&lt;h1&gt;</code></p><p>範例處我做<code>&lt;h1&gt;</code>示範</p><p><img src="https://i.imgur.com/3atIvqO.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;h1&gt;prepend&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">  &lt;div id=<span class="string">&quot;div&quot;</span>&gt;</span><br><span class="line">    &lt;p&gt;</span><br><span class="line">      Lorem ipsum dolor sit amet consectetur adipisicing elit. Consectetur,</span><br><span class="line">      quasi?</span><br><span class="line">    &lt;/p&gt;</span><br><span class="line">    &lt;p&gt;</span><br><span class="line">      Lorem ipsum dolor, sit amet consectetur adipisicing elit. In,</span><br><span class="line">      voluptatem?</span><br><span class="line">    &lt;/p&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    $(<span class="string">&quot;#div&quot;</span>).prepend(<span class="string">&quot;&lt;h1&gt;this is how prepend work&lt;/h1&gt;&quot;</span>);</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><h2 id="before-選取元素同一層最前加入內容"><a href="#before-選取元素同一層最前加入內容" class="headerlink" title="before() 選取元素同一層最前加入內容"></a>before() 選取元素同一層最前加入內容</h2><p>在所選取的元素同一層(sibling)的前方加入內容</p><p>可以在圖中觀察到我加進去的 h1 跟我選取的 div 是 sibling 也就是它們是同一層的最前方<br><img src="https://i.imgur.com/XeFnrHE.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;h1&gt;before&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">  &lt;div id=<span class="string">&quot;div&quot;</span>&gt;</span><br><span class="line">    &lt;p&gt;</span><br><span class="line">      Lorem ipsum dolor sit amet consectetur adipisicing elit. Consectetur,</span><br><span class="line">      quasi?</span><br><span class="line">    &lt;/p&gt;</span><br><span class="line">    &lt;p&gt;</span><br><span class="line">      Lorem ipsum dolor, sit amet consectetur adipisicing elit. In,</span><br><span class="line">      voluptatem?</span><br><span class="line">    &lt;/p&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    $(<span class="string">&quot;#div&quot;</span>).before(<span class="string">&quot;&lt;h1&gt;this is how before work&lt;/h1&gt;&quot;</span>);</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><h2 id="after-選取元素同一層最後加入內容"><a href="#after-選取元素同一層最後加入內容" class="headerlink" title="after()選取元素同一層最後加入內容"></a>after()選取元素同一層最後加入內容</h2><p>在所選取的元素同一層(sibling)的後方加入內容</p><p>可以在圖中觀察到我加進去的 h1 跟我選取的 div 是 sibling 也就是它們是同一層的後方<br><img src="https://i.imgur.com/ttQq8hP.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h1&gt;after&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div id=<span class="string">&quot;div&quot;</span>&gt;</span><br><span class="line">      &lt;p&gt;</span><br><span class="line">        Lorem ipsum dolor sit amet consectetur adipisicing elit. Consectetur,</span><br><span class="line">        quasi?</span><br><span class="line">      &lt;/p&gt;</span><br><span class="line">      &lt;p&gt;</span><br><span class="line">        Lorem ipsum dolor, sit amet consectetur adipisicing elit. In,</span><br><span class="line">        voluptatem?</span><br><span class="line">      &lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;#div&quot;</span>).after(<span class="string">&quot;&lt;h1&gt;this is how after work&lt;/h1&gt;&quot;</span>);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">  &lt;/body&gt;</span><br></pre></td></tr></table></figure><h2 id="empty-清空內容-留下-tag"><a href="#empty-清空內容-留下-tag" class="headerlink" title="empty()清空內容(留下 tag)"></a>empty()清空內容(留下 tag)</h2><p>清空指定元素</p><p>像我這邊移除了內容，但是 div 的部分會繼續存在<br><img src="https://i.imgur.com/YHj4NQw.gif"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">   &lt;h1&gt;empety&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">   &lt;div id=<span class="string">&quot;div&quot;</span>&gt;</span><br><span class="line">     &lt;p&gt;Lorem ipsum dolor sit amet consec&lt;/p&gt;</span><br><span class="line">     &lt;p&gt;&lt;/p&gt;</span><br><span class="line">   &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">   &lt;button id=<span class="string">&quot;btn&quot;</span>&gt;empty&lt;/button&gt;</span><br><span class="line">   &lt;script&gt;</span><br><span class="line">     $(<span class="string">&quot;#btn&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">       $(<span class="string">&quot;#div&quot;</span>).empty();</span><br><span class="line">     &#125;);</span><br><span class="line">   &lt;/script&gt;</span><br><span class="line"> &lt;/body&gt;</span><br></pre></td></tr></table></figure><h2 id="remove-移除元素-移除-tag"><a href="#remove-移除元素-移除-tag" class="headerlink" title="remove() 移除元素(移除 tag)"></a>remove() 移除元素(移除 tag)</h2><p>移除指定元素</p><p>像我這邊移除了 div，他會 div 連同內容全部移除<br><img src="https://i.imgur.com/fGuqoW9.gif"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h1&gt;after&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div id=<span class="string">&quot;div&quot;</span>&gt;</span><br><span class="line">      &lt;p&gt;</span><br><span class="line">        Lorem ipsum dolor sit amet consectetur adipisicing elit. Consectetur,</span><br><span class="line">        quasi?</span><br><span class="line">      &lt;/p&gt;</span><br><span class="line">      &lt;p&gt;</span><br><span class="line">        Lorem ipsum dolor, sit amet consectetur adipisicing elit. In,</span><br><span class="line">        voluptatem?</span><br><span class="line">      &lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;button id=<span class="string">&quot;btn&quot;</span>&gt;remove&lt;/button&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;#btn&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="string">&quot;#div&quot;</span>).remove();</span><br><span class="line">      &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">  &lt;/body&gt;</span><br></pre></td></tr></table></figure><h2 id="remoteAttr-刪除元素的屬性"><a href="#remoteAttr-刪除元素的屬性" class="headerlink" title="remoteAttr() 刪除元素的屬性"></a>remoteAttr() 刪除元素的屬性</h2><p>刪除元素的屬性</p><p><img src="https://i.imgur.com/0Q04FIJ.gif"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h1&gt;removeAttr&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div id=<span class="string">&quot;div&quot;</span>&gt;</span><br><span class="line">      &lt;a id=<span class="string">&quot;a&quot;</span> href=<span class="string">&quot;http://123123.com&quot;</span>&gt;&lt;/a&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;button id=<span class="string">&quot;btn&quot;</span>&gt;removeAttr&lt;/button&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;#btn&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="string">&quot;#a&quot;</span>).removeAttr(<span class="string">&quot;href&quot;</span>);</span><br><span class="line">      &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">  &lt;/body&gt;</span><br></pre></td></tr></table></figure><h2 id="wrap-可以保裹住元素"><a href="#wrap-可以保裹住元素" class="headerlink" title="wrap() 可以保裹住元素"></a>wrap() 可以保裹住元素</h2><p>影片範例中使用了 div 以及 b,em 等 tag 去包裹元素</p><p>但是可以使用 append 相關的 API 就好這個比較不常使用</p><p><img src="https://i.imgur.com/H7aeaiF.png"></p><p><img src="https://i.imgur.com/kELnK6C.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;JS-幼幼班-jQuery-篇&quot;&gt;&lt;a href=&quot;#JS-幼幼班-jQuery-篇&quot; class=&quot;headerlink&quot; title=&quot;JS 幼幼班 - jQuery 篇&quot;&gt;&lt;/a&gt;JS 幼幼班 - jQuery 篇&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&quot;tags</summary>
      
    
    
    
    
    <category term="jQuery" scheme="http://example.com/tags/jQuery/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 部落格架設</title>
    <link href="http://example.com/2021/02/22/Hexo-intro/"/>
    <id>http://example.com/2021/02/22/Hexo-intro/</id>
    <published>2021-02-22T11:25:12.764Z</published>
    <updated>2021-02-22T13:54:22.770Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hexo-部落格架設"><a href="#Hexo-部落格架設" class="headerlink" title="Hexo 部落格架設"></a>Hexo 部落格架設</h1><p>環境配置</p><ul><li>安裝<a href="https://github.com/nvm-sh/nvm">NVM</a></li><li>安裝 <a href="https://nodejs.org/en/">Node.js</a></li><li>安裝 <a href="https://git-scm.com/">Git</a></li></ul><h1 id="NVM-Node-js"><a href="#NVM-Node-js" class="headerlink" title="NVM,Node.js"></a>NVM,Node.js</h1><blockquote><p>Node Version Manager</p></blockquote><p>Node 的版本控制器，因應各種不同需求所有有辦法下載不同版本的 node.js 是很重要的!</p><p>記得要在 WSL 的環境下安裝喔!<br><a href="https://hackmd.io/csXtjcARRWmb9AS3mKC1oQ">在 windows 安裝 WSL</a></p><p>並且使用 VScode 開啟</p><h2 id="Installing-and-Updating"><a href="#Installing-and-Updating" class="headerlink" title="Installing and Updating"></a>Installing and Updating</h2><ul><li><p>記得終端機環境要選 WSL</p></li><li><p>安裝 NVM<br><code>curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.2/install.sh | bash</code></p></li><li><p>更新 Node.js 到最新版本</p><p><code>nvm install --lts</code></p></li></ul><h1 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h1><p><a href="https://hexo.io/zh-tw/">Hexo</a></p><h2 id="Installing-and-Updating-1"><a href="#Installing-and-Updating-1" class="headerlink" title="Installing and Updating"></a>Installing and Updating</h2><p><code>$npm install hexo-cli -g</code></p><p><code>$hexo init blog</code></p><p><code>$cd blog</code> 一定要找到資料夾裝在哪邊!不然之後推不上去 Github</p><p><code>$npm install</code></p><p><code>$hexo server</code></p><p>最後一部完成之後基本上就可以得到本地端的 Blog 雛形</p><p><img src="https://i.imgur.com/XSOHz0O.png"></p><h2 id="使用-Hexo"><a href="#使用-Hexo" class="headerlink" title="使用 Hexo"></a>使用 Hexo</h2><p>這邊必須先把 Hexo 的資料夾 init 才能跟 Github 作部署</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line">$ cd &lt;folder&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure><p>使用 Vscode 的資料夾會長這樣</p><p><img src="https://i.imgur.com/zjxzycC.png"></p><ul><li>_config.yml：網站 配置 檔案，可以在此配置大部分的設定。</li><li>themes：主題 資料夾。Hexo 會根據主題來產生靜態檔案。</li></ul><h2 id="常用指令"><a href="#常用指令" class="headerlink" title="常用指令"></a>常用指令</h2><p><code>$ hexo generate</code> (hexo g) 產生靜態檔案，會在目錄下產生 public 資料夾。<br><code>$ hexo server</code> (hexo s) 啟動伺服器，預設是 <a href="http://localhost:4000/%E3%80%82">http://localhost:4000/。</a><br><code>$ hexo deploy</code> (hexo d) 部署網站。（ 比如 github, heroku 等平台 ）</p><p><code>$ hexo new [layout] &lt;title&gt;</code> 如果沒有設定 layout 的話，則會使用 _config.yml 中的 default_layout 設定代替。</p><p><code>$ hexo new “postName”</code> 新建文章<br><code>$ hexo new page “pageName”</code> 新建頁面</p><p>所有的文章都會在 source/_posts 裡面。一開始裡面就已經有一篇範例文章 hello-world.md 了。</p><p>常用组合</p><p><code>$ hexo d -g</code> 產生靜態檔後部署<br><code>$ hexo s -g</code> 產生靜態檔後預覽</p><h2 id="更換主題"><a href="#更換主題" class="headerlink" title="更換主題"></a>更換主題</h2><p><a href="https://hexo.io/themes/">Hexo 主題</a></p><p>Element</p><p>是我選取的主題內容</p><ul><li>必須先使用<code>git clone</code><br>抓到本地端的資料夾內，後方的 themes/element 是你要存放的資料夾位置跟名稱</li></ul><p><code>git clone https://github.com/artchen/hexo-theme-element.git themes/element</code></p><ul><li>詳讀主題作者的 Github 內容<br>會有很多安裝資訊以及客製化的方法每一個主題都不太一樣，我這邊有很多必須先預裝的 plugins(插件)</li></ul><p>This theme depends on the following Hexo plugins:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">hexo-generator-tag</span><br><span class="line">hexo-generator-feed</span><br><span class="line">hexo-renderer-ejs</span><br><span class="line">hexo-renderer-scss</span><br><span class="line">hexo-renderer-marked</span><br><span class="line">hexo-pagination</span><br><span class="line">hexo-all-minifier</span><br><span class="line">hexo-autoprefixer</span><br><span class="line">hexo-front-matter</span><br></pre></td></tr></table></figure><ul><li>接著修改網站設定_config.yml<br>他原本預設是 landscape</li></ul><p><img src="https://i.imgur.com/p8oEqjl.png"></p><ul><li>重新啟動 server</li></ul><p><code>$ hexo server</code></p><ul><li>就可以使用主題摟!<br><img src="https://i.imgur.com/L3WEgGZ.png"></li></ul><h2 id="在-GitHub-上新增-GitHub-Pages"><a href="#在-GitHub-上新增-GitHub-Pages" class="headerlink" title="在 GitHub 上新增 GitHub Pages"></a>在 GitHub 上新增 GitHub Pages</h2><p>重點來了，讓 Blog 上線!</p><ol><li>在 GitHub 創建一個名稱為<code>&lt;username&gt;.github.io</code> 的專案</li></ol><p><img src="https://i.imgur.com/JRF24hO.png"></p><ol><li>安装 deploy git 插件</li></ol><p><code>npm install hexo-deployer-git --save</code></p><ol start="3"><li>在主題配置文件 _config.yml 中修改 repository 名稱</li></ol><p><img src="https://i.imgur.com/Yf9M7VM.png"></p><ol start="4"><li>執行 hexo d 即可發佈到 GitHub 上</li></ol><p><username>.github.io 到真實的網頁上面輸入就可以看到剛剛推上去的 Blog 搂!</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Hexo-部落格架設&quot;&gt;&lt;a href=&quot;#Hexo-部落格架設&quot; class=&quot;headerlink&quot; title=&quot;Hexo 部落格架設&quot;&gt;&lt;/a&gt;Hexo 部落格架設&lt;/h1&gt;&lt;p&gt;環境配置&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;安裝&lt;a href=&quot;https://g</summary>
      
    
    
    
    
    <category term="Hexo" scheme="http://example.com/tags/Hexo/"/>
    
  </entry>
  
</feed>
