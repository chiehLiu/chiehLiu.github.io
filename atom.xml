<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Chieh Liu&#39;s Blog</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-04-04T14:05:00.845Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Chieh Liu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>web development-網頁開發前端筆記(集合筆記)</title>
    <link href="http://example.com/2021/04/02/[%E7%AD%86%E8%A8%98]%E7%B6%B2%E9%A0%81%E9%96%8B%E7%99%BC%E5%89%8D%E7%AB%AF%E7%AD%86%E8%A8%98/"/>
    <id>http://example.com/2021/04/02/[%E7%AD%86%E8%A8%98]%E7%B6%B2%E9%A0%81%E9%96%8B%E7%99%BC%E5%89%8D%E7%AB%AF%E7%AD%86%E8%A8%98/</id>
    <published>2021-04-02T02:17:17.000Z</published>
    <updated>2021-04-04T14:05:00.845Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前端相關"><a href="#前端相關" class="headerlink" title="前端相關"></a>前端相關</h2><h3 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h3><ol><li><a href="https://hackmd.io/2opOTVd0R5CN_FN6juq2xg?view#JS%E5%B9%BC%E5%B9%BC%E7%8F%AD">JS 幼幼班</a></li><li><a href="https://hackmd.io/CERrvEVcT8i7dkZ7CT8hbg">網頁前端工程入門 By 彭彭</a></li><li><a href="https://hackmd.io/zkmbbFwMSIKxs2lU-RFBCQ">JavaScript Crash Course For Beginners</a></li><li><a href="https://hackmd.io/RIW5a7jBQP2v3wNCXm-wXw">JavaScript DOM Crash Course</a></li><li><a href="https://hackmd.io/e_OHLOuORaamBMPt9mONeA?view">JavaScript OOP Crash Course (ES5 &amp; ES6)</a></li><li><a href="https://hackmd.io/UwrfbMhASlaWWPOXNiO_1Q">JavaScript Higher Order Functions &amp; Arrays</a></li><li><a href="https://hackmd.io/oF3bzKm8RSSj9WPRB95Qvg">正則表達式 Regular Expression</a></li><li><a href="https://hackmd.io/uRVcqXjaQsiwtWPwnmxBLQ">AJAX Crash Course</a></li><li><a href="https://hackmd.io/TMUQJ4uaT-2-e303X0jXrA">Fetch API Introduction</a></li><li><a href="https://hackmd.io/toOFnYhGTjKZXVf5X8LatA">Async JS Crash Course</a></li><li><a href="https://hackmd.io/GRZtwBzPSqmfiY0UwlLSCA">The Wired Part Of Javascript</a></li></ol><h3 id="jQuery"><a href="#jQuery" class="headerlink" title="jQuery"></a>jQuery</h3><ol><li><a href="https://hackmd.io/14qnzqLrRUavCc-J8_xCkQ">JS 幼幼班 - jQuery 篇</a></li></ol><h3 id="Html"><a href="#Html" class="headerlink" title="Html"></a>Html</h3><ol><li><a href="https://hackmd.io/UELM8ZDyR8mHvEX7__nhlg">HTML 簡介</a></li><li><a href="https://hackmd.io/Y-bUYMHRQNWtRzFvbUX5Dg">HTML 語意化(Sematic)</a></li><li><a href="https://hackmd.io/O8wpWwlfQTqOylxe8vrNxw">HTML 元素的結構</a></li><li><a href="https://hackmd.io/MMuISZ-wQcOq2VvVCry8Xg">HTML freecodecamp 課程完課證明</a></li></ol><h3 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h3><ol><li><a href="https://hackmd.io/K7CR5fLkQ066-oK_IQgxqQ">CSS for beginner</a></li><li><a href="https://hackmd.io/hCN6IksjQO6-7LBCztCZnw">CSS for Intermediate</a></li><li><a href="https://hackmd.io/R9LSIVpfT-i587m3T5JCFA">CSS 版面設置 Display</a></li><li><a href="https://hackmd.io/kO9RST_hS32rO1MCqk_Q-A">CSS box-sizing</a></li><li><a href="https://hackmd.io/ZTvb6HDISFGtjsaTpkkU9g">CSS min-width,max-width</a></li><li><a href="https://hackmd.io/9vA7grfCS6Gx65BxSnARdg">CSS position:Relative</a></li><li><a href="https://hackmd.io/765LP4oQSYWVuKZJyWFHPA">CSS position:absolute</a></li><li><a href="https://hackmd.io/rzOA1npySQ-5cbn49JDaAg">CSS position:fixed</a></li><li><a href="https://hackmd.io/6F0UlEVoRZKcD9XcFo1YYw">CSS overflow</a></li><li><a href="https://hackmd.io/up0aStAmT_WoIxBJFkK5sA">CSS Flexbox</a></li><li><a href="https://hackmd.io/GzHtf4BBTjqRqT0InSU2PA">CSS Grids</a></li><li><a href="https://hackmd.io/G96vmzDxRWaTeUjH1xDITw">CSS freecodecamp 課程完課證明</a></li></ol><h3 id="SASS"><a href="#SASS" class="headerlink" title="SASS"></a>SASS</h3><ol><li><a href="https://hackmd.io/1gxuvokhRT6eXk-iqPmYYg">SASS The Complete SASS Course</a></li></ol><h2 id="Others"><a href="#Others" class="headerlink" title="Others"></a>Others</h2><h3 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h3><ol><li><a href="https://hackmd.io/MiWSvLn4ReCT4Q75Ljn1uA">Git &amp; GitHub Crash Course For Beginners</a></li><li><a href="https://hackmd.io/9L79vrkUSWmus8qnufocOQ">PR (Pull Request)</a></li><li><a href="https://hackmd.io/nxhMBsiLSzCqAleezk4dHQ">Github Pages</a></li><li><a href="https://hackmd.io/UyD9qkzkRviyGO9Bpw9tVg">Github 下載雲端專案到本機</a></li><li><a href="https://hackmd.io/ntertA6hRjO4M7g5-Ip4rQ">Git Branch</a></li></ol><h3 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h3><ol><li><a href="https://hackmd.io/nHKa7Z9sTtymkt6XASGxcA">Hexo 部落格架設</a></li></ol><h3 id="WSL"><a href="#WSL" class="headerlink" title="WSL"></a>WSL</h3><ol><li><a href="https://hackmd.io/csXtjcARRWmb9AS3mKC1oQ">WSL 安裝 (windows)</a></li></ol><h3 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h3><ol><li><a href="https://hackmd.io/II-91mo-SpuB42VRmzjKVg">Markdown 語法簡介</a></li></ol><h3 id="CLI"><a href="#CLI" class="headerlink" title="CLI"></a>CLI</h3><ol><li><a href="https://hackmd.io/4EhXP4VqQS-2XL516HK_6w">Command Line Windows 簡介</a></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前端相關&quot;&gt;&lt;a href=&quot;#前端相關&quot; class=&quot;headerlink&quot; title=&quot;前端相關&quot;&gt;&lt;/a&gt;前端相關&lt;/h2&gt;&lt;h3 id=&quot;JavaScript&quot;&gt;&lt;a href=&quot;#JavaScript&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="總筆記" scheme="http://example.com/categories/%E7%B8%BD%E7%AD%86%E8%A8%98/"/>
    
    
    <category term="jQuery" scheme="http://example.com/tags/jQuery/"/>
    
    <category term="Hexo" scheme="http://example.com/tags/Hexo/"/>
    
    <category term="Git" scheme="http://example.com/tags/Git/"/>
    
    <category term="SASS" scheme="http://example.com/tags/SASS/"/>
    
    <category term="HTML" scheme="http://example.com/tags/HTML/"/>
    
    <category term="CSS" scheme="http://example.com/tags/CSS/"/>
    
    <category term="JavaScript" scheme="http://example.com/tags/JavaScript/"/>
    
    <category term="WSL" scheme="http://example.com/tags/WSL/"/>
    
    <category term="Markdown" scheme="http://example.com/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>Vue-文件閱讀 part 2- The Vue Instance(5000字)</title>
    <link href="http://example.com/2021/03/24/Vue.js%20%E6%96%87%E4%BB%B6%E9%96%B1%E8%AE%80%20part%202-%20The%20Vue%20Instance/"/>
    <id>http://example.com/2021/03/24/Vue.js%20%E6%96%87%E4%BB%B6%E9%96%B1%E8%AE%80%20part%202-%20The%20Vue%20Instance/</id>
    <published>2021-03-24T04:27:12.000Z</published>
    <updated>2021-04-04T14:00:42.818Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Vue-js-文件閱讀-part-2-The-Vue-Instance"><a href="#Vue-js-文件閱讀-part-2-The-Vue-Instance" class="headerlink" title="Vue.js 文件閱讀 part 2- The Vue Instance"></a>Vue.js 文件閱讀 part 2- The Vue Instance</h1><hr><h2 id="tags-Javascript-relate"><a href="#tags-Javascript-relate" class="headerlink" title="tags: Javascript relate"></a>tags: Javascript relate</h2><h6 id="tags-Javascript-Vue-js"><a href="#tags-Javascript-Vue-js" class="headerlink" title="tags: Javascript, Vue.js"></a>tags: <code>Javascript, Vue.js</code></h6><h1 id="創造Vue實體-Creating-a-Vue-Instance"><a href="#創造Vue實體-Creating-a-Vue-Instance" class="headerlink" title="創造Vue實體 (Creating a Vue Instance)"></a>創造Vue實體 (Creating a Vue Instance)</h1><ul><li>所有的Vue app 都會從創造實例(Instance)開始</li><li>裡面的options處就是我們操作的地方，可以瀏覽<a href="https://vuejs.org/v2/api/#Options-Data"> API reference</a>來做操作</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  <span class="comment">// options</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>一個Vue app通常會有會有個root Vue instance由new Vue產生</li><li>伴隨著的是巢狀的樹組成的component，它具有可重複使用的特性</li><li>在ROOT下面的都是component的部分</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Root Instance</span><br><span class="line">└─ TodoList</span><br><span class="line">   ├─ TodoItem </span><br><span class="line">   │  ├─ TodoButtonDelete</span><br><span class="line">   │  └─ TodoButtonEdit</span><br><span class="line">   └─ TodoListFooter</span><br><span class="line">      ├─ TodosButtonClear</span><br><span class="line">      └─ TodoListStatistics</span><br></pre></td></tr></table></figure><h2 id="範例"><a href="#範例" class="headerlink" title="範例"></a>範例</h2><p>index.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el:#app,</span><br><span class="line">    data: &#123;</span><br><span class="line">    product: <span class="string">&quot;Socks&quot;</span></span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>index.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123; product &#125;&#125; <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span>    </span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>app使用el連接到html檔案內部的id = “app”的div</li><li>連結app內的data: poduct到html上</li><li>藉由改變index.js 內 product的內容可以及時修改html內的的內容</li></ul><p>呈現在網頁上的結果<br><img src="https://i.imgur.com/Q0nZBMD.png"></p><p>藉著改變屬性也可以及時修改頁面內容</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">app.product = <span class="string">&#x27;Coat&#x27;</span></span><br><span class="line"><span class="comment">//印出結果變成Coat</span></span><br><span class="line"></span><br><span class="line">app.product = <span class="string">&quot;Compass&quot;</span></span><br><span class="line"><span class="comment">//印出結果變成Compass</span></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/ZtJ5TBm.png"></p><p><img src="https://i.imgur.com/tvzMv4N.png"></p><h1 id="資料與方法-Data-and-Methods"><a href="#資料與方法-Data-and-Methods" class="headerlink" title="資料與方法(Data and Methods)"></a>資料與方法(Data and Methods)</h1><h2 id="data"><a href="#data" class="headerlink" title="$data"></a>$data</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span>&#123;&#123;msg&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> data = &#123;</span><br><span class="line">            msg: <span class="string">&#x27;123123&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> vm = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">            el: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">            data,</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure><p>這兩個是相同的結果</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vm.$data === data   <span class="comment">//true</span></span><br><span class="line"></span><br><span class="line">data.msg === vm.msg  <span class="comment">//true</span></span><br></pre></td></tr></table></figure><p>因此當我們操作</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">data.msg =<span class="number">456</span></span><br><span class="line">vm.msg = <span class="number">123</span></span><br></pre></td></tr></table></figure><p>畫面也會如此響應</p><p>但是如果使用不存在的屬性時畫面則不會響，得使用不同的方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vm.b = <span class="string">&#x27;hi&#x27;</span></span><br></pre></td></tr></table></figure><p>但是如果你知道可能稍後會有屬性會使用到，但目前得空著或是還未存在，因此就必須設預設值</p><p>比方說要規畫一個todoList app可能會使用到的data:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">data: &#123;</span><br><span class="line">  newTodoText: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  visitCount: <span class="number">0</span>,</span><br><span class="line">  hideCompletedTodos: <span class="literal">false</span>,</span><br><span class="line">  todos: [],</span><br><span class="line">  error: <span class="literal">null</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Object-freeze"><a href="#Object-freeze" class="headerlink" title="Object.freeze()"></a>Object.freeze()</h2><p>可以關閉reative，讓畫面不被響應</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span>&#123;&#123;msg&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> data = &#123;</span><br><span class="line">            msg: <span class="string">&#x27;hello Vue&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">Object</span>.freeze(data);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> vm = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">            el: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">            data,</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure><p>在這個情況下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">data.msg =<span class="number">456</span></span><br><span class="line">vm.msg = <span class="number">123</span></span><br></pre></td></tr></table></figure><p>畫面也不會有任何響應</p><p>並vm也會變成只能讀不能寫<br><img src="https://i.imgur.com/IBZOEP4.png"></p><h2 id="前綴API"><a href="#前綴API" class="headerlink" title="$前綴API"></a>$前綴API</h2><p>$這個符號代表Vue提供給我們的功能<br>如<br>$data,<br>$el,<br>$watch等等</p><p><a href="https://vuejs.org/v2/api/#Instance-Properties">Instance Properties</a></p><h1 id="生命週期裝置實例-Instance-Lifecycle-Hooks"><a href="#生命週期裝置實例-Instance-Lifecycle-Hooks" class="headerlink" title="生命週期裝置實例(Instance Lifecycle Hooks)"></a>生命週期裝置實例(Instance Lifecycle Hooks)</h1><p>到特定的時間就會呼叫特定的函式</p><p>每個Vue實體都會經歷一連串的初始化階段舉例:</p><ol><li>需要設置好data observation</li><li>編譯模板</li><li>把Vue實體推到DOM上</li><li>更新DOM當data被更新</li></ol><p>在這個階段過程中也會跑一些functions被稱為<strong>Lifecycle Hooks</strong>，讓使用者寫自己的程式碼在特定的階段使用</p><h2 id="範例-1"><a href="#範例-1" class="headerlink" title="範例"></a>範例</h2><p>當Vue實體已經被創造時，created這個函式可以被使用:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  data: &#123;</span><br><span class="line">    a: <span class="number">1</span></span><br><span class="line">  &#125;,</span><br><span class="line">  created: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// `this` points to the vm instance</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;a is: &#x27;</span> + <span class="built_in">this</span>.a)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// =&gt; &quot;a is: 1&quot;</span></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/kCZ5wYN.png"></p><p>在不同的階段還有其他的hooks會被呼叫例如:</p><p>所有的hook指向調用它的實體</p><ul><li>mounted</li><li>updated</li><li>destroyed</li></ul><h2 id="作者提醒"><a href="#作者提醒" class="headerlink" title="作者提醒"></a>作者提醒</h2><p>千萬不要使用箭頭函式在Vue實體，因為箭頭函示沒有this常常會導致報錯</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Uncaught TypeError: Cannot read property of undefined </span><br><span class="line">Uncaught TypeError: this.myMethod is not a function</span><br></pre></td></tr></table></figure><p>使用一般的函式:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">            data: &#123;</span><br><span class="line">                a: <span class="number">1</span></span><br><span class="line">            &#125;,</span><br><span class="line">            created: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="built_in">this</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br></pre></td></tr></table></figure><p>才能印出 Vu實體<br><img src="https://i.imgur.com/utK0icf.png"></p><p>使用箭頭函式:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">            data: &#123;</span><br><span class="line">                a: <span class="number">1</span></span><br><span class="line">            &#125;,</span><br><span class="line">            created: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="built_in">this</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br></pre></td></tr></table></figure><p>只會印出外層的windows<br><img src="https://i.imgur.com/yZu3ut0.png"></p><h2 id="Lifecycle-Diagram"><a href="#Lifecycle-Diagram" class="headerlink" title="Lifecycle Diagram"></a>Lifecycle Diagram</h2><p>從上方那張圖可以得知hook如下:</p><p><strong>beforeCreate</strong><br>Vue實體初始化後立刻呼叫此函式，不過此時Vue實體還未創建所以其中的設定都還未能使用(如data observation, event, watcher setup)</p><p><strong>created</strong><br>Vue實例創建完成後立刻呼叫此函式，已設置 data, computed properties, methods, watch/event callbacks，但尚未開始mounting階段，且 $el 還不能在此階段使用。</p><p><strong>beforeMount</strong><br>在mounting階段開始前被調用：render function首次被調用。</p><p>mounted<br>選項物件中的el被新創建的vm.$el替換，並掛載到到 vm 上，並調用mounted這個鉤子。</p><p>beforeUpdate<br>數據被更新時會調用，發生在 Virtual DOM re-render 和 patch 之前(連結：Day4: Virtual DOM)，可以在此時更改狀態數據，並不會增加重新渲染的成本。</p><p>updated<br>由於數據更新導致 Virtual DOM re-render 和 patch 之後會調用updated這個鉤子。</p><p>不精確白話文為：由於updated被調用時，DOM 已經更新。所以在此時更新數據很可能會導致updated無限循環的被調用。</p><p>beforeDestroy<br>在 Vue Instance 被銷毀前被調用，因此 Vue Instance 在beforeDestroy中仍可運作。</p><p>不精確白話文為：Vue Instance 可以在此時做垂死前的掙扎。</p><p>destroyed<br>在 Vue Instance 被銷毀後被調用，此時 Vue Instance 所有東西會解除綁定，事件監聽也都會被移除，子實例也會被銷毀。</p><h1 id="模板語法-Template-Syntax"><a href="#模板語法-Template-Syntax" class="headerlink" title="模板語法(Template Syntax)"></a>模板語法(Template Syntax)</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Vue-js-文件閱讀-part-2-The-Vue-Instance&quot;&gt;&lt;a href=&quot;#Vue-js-文件閱讀-part-2-The-Vue-Instance&quot; class=&quot;headerlink&quot; title=&quot;Vue.js 文件閱讀 part 2- Th</summary>
      
    
    
    
    <category term="Vue2" scheme="http://example.com/categories/Vue2/"/>
    
    
    <category term="Vue" scheme="http://example.com/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>Vue-文件閱讀 part 1- Introduction + Installation(5000字)</title>
    <link href="http://example.com/2021/03/22/Vue.js%20%E6%96%87%E4%BB%B6%E9%96%B1%E8%AE%80%20part%201-%20Introduction%20+%20Installation/"/>
    <id>http://example.com/2021/03/22/Vue.js%20%E6%96%87%E4%BB%B6%E9%96%B1%E8%AE%80%20part%201-%20Introduction%20+%20Installation/</id>
    <published>2021-03-22T12:27:12.000Z</published>
    <updated>2021-04-04T14:00:30.499Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Vue-js-文件閱讀-part-1-Introduction-Installation"><a href="#Vue-js-文件閱讀-part-1-Introduction-Installation" class="headerlink" title="Vue.js 文件閱讀 part 1- Introduction + Installation"></a>Vue.js 文件閱讀 part 1- Introduction + Installation</h1><hr><h2 id="tags-Javascript-relate"><a href="#tags-Javascript-relate" class="headerlink" title="tags: Javascript relate"></a>tags: Javascript relate</h2><h6 id="tags-Javascript-Vue-js"><a href="#tags-Javascript-Vue-js" class="headerlink" title="tags: Javascript, Vue.js"></a>tags: <code>Javascript, Vue.js</code></h6><h1 id="簡介-Introduction"><a href="#簡介-Introduction" class="headerlink" title="簡介(Introduction)"></a>簡介(Introduction)</h1><h2 id="Vue-js是什麼"><a href="#Vue-js是什麼" class="headerlink" title="Vue.js是什麼?"></a>Vue.js是什麼?</h2><ul><li>一個用來搭建使用者介面的框架<blockquote><p>框架(Framework)：由包含各種功能與開發規則的函數庫組成。我們可以利用其提供的功能加速開發，不必從零開始；而其開發規則通常是經過驗證的良好開發方法，只要follow它，就可以避免很多問題與錯誤。因此框架通常有著加速開發並易於維護的特性。</p></blockquote></li><li>在MVVM的架構下以視圖(view layer)為核心的網頁介面(Web UI)開發方法</li><li>容易上手並且容易整合進其他的資料庫或是其他的現存的專案</li><li>可以完美的強化單頁應用程式是(SPA)藉著一些<a href="https://vuejs.org/v2/guide/single-file-components.html">現代工具</a>以及<a href="https://github.com/vuejs/awesome-vue#components--libraries">輔助使用的資料庫</a></li></ul><p><a href="https://www.vuemastery.com/courses/intro-to-vue-js/vue-instance/">影片學習 - Intro to Vue 2</a></p><script async src="//jsfiddle.net/chiehLiu/80nLrhmp/embed/"></script><h1 id="安裝使用-Getting-Started"><a href="#安裝使用-Getting-Started" class="headerlink" title="安裝使用(Getting Started)"></a>安裝使用(Getting Started)</h1><blockquote><p>這份官方手冊需要有HTML, CSS, and JavaScript基本知識必較容易讀懂<br>有其他框架使用經驗也有幫助</p></blockquote><h2 id="相容性指示-Compatibility-Note"><a href="#相容性指示-Compatibility-Note" class="headerlink" title="相容性指示(Compatibility Note)"></a>相容性指示(Compatibility Note)</h2><ul><li>Vue不支援IE8甚至更低的版本</li><li>因為Vue使用ECMAScript 5 features但IE8不支援</li></ul><p><img src="https://i.imgur.com/TWcuTRw.png"></p><h2 id="語意化的版本控制"><a href="#語意化的版本控制" class="headerlink" title="語意化的版本控制"></a>語意化的版本控制</h2><p>簡單來說就讓版本名稱具有意義好辨識並且達成共識，避免相容性出現問題</p><p><a href="https://semver.org/lang/zh-TW/">語意化版本</a></p><h2 id="最新版本釋出"><a href="#最新版本釋出" class="headerlink" title="最新版本釋出"></a>最新版本釋出</h2><p><a href="https://github.com/vuejs/vue/releases">最新版本 Github</a></p><h2 id="Vue-開發工具-Vue-Devtools"><a href="#Vue-開發工具-Vue-Devtools" class="headerlink" title="Vue 開發工具(Vue Devtools)"></a>Vue 開發工具(Vue Devtools)</h2><p>相當推薦使用在一個使用者友善介面下，可以更好的檢視你的作品以及幫忙debug</p><p><a href="https://github.com/vuejs/vue-devtools#vue-devtools">Vue Devtools Github</a></p><h2 id="使用-lt-script-gt-引入使用Vue"><a href="#使用-lt-script-gt-引入使用Vue" class="headerlink" title="使用&lt;script&gt;引入使用Vue"></a>使用<code>&lt;script&gt;</code>引入使用Vue</h2><p>建議開發的時候引入Development Version才不會省略掉一些常見的錯誤訊息</p><p><img src="https://i.imgur.com/Wsi9NjJ.png"></p><h2 id="內容傳遞網路-CDN-Content-delivery-network"><a href="#內容傳遞網路-CDN-Content-delivery-network" class="headerlink" title="內容傳遞網路 (CDN - Content delivery network)"></a>內容傳遞網路 (CDN - Content delivery network)</h2><p>作為原型或是學習使用</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2.6.12/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>要用在產品身上則推薦使用特定的版本，因為最新版本可能尚未完善</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2.6.12&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>使用原生ES Module相容的版本</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;module&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&#x27;https://cdn.jsdelivr.net/npm/vue@2.6.12/dist/vue.esm.browser.js&#x27;</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可以從此處瀏覽原始碼</p><p><a href="https://cdn.jsdelivr.net/npm/vue/">NPM package 原始碼</a></p><p><a href="https://unpkg.com/vue@2.6.12/dist/vue.js">unpkg</a></p><p><a href="https://cdnjs.cloudflare.com/ajax/libs/vue/2.6.12/vue.js">cdnjs (最新版本有可能會比較慢登上這邊)</a></p><h3 id="小提醒"><a href="#小提醒" class="headerlink" title="小提醒"></a>小提醒</h3><p>在你要發布的網站上面可以使用<code>vue.min.js</code>取代<code>vue.j</code>可以優化檔案大小以及執行速度</p><h2 id="NPM"><a href="#NPM" class="headerlink" title="NPM"></a>NPM</h2><p>當要使用在大型規模的app時推薦使用NPM，因為可以跟<a href="https://webpack.js.org/">Webpack</a> or <a href="http://browserify.org/">Browserify</a>相容的很好，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># latest stable</span><br><span class="line">$ npm install vue</span><br></pre></td></tr></table></figure><h2 id="CLI"><a href="#CLI" class="headerlink" title="CLI"></a>CLI</h2><p>使用官方CLI需要一些node.js的相關知識</p><p><a href="https://cli.vuejs.org/">Vue CLI 官網</a></p><p><a href="https://www.vuemastery.com/courses/real-world-vue-js/vue-cli/">CLI 影片教學</a></p><h2 id="Explanation-of-Different-Builds"><a href="#Explanation-of-Different-Builds" class="headerlink" title="Explanation of Different Builds"></a>Explanation of Different Builds</h2><p>在<a href="https://cdn.jsdelivr.net/npm/vue/">NPM package 原始碼</a> dist/處有很多不同的builds下方是他們的不同之處:</p><table><thead><tr><th></th><th>UMD</th><th>CommonJS</th><th>ES Module (for bundlers)</th><th>ES Module (for browsers)</th></tr></thead><tbody><tr><td><strong>Full</strong></td><td>vue.js</td><td>vue.common.js</td><td>vue.esm.js</td><td>vue.esm.browser.js</td></tr><tr><td><strong>Runtime-only</strong></td><td>vue.runtime.js</td><td>vue.runtime.common.js</td><td>vue.runtime.esm.js</td><td>-</td></tr><tr><td><strong>Full (production)</strong></td><td>vue.min.js</td><td>-</td><td>-</td><td>vue.esm.browser.min.js</td></tr><tr><td><strong>Runtime-only (production)</strong></td><td>vue.runtime.min.js</td><td>-</td><td>-</td><td>-</td></tr></tbody></table><h3 id="名詞解釋-Term"><a href="#名詞解釋-Term" class="headerlink" title="名詞解釋(Term)"></a>名詞解釋(Term)</h3><ul><li><p>Full: 包含Compiler, Runtime</p></li><li><p>Compiler: 負責編譯模板字版進去JS呈現相關的函式</p></li><li><p>Runtime: 負責Vue instances, 呈現以及修補 virtual DOM(基本上處理Compiler以下的事情)</p></li><li><p>UMD: UMD相關的builds可以直接使用在瀏覽器下藉著<code>&lt;script&gt;</code>tag<br>UMD (Universal Module Definition)，就是一種javascript通用模塊定義規範，讓你的模塊能在javascript所有運行環境中發揮作用。</p></li><li><p>CommonJS: 給browserify or webpack使用</p></li><li><p>ES Module: </p></li></ul><p>2.6Vue版本後才開始提供下面兩種builds</p><ol><li>ESM for bundlers: 給webpack 2 or Rollup使用</li><li>ESM for browsers (2.6+ only): 直接引入現代的瀏覽器使用<code>&lt;script type=&quot;module&quot;&gt;</code></li></ol><h1 id="宣告式渲染-Declarative-Rendering"><a href="#宣告式渲染-Declarative-Rendering" class="headerlink" title="宣告式渲染(Declarative Rendering)"></a>宣告式渲染(Declarative Rendering)</h1><blockquote><p>Vue.js的核心藉著好理解的模板語法讓使用者把資料呈現到DOM上面</p></blockquote><h2 id="範例"><a href="#範例" class="headerlink" title="範例"></a>範例</h2><p>index.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">  &#123;&#123; message &#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;index.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>index.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">&#x27;#app&#x27;</span>, <span class="comment">// 抓取哪邊的DOM</span></span><br><span class="line">  data: &#123;</span><br><span class="line">    message: <span class="string">&#x27;Hello Vue!&#x27;</span> <span class="comment">// 此處是要呈現的內容</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 輸出 Hello Vue!</span></span><br><span class="line"></span><br><span class="line">app.message = <span class="string">&#x27;I have changed the data!&#x27;</span></span><br><span class="line"><span class="comment">// 輸出 I have changed the data</span></span><br></pre></td></tr></table></figure><p><a href="https://scrimba.com/scrim/cQ3QVcr?pl=pXKqta">影片說明Hello Vue!</a></p><ul><li>資料以及DOM已經做了連結並且是隨時反應的<br>ex. app.message修改內容後輸出內容也會即時更改</li><li>不需要再跟HTML互動，直接在Vue instance就可以操作DOM</li></ul><h2 id="範例二"><a href="#範例二" class="headerlink" title="範例二"></a>範例二</h2><p>index.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app-2&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-bind:title</span>=<span class="string">&quot;message&quot;</span>&gt;</span></span><br><span class="line">    Hover your mouse over me for a few seconds</span><br><span class="line">    to see my dynamically bound title!</span><br><span class="line">  <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>index.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> app2 = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">&#x27;#app-2&#x27;</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    message: <span class="string">&#x27;You loaded this page on &#x27;</span> + <span class="keyword">new</span> <span class="built_in">Date</span>().toLocaleString()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/ItiTipU.gif"></p><p>當hover的時候在當前的string會顯示 字串+載入日期時間</p><ul><li><code>v-bind</code></li></ul><p>這個有v前墜屬性被稱做指示(directive)，是Vue提供使用的，而這個v-bind的用法在於讓這個title的屬性隨著message屬性作同步修在Vue instance上面</p><p>所以當我使用下面的方法時，title的屬性也會及時更新</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app2.message = <span class="string">&#x27;some new message&#x27;</span></span><br></pre></td></tr></table></figure><h1 id="條件式以及迴圈-Conditionals-and-Loops"><a href="#條件式以及迴圈-Conditionals-and-Loops" class="headerlink" title="條件式以及迴圈(Conditionals and Loops)"></a>條件式以及迴圈(Conditionals and Loops)</h1><h2 id="條件式"><a href="#條件式" class="headerlink" title="條件式"></a>條件式</h2><p>index.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app-3&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-if</span>=<span class="string">&quot;seen&quot;</span>&gt;</span>Now you see me<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>index.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> app3 = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">&#x27;#app-3&#x27;</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    seen: <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li><code>v-if</code></li></ul><p>可以理解成 v-if後方的文字必須為true(然而是否為true則要去看js程式碼如何操作)，才會讓span內的文字被看見</p><p><img src="https://i.imgur.com/SjH0Sk5.png">   </p><p>因此當判斷式內容改成flase時，就看不見文字</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app-<span class="number">3.</span>seen = <span class="literal">false</span>;</span><br></pre></td></tr></table></figure><h2 id="迴圈"><a href="#迴圈" class="headerlink" title="迴圈"></a>迴圈</h2><p>index.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app-4&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;todo in todos&quot;</span>&gt;</span></span><br><span class="line">      &#123;&#123; todo.text &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>index.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> app4 = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">&#x27;#app-4&#x27;</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    todos: [</span><br><span class="line">      &#123; <span class="attr">text</span>: <span class="string">&#x27;Learn JavaScript&#x27;</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">text</span>: <span class="string">&#x27;Learn Vue&#x27;</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">text</span>: <span class="string">&#x27;Build something awesome&#x27;</span> &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li><code>v-for</code></li></ul><p>可以用來製作清單類型的呈現</p><p><img src="https://i.imgur.com/AimG2bx.png"></p><p>如果想要再加入新的清單可以這樣做</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app4.todos.push(&#123; <span class="attr">text</span>: <span class="string">&#x27;New item&#x27;</span> &#125;)</span><br></pre></td></tr></table></figure><h1 id="處理使用者的輸入-Handling-User-Input"><a href="#處理使用者的輸入-Handling-User-Input" class="headerlink" title="處理使用者的輸入(Handling User Input)"></a>處理使用者的輸入(Handling User Input)</h1><h2 id="範例-1"><a href="#範例-1" class="headerlink" title="範例"></a>範例</h2><p>index.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; message &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;reverseMessage&quot;</span>&gt;</span>Reverse Message<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>index.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    message: <span class="string">&#x27;Hello Vue.js!&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    reverseMessage: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="built_in">this</span>.message = <span class="built_in">this</span>.message.split(<span class="string">&#x27;&#x27;</span>).reverse().join(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li><code>v-on:click</code></li></ul><p>跟使用者互動藉由v-on 指示來連接事件監聽click並觸發函式來處理</p><p>點擊按鈕後把文字順序反過來</p><p><img src="https://i.imgur.com/ETYNgvk.png"></p><p><img src="https://i.imgur.com/pEqBa79.png"></p><h1 id="建構組件-Composing-with-Components"><a href="#建構組件-Composing-with-Components" class="headerlink" title="建構組件(Composing with Components)"></a>建構組件(Composing with Components)</h1><p>為了建構大型專案藉著拆分成不同的小組件的優點</p><ul><li>可重複利用</li><li>是獨立的組件</li><li>容量小</li></ul><p><img src="https://i.imgur.com/tbekM4J.png"></p><h2 id="範例-2"><a href="#範例-2" class="headerlink" title="範例"></a>範例</h2><p>index.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定義一個新的組件 todo-item</span></span><br><span class="line">Vue.component(<span class="string">&#x27;todo-item&#x27;</span>, &#123;</span><br><span class="line">  template: <span class="string">&#x27;&lt;li&gt;This is a todo&lt;/li&gt;&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue(...)</span><br></pre></td></tr></table></figure><p>index.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">todo-item</span>&gt;</span><span class="tag">&lt;/<span class="name">todo-item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">todo-item</span>&gt;</span><span class="tag">&lt;/<span class="name">todo-item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>首先在js先撰寫組件todo-item後就可以在html裡面直接使用</p><h2 id="範例二-1"><a href="#範例二-1" class="headerlink" title="範例二"></a>範例二</h2><p>index.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Vue.component(<span class="string">&#x27;todo-item&#x27;</span>, &#123;</span><br><span class="line">  props: [<span class="string">&#x27;todo&#x27;</span>],</span><br><span class="line">  template: <span class="string">&#x27;&lt;li&gt;&#123;&#123; todo.text &#125;&#125;&lt;/li&gt;&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> app7 = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">&#x27;#app-7&#x27;</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    groceryList: [</span><br><span class="line">      &#123; <span class="attr">id</span>: <span class="number">0</span>, <span class="attr">text</span>: <span class="string">&#x27;Vegetables&#x27;</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">id</span>: <span class="number">1</span>, <span class="attr">text</span>: <span class="string">&#x27;Cheese&#x27;</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">id</span>: <span class="number">2</span>, <span class="attr">text</span>: <span class="string">&#x27;Whatever else humans are supposed to eat&#x27;</span> &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>index.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app-7&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">    &lt;todo-item</span><br><span class="line">      v-for=&quot;item in groceryList&quot;</span><br><span class="line">      v-bind:todo=&quot;item&quot;</span><br><span class="line">      v-bind:key=&quot;item.id&quot;</span><br><span class="line">    &gt;<span class="tag">&lt;/<span class="name">todo-item</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>首先於component處新增<code>porp</code>是一個可以客製化的屬性並命名todo</li><li>介下來使用<code>v-bind</code>讓文字可以被動態的傳入DOM同時傳入key的部分會在後面章節作解釋</li><li>並且使用<code>v-for</code>製作清單列表</li></ul><p><img src="https://i.imgur.com/OmEZP4f.png"></p><hr><p>在大型專案中把內部的app做拆分是必要的，讓開發過程容易管理，下面程式碼是個範例說明比較多組件且複雜的html長相</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">app-nav</span>&gt;</span><span class="tag">&lt;/<span class="name">app-nav</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">app-view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">app-sidebar</span>&gt;</span><span class="tag">&lt;/<span class="name">app-sidebar</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">app-content</span>&gt;</span><span class="tag">&lt;/<span class="name">app-content</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">app-view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="與自定義元素的關係-Relation-to-Custom-Elements"><a href="#與自定義元素的關係-Relation-to-Custom-Elements" class="headerlink" title="與自定義元素的關係(Relation to Custom Elements)"></a>與自定義元素的關係(Relation to Custom Elements)</h1><ul><li><p>Vue的組件非常類似於<a href="https://developers.google.com/web/fundamentals/web-components">Custom Elements</a></p></li><li><p>舉例說明<br>Vue組件執行<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Element/slot">Slot API</a> 以及 <a href="https://v3.vuejs.org/api/special-attributes.html#is">is</a> 特殊屬性</p></li></ul><blockquote><p>Slot是存在web component内部的占位符，用户可以通過slot屬性在web component的内部插入自定義的標記文本。</p></blockquote><ul><li>不同之處</li></ul><ol><li>Web Components規範已經完成通過但是依舊沒有被所有瀏覽器支援<br>(目前 Safari 10.1+、Chrome 54+ 和 Firefox 63+ 原生支持 Web Components)</li><li>Vue 组件不需要任何 polyfill，並且支援所有瀏覽器 (IE9以下不支援)，必要時Vue组件也可以包裝於原生自定義元素之内</li></ol><blockquote><p>polyfill代指為舊瀏覽器實現或模擬現有版本已實現之功能的程式碼片段</p></blockquote><ol start="3"><li>Vue 组件提供了Custom Elements沒有的功能，跨组件數據流、自定義事件溝通以及bulid整合工具。</li></ol><ul><li>Vue 並沒有使用Custom Elements，不過在應用以及發布Custom Elements上還是有很好的<a href="https://custom-elements-everywhere.com/#vue">互通性</a>，Vue CLI 也支持 Vue 组件建構成為原生的Custom Elements</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Vue-js-文件閱讀-part-1-Introduction-Installation&quot;&gt;&lt;a href=&quot;#Vue-js-文件閱讀-part-1-Introduction-Installation&quot; class=&quot;headerlink&quot; title=&quot;Vue.</summary>
      
    
    
    
    <category term="Vue2" scheme="http://example.com/categories/Vue2/"/>
    
    
    <category term="Vue" scheme="http://example.com/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>Vue-Vue2 Tutorial</title>
    <link href="http://example.com/2021/03/22/Vue-Vue2%20Tutorial/"/>
    <id>http://example.com/2021/03/22/Vue-Vue2%20Tutorial/</id>
    <published>2021-03-22T12:27:12.000Z</published>
    <updated>2021-04-04T14:00:11.518Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Vue-JS-2-Tutorial"><a href="#Vue-JS-2-Tutorial" class="headerlink" title="Vue JS 2 Tutorial"></a>Vue JS 2 Tutorial</h1><hr><h2 id="tags-Javascript-relate"><a href="#tags-Javascript-relate" class="headerlink" title="tags: Javascript relate"></a>tags: Javascript relate</h2><h6 id="tags-Javascript-Vue-js"><a href="#tags-Javascript-Vue-js" class="headerlink" title="tags: Javascript, Vue.js"></a>tags: <code>Javascript, Vue.js</code></h6><h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><h2 id="What-is-Vue-js"><a href="#What-is-Vue-js" class="headerlink" title="What is Vue.js"></a>What is Vue.js</h2><ul><li>前端框架</li><li>可以創造以JS引擎為主的網頁APP</li><li>在瀏覽器中使用</li><li>不需要為了重整頁面，跑伺服器端</li></ul><h2 id="Why-Vue-js"><a href="#Why-Vue-js" class="headerlink" title="Why Vue.js"></a>Why Vue.js</h2><ul><li>非常輕量</li><li>高執行期表現</li></ul><h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p>建議把script放在body tag內</p><p><a href="https://vuejs.org/v2/guide/installation.html">CDN 連結</a></p><p><img src="https://i.imgur.com/sIy07l3.png"></p><h2 id="Before-You-Start"><a href="#Before-You-Start" class="headerlink" title="Before You Start"></a>Before You Start</h2><p>前置知識:</p><p>JavaScript<br>HTML(&amp;CSS)</p><h1 id="Vue-Instance"><a href="#Vue-Instance" class="headerlink" title="Vue Instance"></a>Vue Instance</h1><p>Vue實體做的事情:</p><ol><li>控制整個app功能或是部分元件的功能</li><li>儲存不同的功能在option裡面像是data, methods</li><li>控制template並呈現在DOM上</li></ol><p>我們使用在html上面的tag並不會直接被使用，而是Vue.js會創造一個template並且是JS的格式並連接我們想要呈現的data並且結果會以html程式碼的方式呈現最後呈現到HTML DOM上面</p><h2 id="範例"><a href="#範例" class="headerlink" title="範例"></a>範例</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 這個部分就是Vue實體</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el: <span class="string">&#x27;#vue-app&#x27;</span>,</span><br><span class="line">    data: &#123;</span><br><span class="line">        name: <span class="string">&#x27;Shaun&#x27;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;vue-app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>印出結果:<br><img src="https://i.imgur.com/Bk8iiR0.png"></p><h1 id="Data-amp-Methods"><a href="#Data-amp-Methods" class="headerlink" title="Data &amp; Methods"></a>Data &amp; Methods</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el: <span class="string">&#x27;#vue-app&#x27;</span>,</span><br><span class="line">    data: &#123;</span><br><span class="line">        name: <span class="string">&#x27;Shaun&#x27;</span>,</span><br><span class="line">        job: <span class="string">&#x27;Ninja&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        greet: <span class="function"><span class="keyword">function</span> (<span class="params">time</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;Good&#x27;</span> + time + <span class="string">&#x27; &#x27;</span> + <span class="built_in">this</span>.name;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;vue-app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;greet(&#x27; afternoon&#x27;)&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>name: &#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>job: &#123;&#123;job&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="data"><a href="#data" class="headerlink" title="data"></a>data</h2><p>data的操作不需要做<code>this.data.name</code></p><p>而是可以直接取得name或是job</p><p><code>this.name</code><br><code>this.job</code></p><h2 id="Methods"><a href="#Methods" class="headerlink" title="Methods"></a>Methods</h2><ol><li>可以在內部定義函式，並且return 的內容可以包含data</li><li>使用this取得Vue實體後並操作返回的內容</li><li>呼叫的方式<code>&lt;h1&gt;&#123;&#123;greet()&#125;&#125;&lt;/h1&gt;</code>並可以在內部輸入參數</li></ol><ul><li>需要注意的點</li></ul><p>位於Vue實體外面的大括號是無法操作的要注意！</p><h1 id="Data-Binding"><a href="#Data-Binding" class="headerlink" title="Data Binding"></a>Data Binding</h1><h2 id="v-bind"><a href="#v-bind" class="headerlink" title="v-bind"></a>v-bind</h2><p>把資料綁定上特定的html tag讓其可以讀取Vue實體內部的改動</p><p>新增一個website的data內容</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el: <span class="string">&#x27;#vue-app&#x27;</span>,</span><br><span class="line">    data: &#123;</span><br><span class="line">        name: <span class="string">&#x27;Shaun&#x27;</span>,</span><br><span class="line">        job: <span class="string">&#x27;Ninja&#x27;</span>,</span><br><span class="line">        website: <span class="string">&#x27;http://www.google.com&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        greet: <span class="function"><span class="keyword">function</span> (<span class="params">time</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;Good&#x27;</span> + time + <span class="string">&#x27; &#x27;</span> + <span class="built_in">this</span>.name;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>如果要綁定tag的屬性的話則必須使用v-bind:並且在要使用的data要使用雙引號包裹住</li><li>也可以使用縮寫 :href 這樣使用也可以喔<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;vue-app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Data Binding<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">v-bind:href</span>=<span class="string">&quot;website&quot;</span>&gt;</span>Google<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p>就可以綁訂在a tag上面的屬性搂!(但不只是href可以綁定其他屬性也可以)<br><img src="https://i.imgur.com/KbyOIf1.png"></p><ul><li>這邊示範綁訂在input的value屬性上面並且呈現出data裡面的name的值呈現在DOM上</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;vue-app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Data Binding<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">v-bind:href</span>=<span class="string">&quot;website&quot;</span>&gt;</span>Google<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-bind:value</span>=<span class="string">&quot;name&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>印出結果會把Shaun 放在value的位置<br><img src="https://i.imgur.com/LqFofet.png"></p><h2 id="v-html"><a href="#v-html" class="headerlink" title="v-html"></a>v-html</h2><p>如果想要綁定完整的html tag上去DOM上面可以使用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;vue-app&quot;</span>&gt;</span><br><span class="line">        &lt;p v-html=<span class="string">&quot;websiteTag&quot;</span>&gt;&lt;/p&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el: <span class="string">&#x27;#vue-app&#x27;</span>,</span><br><span class="line">    data: &#123;</span><br><span class="line">        websiteTag: <span class="string">&#x27;&lt;a href= &quot;http://www.google.com&quot;&gt;GOOGLEWEBSITE&lt;/a&gt;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>印出結果就會讓a tag 出現在 p tag內部</p><p><img src="https://i.imgur.com/jMKsNA5.png"><br><img src="https://i.imgur.com/Kp9dzFX.png"></p><h1 id="Events"><a href="#Events" class="headerlink" title="Events"></a>Events</h1><h2 id="v-on-click"><a href="#v-on-click" class="headerlink" title="v-on:click"></a>v-on:click</h2><p>使用v-on可以綁定事件，範例處我們使用click當範例:</p><ul><li>當點擊add按鈕，年齡會加一</li><li>當點擊substract按鈕，年齡會減一</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;vue-app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Events<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;add&quot;</span>&gt;</span>Add a Year<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;substract&quot;</span>&gt;</span>Subtract a Year<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>My age is &#123;&#123;age&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el: <span class="string">&#x27;#vue-app&#x27;</span>,</span><br><span class="line">    data: &#123;</span><br><span class="line">        age: <span class="number">25</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        add: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.age++;</span><br><span class="line">        &#125;,</span><br><span class="line">        substract: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.age--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/ypn2jza.gif"></p><h3 id="作者提醒"><a href="#作者提醒" class="headerlink" title="作者提醒"></a>作者提醒</h3><ul><li>要特別注意寫在當v-on在呼叫函式的時候，add()，不需要加上括號!!(但要使用參數時，一樣可以使用括號)</li><li>但是使用在tempalte內部的test()則要使用括號</li></ul><h2 id="v-on-dblclick"><a href="#v-on-dblclick" class="headerlink" title="v-on:dblclick"></a>v-on:dblclick</h2><ul><li>雙擊按鈕會年齡加10/減10</li></ul><p>這邊不需要再加入新的方法，因此我們修改方法內容加入以參數的方式讓年齡依我們想要的年份更動</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;vue-app&quot;</span>&gt;</span><br><span class="line">        &lt;h1&gt;Events&lt;/h1&gt;</span><br><span class="line">        &lt;button v-on:click=<span class="string">&quot;add(1)&quot;</span>&gt;Add a Year&lt;/button&gt;</span><br><span class="line">        &lt;button v-on:click=<span class="string">&quot;substract(1)&quot;</span>&gt;Subtract a Year&lt;/button&gt;</span><br><span class="line">        &lt;button v-on:dblclick=<span class="string">&quot;add(10)&quot;</span>&gt;Add a Year&lt;/button&gt;</span><br><span class="line">        &lt;button v-on:dblclick=<span class="string">&quot;substract(10)&quot;</span>&gt;Subtract a Year&lt;/button&gt;</span><br><span class="line">        &lt;p&gt;My age is &#123;&#123;age&#125;&#125;&lt;/p&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el: <span class="string">&#x27;#vue-app&#x27;</span>,</span><br><span class="line">    data: &#123;</span><br><span class="line">        age: <span class="number">25</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        add: function (inc) &#123;</span><br><span class="line">            <span class="keyword">this</span>.age += inc;</span><br><span class="line">        &#125;,</span><br><span class="line">        substract: function (dec) &#123;</span><br><span class="line">            <span class="keyword">this</span>.age -= dec;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="v-on-mousemove"><a href="#v-on-mousemove" class="headerlink" title="v-on:mousemove"></a>v-on:mousemove</h2><ul><li>可以使用mouse相關的event屬性</li><li>這邊的範例使用offsetX,Y用來取的框內的座標</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;vue-app&quot;</span> <span class="attr">v-on:mousemove</span>=<span class="string">&quot;updateXY&quot;</span>&gt;</span>&#123;&#123;x&#125;&#125;,&#123;&#123;y&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el: <span class="string">&#x27;#vue-app&#x27;</span>,</span><br><span class="line">    data: &#123;</span><br><span class="line">        x: <span class="number">0</span>,</span><br><span class="line">        y: <span class="number">0</span></span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        updateXY: <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.x = event.offsetX;</span><br><span class="line">            <span class="built_in">this</span>.y = event.offsetY;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>當<code>console.log(event)</code>可以看到所以mouse相關的屬性可以使用<br><img src="https://i.imgur.com/3lB9wVQ.png"></p><p>輸出滑鼠所在位置座標<br><img src="https://i.imgur.com/pSFM4R2.png"></p><h1 id="Event-Modifiers"><a href="#Event-Modifiers" class="headerlink" title="Event Modifiers"></a>Event Modifiers</h1><p><a href="https://vuejs.org/v2/guide/events.html#Event-Modifiers">官方文件參考</a></p><p><img src="https://i.imgur.com/X1A1HL1.png"></p><h2 id="once"><a href="#once" class="headerlink" title="once"></a>once</h2><ul><li>讓這邊的點擊事件只能觸發一次</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;vue-app&quot;</span>&gt;</span><br><span class="line">        &lt;h1&gt;Events&lt;/h1&gt;</span><br><span class="line">        &lt;button v-on:click.once=<span class="string">&quot;add(1)&quot;</span>&gt;Add a Year&lt;/button&gt;</span><br><span class="line">        &lt;p&gt;My age is:&#123;&#123;age&#125;&#125;&lt;/p&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el: <span class="string">&#x27;#vue-app&#x27;</span>,</span><br><span class="line">    data: &#123;</span><br><span class="line">        age: <span class="number">25</span></span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        add: <span class="function"><span class="keyword">function</span> (<span class="params">inc</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.age += inc;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>點擊按鈕上升到26後就不會再觸發事件<br><img src="https://i.imgur.com/V7lvcr6.png"></p><h2 id="prevent"><a href="#prevent" class="headerlink" title="prevent"></a>prevent</h2><ul><li>避免預設行為發動</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;vue-app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Events<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click.once</span>=<span class="string">&quot;add(1)&quot;</span>&gt;</span>Add a Year<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>My age is:&#123;&#123;age&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">v-on:click</span>=<span class="string">&quot;click&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://google.com&quot;</span>&gt;</span>google<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el: <span class="string">&#x27;#vue-app&#x27;</span>,</span><br><span class="line">    data: &#123;</span><br><span class="line">        age: <span class="number">25</span></span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        add: <span class="function"><span class="keyword">function</span> (<span class="params">inc</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.age += inc;</span><br><span class="line">        &#125;,</span><br><span class="line">        click: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            alert(<span class="string">&quot;It&#x27;s been clicked!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>當使用click點擊事件在a tag內部觸發順序如下:</li></ul><ol><li>觸發click事件，警告跳出It’s been clicked!</li><li>a tag的預設行為，事件網頁跳轉會發生</li></ol><ul><li>所以想要避免預設行為的發生可以使用prevent，頁面就不會跳轉到外部頁面搂!</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">v-on:click.prevent</span>=<span class="string">&quot;click&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://google.com&quot;</span>&gt;</span>google<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="Keyboard-Events"><a href="#Keyboard-Events" class="headerlink" title="Keyboard Events"></a>Keyboard Events</h1><p><a href="https://vuejs.org/v2/guide/events.html#Key-Codes">官方文件參考</a></p><p><img src="https://i.imgur.com/kreSfXZ.png"></p><h2 id="keyup"><a href="#keyup" class="headerlink" title="keyup"></a>keyup</h2><ul><li>當input被輸入鍵盤值時觸發事件內部的函式</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;vue-app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Keyboard Events<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>Name:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-on:keyup</span>=<span class="string">&quot;logName&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>Age:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-on:keyup</span>=<span class="string">&quot;logAge&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el: <span class="string">&#x27;#vue-app&#x27;</span>,</span><br><span class="line">    data: &#123;&#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        logName: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&quot;you entered your name&quot;</span>);</span><br><span class="line">        &#125;,</span><br><span class="line">        logAge: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&quot;you entered your age&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>印出結果<br><img src="https://i.imgur.com/ZCV1Jou.png"></p><h2 id="enter"><a href="#enter" class="headerlink" title="enter"></a>enter</h2><p>當不需要每次輸入鍵盤值都觸發函式，可以使用enter，只有輸入鍵盤值enter時才會觸發函式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;vue-app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Keyboard Events<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>Name:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-on:keyup.enter</span>=<span class="string">&quot;logName&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>Age:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-on:keyup.enter</span>=<span class="string">&quot;logAge&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>必須輸入鍵盤值enter才會有觸發函式，甚至當input為空只輸入鍵盤值enter也會觸發函式<br><img src="https://i.imgur.com/vfPwOpa.png"></p><h2 id="alt"><a href="#alt" class="headerlink" title="alt"></a>alt</h2><p>使用方法跟enter一樣，但是需要搭配enter使用，必須按住alt + enter才會觸發函式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-on:keyup.alt.enter</span>=<span class="string">&quot;logName&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="Two-Way-Data-Binding"><a href="#Two-Way-Data-Binding" class="headerlink" title="Two-Way Data Binding"></a>Two-Way Data Binding</h1><h2 id="v-model"><a href="#v-model" class="headerlink" title="v-model"></a>v-model</h2><p>使用此directive可以把input的內容輸入到:</p><ol><li>data內部對應的name,age</li><li>呈現到DOM上</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;vue-app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Keyboard Events<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>Name:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;name&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>Age:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;age&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;age&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el: <span class="string">&#x27;#vue-app&#x27;</span>,</span><br><span class="line">    data: &#123;</span><br><span class="line">        name: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        age: <span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        logName: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&quot;you entered your name&quot;</span>);</span><br><span class="line">        &#125;,</span><br><span class="line">        logAge: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&quot;you entered your age&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>輸出結果<br><img src="https://i.imgur.com/u2zjwvm.gif"></p><h1 id="Computed-Properties"><a href="#Computed-Properties" class="headerlink" title="Computed Properties"></a>Computed Properties</h1><ul><li>可以辨識正在使用的函式(methods無法斷判)</li><li>只會跑當下需要跑的資料</li><li>大多數時候比使用methods更有效率</li></ul><h2 id="範例-1"><a href="#範例-1" class="headerlink" title="範例"></a>範例</h2><p><img src="https://i.imgur.com/OOwnMA3.png"></p><p>想要連動，當按下按鈕Add a A時，數字會連動變化<br>A - 1<br>Age + A = 21</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;vue-app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Computed Properties<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;a++&quot;</span>&gt;</span>Add a A<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;b++&quot;</span>&gt;</span>Add a B<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>A - &#123;&#123;a&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>B - &#123;&#123;b&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Age + A = &#123;&#123;addToA()&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Age + B = &#123;&#123;addToB()&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>這邊使用methods呈現</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el: <span class="string">&#x27;#vue-app&#x27;</span>,</span><br><span class="line">    data: &#123;</span><br><span class="line">        age: <span class="number">20</span>,</span><br><span class="line">        a: <span class="number">0</span>,</span><br><span class="line">        b: <span class="number">0</span></span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        addToA: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&quot;addToA&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>.a + <span class="built_in">this</span>.age;</span><br><span class="line">        &#125;,</span><br><span class="line">        addToB: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&quot;addToB&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>.b + <span class="built_in">this</span>.age;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>但這時候會發現，雖然我只按了按鈕A卻兩個函式都觸發了</p><p><img src="https://i.imgur.com/Ngq3nB7.png"></p><p>因此我們可以使用computed這個property，把函式包起來，這樣一來Vue.js就會辨識正在使用的函式是哪一個瞜!</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el: <span class="string">&#x27;#vue-app&#x27;</span>,</span><br><span class="line">    data: &#123;</span><br><span class="line">        age: <span class="number">20</span>,</span><br><span class="line">        a: <span class="number">0</span>,</span><br><span class="line">        b: <span class="number">0</span></span><br><span class="line">    &#125;,</span><br><span class="line">    computed: &#123;</span><br><span class="line">        addToA: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&quot;addToA&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>.a + <span class="built_in">this</span>.age;</span><br><span class="line">        &#125;,</span><br><span class="line">        addToB: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&quot;addToB&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>.b + <span class="built_in">this</span>.age;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/6ubsAsj.png"></p><h1 id="Dynamic-CSS-Classes"><a href="#Dynamic-CSS-Classes" class="headerlink" title="Dynamic CSS Classes"></a>Dynamic CSS Classes</h1><h2 id="v-bind-class-簡易介紹版"><a href="#v-bind-class-簡易介紹版" class="headerlink" title="v-bind:class(簡易介紹版)"></a>v-bind:class(簡易介紹版)</h2><p>為了動態的處理CSS class</p><p><code>v-bind:class=&quot;&#123;class名稱 : data內部資料也就是ture/false&#125;&quot;</code></p><p>這邊範例使用點擊事件:</p><ol><li><p>當點擊div時會加上class avaliable</p></li><li><p>再次點擊div時會移除class avaliable</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;vue-app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Dynamic CSS<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Example 1<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-on:click</span>=<span class="string">&quot;avaliable = !avaliable&quot;</span> <span class="attr">v-bind:class</span>=<span class="string">&quot;&#123;avaliable:avaliable&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>Ryu<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el: <span class="string">&#x27;#vue-app&#x27;</span>,</span><br><span class="line">    data: &#123;</span><br><span class="line">        avaliable: <span class="literal">true</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>簡單的CSS</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: red;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.avaliable</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: green;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.nearby</span> <span class="selector-tag">span</span>:after &#123;</span><br><span class="line">    content: <span class="string">&quot;nearby&quot;</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>這樣使用就可以開關class搂!</p><p><img src="https://i.imgur.com/bFbGv6H.gif"></p><h2 id="v-bind-class-真實使用版"><a href="#v-bind-class-真實使用版" class="headerlink" title="v-bind:class(真實使用版)"></a>v-bind:class(真實使用版)</h2><p>為了避免寫死在html內的template，真實專案中使用的方式會是能夠在JS檔案中做靈活修改的:</p><ul><li>使用呼叫函式的方式<code>&lt;div v-bind:class=&quot;compClasses&quot;&gt;</code></li><li>並在JS程式碼中輸入在computed內部</li><li>compClasses 會返回class所需要的內容，需要修改的話也在這邊執行</li><li>不需要寫死在html內的templat搂!</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;vue-app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Dynamic CSS<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Example 2<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;nearby = !nearby&quot;</span>&gt;</span>Toggle nearby<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;avaliable = !avaliable&quot;</span>&gt;</span>Toggle avaliable<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-bind:class</span>=<span class="string">&quot;compClasses&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>Ryu<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el: <span class="string">&#x27;#vue-app&#x27;</span>,</span><br><span class="line">    data: &#123;</span><br><span class="line">        avaliable: <span class="literal">false</span>,</span><br><span class="line">        nearby: <span class="literal">false</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    computed: &#123;</span><br><span class="line">        compClasses: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> &#123;</span><br><span class="line">                avaliable: <span class="built_in">this</span>.avaliable,</span><br><span class="line">                nearby: <span class="built_in">this</span>.nearby</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>簡易CSS</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: red;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.avaliable</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: green;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.nearby</span> <span class="selector-tag">span</span>:after &#123;</span><br><span class="line">    content: <span class="string">&quot;nearby&quot;</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>印出結果<br><img src="https://i.imgur.com/YACJVvA.gif"></p><h1 id="Conditionals"><a href="#Conditionals" class="headerlink" title="Conditionals"></a>Conditionals</h1><h2 id="v-if"><a href="#v-if" class="headerlink" title="v-if"></a>v-if</h2><p>當<code>v-if=&quot;內容&quot;</code>，內容處布林值為true時會顯示內容，false則否</p><p>使用<code>v-on:click=&quot;error = !error&quot;</code>達到開關的效果</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;vue-app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Conditionals<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;error = !error&quot;</span>&gt;</span>Toggle Error<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;sucess = !sucess&quot;</span>&gt;</span>Toggle Sucess<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-if</span>=<span class="string">&quot;error&quot;</span>&gt;</span>There has been an error<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el: <span class="string">&#x27;#vue-app&#x27;</span>,</span><br><span class="line">    data: &#123;</span><br><span class="line">        error: <span class="literal">false</span>,</span><br><span class="line">        sucess: <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>印出結果，當點擊按鈕時下方p tag內文字會出現<br><img src="https://i.imgur.com/1L73zlW.png"></p><h2 id="v-else-if"><a href="#v-else-if" class="headerlink" title="v-else-if"></a>v-else-if</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">v-if</span>=<span class="string">&quot;error&quot;</span>&gt;</span>There has been an error<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">v-else-if</span>=<span class="string">&quot;sucess&quot;</span>&gt;</span>There has been an sucess<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>當出現v-if以及v-else-if時，只要v-if的狀態是true，那麼就不會顯示else-if的部分跟JS的判斷式一樣</p><h2 id="v-show"><a href="#v-show" class="headerlink" title="v-show"></a>v-show</h2><p>做的事情跟v-if幾乎一樣但是差別在於:</p><p>當內容布林值顯示為false時</p><ul><li>v-if<br>會把元素完全移除掉</li></ul><p><img src="https://i.imgur.com/DPGj6Ut.png"></p><ul><li>v-show<br>只會呈現display:none</li></ul><p><img src="https://i.imgur.com/3WNQH7C.png"></p><h1 id="Looping-with-v-for"><a href="#Looping-with-v-for" class="headerlink" title="Looping with v-for"></a>Looping with v-for</h1><h2 id="陣列"><a href="#陣列" class="headerlink" title="陣列"></a>陣列</h2><p>逐一印出data內容，範例以ul表單為例:</p><p><code>v-for=&quot;chracter in characters&quot;</code></p><ul><li>這個部分的chracter可以名稱自訂</li><li>characters這個部分就需要對照data內部</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;vue-app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Looping through lists<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;chracter in characters&quot;</span>&gt;</span>&#123;&#123;chracter&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el: <span class="string">&#x27;#vue-app&#x27;</span>,</span><br><span class="line">    data: &#123;</span><br><span class="line">        characters: [<span class="string">&#x27;Mario&#x27;</span>, <span class="string">&#x27;Luigi&#x27;</span>, <span class="string">&#x27;Yoshi&#x27;</span>, <span class="string">&#x27;Bowser&#x27;</span>]</span><br></pre></td></tr></table></figure><p>印出結果<br><img src="https://i.imgur.com/NmkvMCC.png"></p><h2 id="物件"><a href="#物件" class="headerlink" title="物件"></a>物件</h2><p>可以使用 (.)的方式去取得物件的屬性</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;ninja in ninjas&quot;</span>&gt;</span></span><br><span class="line">                &#123;&#123;ninja.name&#125;&#125; - &#123;&#123;ninja.age&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el: <span class="string">&#x27;#vue-app&#x27;</span>,</span><br><span class="line">    data: &#123;</span><br><span class="line">        ninjas: [&#123;</span><br><span class="line">                name: <span class="string">&#x27;Ryu&#x27;</span>,</span><br><span class="line">                age: <span class="number">25</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                name: <span class="string">&#x27;Yoshi&#x27;</span>,</span><br><span class="line">                age: <span class="number">35</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                name: <span class="string">&#x27;Ken&#x27;</span>,</span><br><span class="line">                age: <span class="number">55</span></span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>印出結果<br><img src="https://i.imgur.com/y6FfHFH.png"></p><h2 id="輸出index"><a href="#輸出index" class="headerlink" title="輸出index"></a>輸出index</h2><p>把index嵌入template中即可</p><p>使用在陣列或是物件的<code>v-for</code>都是可行的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(chracter, index) in characters</span><br><span class="line">(ninja, index) in ninjas</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(chracter, index) in characters&quot;</span>&gt;</span>&#123;&#123;index&#125;&#125; . &#123;&#123;chracter&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(ninja, index) in ninjas&quot;</span>&gt;</span></span><br><span class="line">                &#123;&#123;index&#125;&#125; . &#123;&#123;ninja.name&#125;&#125; - &#123;&#123;ninja.age&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><p>印出結果<br><img src="https://i.imgur.com/4g2N7Zv.png"></p><h2 id="使用li以外的容器包裹住v-for的內容"><a href="#使用li以外的容器包裹住v-for的內容" class="headerlink" title="使用li以外的容器包裹住v-for的內容"></a>使用li以外的容器包裹住v-for的內容</h2><h3 id="用div包裹住h3-p"><a href="#用div包裹住h3-p" class="headerlink" title="用div包裹住h3,p"></a>用div包裹住h3,p</h3><p>使用div一樣可以做出li一樣的效果</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-for</span>=<span class="string">&quot;(ninja, index) in ninjas&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h3</span>&gt;</span>&#123;&#123;index&#125;&#125;. &#123;&#123;ninja.name&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;ninja.age&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>印出結果<br><img src="https://i.imgur.com/IGhcAv5.png"></p><h3 id="如果只想要內容物的h3-p-tag"><a href="#如果只想要內容物的h3-p-tag" class="headerlink" title="如果只想要內容物的h3,p tag"></a>如果只想要內容物的h3,p tag</h3><p>可以改用template tag就不會輸出到DOM上面，而只有包在裡面的內容會被輸出</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">v-for</span>=<span class="string">&quot;(ninja, index) in ninjas&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h3</span>&gt;</span>&#123;&#123;index&#125;&#125;. &#123;&#123;ninja.name&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;ninja.age&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><p>印出結果<br><img src="https://i.imgur.com/RMsiKQL.png"></p><h2 id="直接印出key-value而不用透過"><a href="#直接印出key-value而不用透過" class="headerlink" title="直接印出key,value而不用透過(.)"></a>直接印出key,value而不用透過(.)</h2><ol><li>第一次的v-for就正常發揮</li><li>第二次的v-for則是印出每一個ninja的key,value</li><li>把第二次的結果呈現在DOM上</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">v-for</span>=<span class="string">&quot;ninja in ninjas&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-for</span>=<span class="string">&quot;(val,key) in ninja&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;key&#125;&#125; - &#123;&#123;val&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><p>印出結果所有的 key-value pair<br><img src="https://i.imgur.com/Mzus47P.png"></p><h1 id="Simple-Punchbag-Game"><a href="#Simple-Punchbag-Game" class="headerlink" title="Simple Punchbag Game"></a>Simple Punchbag Game</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Vue-JS-2-Tutorial&quot;&gt;&lt;a href=&quot;#Vue-JS-2-Tutorial&quot; class=&quot;headerlink&quot; title=&quot;Vue JS 2 Tutorial&quot;&gt;&lt;/a&gt;Vue JS 2 Tutorial&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&quot;</summary>
      
    
    
    
    <category term="Vue2" scheme="http://example.com/categories/Vue2/"/>
    
    
    <category term="Vue" scheme="http://example.com/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>JS-OOP Crash Course (ES5 &amp; ES6)</title>
    <link href="http://example.com/2021/03/22/JS-OOP%20Crash%20Course%20(ES5%20&amp;%20ES6)/"/>
    <id>http://example.com/2021/03/22/JS-OOP%20Crash%20Course%20(ES5%20&amp;%20ES6)/</id>
    <published>2021-03-22T11:23:44.742Z</published>
    <updated>2021-03-22T11:25:16.619Z</updated>
    
    <content type="html"><![CDATA[<h1 id="JavaScript-OOP-Crash-Course-ES5-amp-ES6"><a href="#JavaScript-OOP-Crash-Course-ES5-amp-ES6" class="headerlink" title="JavaScript OOP Crash Course (ES5 &amp; ES6)"></a>JavaScript OOP Crash Course (ES5 &amp; ES6)</h1><hr><h2 id="tags-Javascript-relate"><a href="#tags-Javascript-relate" class="headerlink" title="tags: Javascript relate"></a>tags: Javascript relate</h2><h6 id="tags-Javascript"><a href="#tags-Javascript" class="headerlink" title="tags: Javascript"></a>tags: <code>Javascript</code></h6><p>我們先來解釋一下”<strong>物件</strong>“(object)</p><p>基本上就是一個<strong>物品</strong>，車子、人、房子等等。</p><p>其實”<strong>物件</strong>“就是用程式碼在電腦裡表達出： “這是個物品”，這樣的概念。</p><h2 id="物件的構成"><a href="#物件的構成" class="headerlink" title="物件的構成:"></a>物件的構成:</h2><ul><li>屬性(property) 這就好比車子的廠牌 大小 人的姓名年齡等等各種資訊</li><li>方法(method) 就像是物件的運行方式，車子的發動、煞車，人的吃飯睡覺行走等等</li></ul><p>用一個”物件”來形容人，上方的資料是這個人的屬性，下方的function是方法<br><img src="https://i.imgur.com/WvnsOYh.png"></p><h2 id="基本結構語法-basic-literal"><a href="#基本結構語法-basic-literal" class="headerlink" title="基本結構語法(basic literal)"></a>基本結構語法(basic literal)</h2><p>下方的程式碼解釋了應用屬性(property)的用法以及產生新的object的用法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> s1 = <span class="string">&#x27;helloaaa&#x27;</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> (s1));</span><br><span class="line"><span class="built_in">console</span>.log(s1.toUpperCase());</span><br><span class="line"></span><br><span class="line"><span class="comment">// 這邊的 s 用typeof出來會顯示字串不是物件卻可以像object一樣使用屬性</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> s2 = <span class="keyword">new</span> <span class="built_in">String</span>(<span class="string">&#x27;hello&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> (s2));</span><br><span class="line"></span><br><span class="line"><span class="comment">//不過同時也可以直接把string這個屬性直接賦予他變成物件</span></span><br></pre></td></tr></table></figure><p>window是所有的物件的父母層所以基本上在撰寫的時候可以省略</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="built_in">window</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">window</span>.alert(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">alert(<span class="number">1</span>);<span class="comment">//同樣可以執行跟上方一樣的結果</span></span><br></pre></td></tr></table></figure><p>下方的內容是一個object (.)後面接一個 property</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(navigator.appVersion);</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><p>下方我們舉些例子說明:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> book1 = &#123;</span><br><span class="line">    title: <span class="string">&#x27;Bool one&#x27;</span>,</span><br><span class="line">    author: <span class="string">&quot;John Doe&quot;</span>,</span><br><span class="line">    year: <span class="string">&#x27;2013&#x27;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(book1);</span><br><span class="line"></span><br><span class="line"><span class="comment">//結果如下</span></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&#123;title: &quot;Bool one&quot;, author: &quot;John Doe&quot;, year: &quot;2013&quot;&#125;</span></span><br><span class="line"><span class="comment">author: &quot;John Doe&quot;</span></span><br><span class="line"><span class="comment">title: &quot;Bool one&quot;</span></span><br><span class="line"><span class="comment">year: &quot;2013&quot;</span></span><br><span class="line"><span class="comment">__proto__: Object </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>如果我們想要取得object裡面的key可以使用<code>Object.keys</code>:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.keys(book2));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 這邊會印出這個object的property像是[&quot;title&quot;, &quot;author&quot;, &quot;year&quot;, &quot;getSUmmary&quot;]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>如果我們想要取得object裡面的值可以使用<code>Object.values</code>:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.values(book2));</span><br><span class="line"></span><br><span class="line"><span class="comment">//會印出含有book2 values 的 array</span></span><br></pre></td></tr></table></figure><p>如果我們想要使用其中的屬性(property)假設我們想要使用title:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(book1.title);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 會印出結果  Book one</span></span><br></pre></td></tr></table></figure><h2 id="物件實字-Object-Literals"><a href="#物件實字-Object-Literals" class="headerlink" title="物件實字 (Object Literals)"></a>物件實字 (Object Literals)</h2><p>物件實字的語法重點：</p><ul><li>會用大括號表示。</li><li>裡面的屬性 (Properties) 用名值對 (name-value pairs) 表示。ex.(title: ‘Book one’,)</li><li>多個屬性以逗號 (comma) 分隔。</li><li>宣告完後，還是可以再增加 Properties 進去。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> book1 = &#123;</span><br><span class="line">    title: <span class="string">&#x27;Book one&#x27;</span>,</span><br><span class="line">    author: <span class="string">&quot;John Doe&quot;</span>,</span><br><span class="line">    year: <span class="string">&#x27;2013&#x27;</span>,</span><br><span class="line">    getSUmmary: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;.title&#125;</span> was written by </span></span><br><span class="line"><span class="string">        <span class="subst">$&#123;<span class="built_in">this</span>.author&#125;</span> in <span class="subst">$&#123;<span class="built_in">this</span>.year&#125;</span>`</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(book1.getSUmmary());</span><br></pre></td></tr></table></figure><h2 id="建構子-constructor"><a href="#建構子-constructor" class="headerlink" title="建構子(constructor)"></a>建構子(constructor)</h2><p>用來建構很大量內容的時候可以使用就不用重複寫很多地方可以建構起來重複使用</p><p>上方的function就是建構子的部分，下面是實體化(Instatiate)建構子使用物件，所以它會印出上方建構子的內容:</p><p><img src="https://i.imgur.com/o2xs5CY.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Constructor</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Book</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;Book Initialized..&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// Instatiate an Object</span></span><br><span class="line"><span class="keyword">const</span> book1 = <span class="keyword">new</span> Book();</span><br><span class="line"><span class="keyword">const</span> book2 = <span class="keyword">new</span> Book();</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(book1.title);</span><br><span class="line"><span class="comment">//這邊一樣可以使用這個來取的它的title &quot;Book One&quot;</span></span><br></pre></td></tr></table></figure><p>如果我們直接輸入:<br>會得到<br><img src="https://i.imgur.com/hqtZbmQ.png"></p><p><img src="https://i.imgur.com/kzLJ5sL.png"></p><p>就不需要再重複寫一次Book的內容以及它的function因為已經建構在上面了</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(book1);</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(book2.getSUmmary());</span><br></pre></td></tr></table></figure><p>這個部分在上面建構子裡面寫入function這樣之後只要使用<code>console.log(book2.getSUmmary());</code>就可以呼叫了不需要重複寫入</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Book</span>(<span class="params">title, author, year</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.title = title;</span><br><span class="line">    <span class="built_in">this</span>.author = author;</span><br><span class="line">    <span class="built_in">this</span>.year = year;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.getSUmmary = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;<span class="built_in">this</span>.title&#125;</span> was written by </span></span><br><span class="line"><span class="string">        <span class="subst">$&#123;<span class="built_in">this</span>.author&#125;</span> in <span class="subst">$&#123;<span class="built_in">this</span>.year&#125;</span>`</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="原型-Prototypes"><a href="#原型-Prototypes" class="headerlink" title="原型(Prototypes)"></a>原型(Prototypes)</h2><p>另一種建構方法(methods)的方式是使用<code>prototype</code></p><p>把它額外拉出來做prototype這樣一樣可以用剛剛一樣的方式取得一樣的效果<code>console.log(book2.getSUmmary());</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//getSummary</span></span><br><span class="line">Book.prototype.getSUmmary = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;<span class="built_in">this</span>.title&#125;</span> was written by </span></span><br><span class="line"><span class="string">        <span class="subst">$&#123;<span class="built_in">this</span>.author&#125;</span> in <span class="subst">$&#123;<span class="built_in">this</span>.year&#125;</span>`</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>這個時候我們在印出book2會發現function已經沒有在裡面了，而是會存在下方prototype裡面，會這樣做的原因是有些時候方法(method)不一定每個物件都要使用就可以這樣把他拉出來需要得再去取用它就好</p><p><img src="https://i.imgur.com/Dioa6SV.png"></p><p>下個範例使用了兩個元素來表達想要獲取得書本歲數</p><ul><li>new Date()取的現在時間</li><li>getFullYear()取得現在年分</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//getAge</span></span><br><span class="line">Book.prototype.getAge = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> years = <span class="keyword">new</span> <span class="built_in">Date</span>().getFullYear() - <span class="built_in">this</span>.year;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;<span class="built_in">this</span>.title&#125;</span> is <span class="subst">$&#123;years&#125;</span> years old`</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下方會解釋如何操作內容的資料</p><p>我們想要修改裡面的時間，所以設定一個新的年分並且下方設定reviesed為true</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Revise / Change Year</span></span><br><span class="line">Book.prototype.revise = <span class="function"><span class="keyword">function</span> (<span class="params">newYear</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.year = newYear;</span><br><span class="line">    <span class="built_in">this</span>.revised = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(book2);</span><br><span class="line">book2.revise(<span class="string">&#x27;2018&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(book2);</span><br></pre></td></tr></table></figure><p>可以得出這個結果</p><p><img src="https://i.imgur.com/BOhPzJ9.png"></p><h2 id="繼承-Inheritance"><a href="#繼承-Inheritance" class="headerlink" title="繼承(Inheritance)"></a>繼承(Inheritance)</h2><p>下方提到繼承這個特性:</p><p>創造一個Magazine來繼承Book的屬性之外還可以添加屬性使用<code>call</code>這個方法來達成</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Magazine Constructor</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Magazine</span>(<span class="params">title, author, year, month</span>) </span>&#123;</span><br><span class="line">    Book.call(<span class="built_in">this</span>, title, author, year);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.month = month;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Instantiate Magazine Object</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> mag1 = <span class="keyword">new</span> Magazine(<span class="string">&#x27;Mag One&#x27;</span>, <span class="string">&#x27;John Doe&#x27;</span>, <span class="string">&#x27;2018&#x27;</span>, <span class="string">&#x27;Jan&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(mag1);</span><br></pre></td></tr></table></figure><h3 id="Prototype-methods-Inheritance"><a href="#Prototype-methods-Inheritance" class="headerlink" title="Prototype methods Inheritance"></a>Prototype methods Inheritance</h3><p>prototype的方法卻不能直接繼承所以使用<code>create</code>這個屬性讓Magazine也可以繼承prototype<strong>所有</strong>的方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Magazine.prototype = <span class="built_in">Object</span>.create(Book.prototype);</span><br></pre></td></tr></table></figure><p>因為Magazine是繼承上面Book的屬性所以在constructor的部分還是會顯示Book</p><p><img src="https://i.imgur.com/nDROuBV.png"></p><p>如果想要修改的話可以使用constructor這個使用來修改:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Use Magazine as Constructor instead of Book</span></span><br><span class="line"></span><br><span class="line">Magazine.prototype.constructor = Magazine;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/tmWKXpa.png"></p><h2 id="創造-Object-create"><a href="#創造-Object-create" class="headerlink" title="創造(Object_create)"></a>創造(Object_create)</h2><p>一開始使用一個const包住兩個方法，接下來使用<code>create</code>來創建新的物件來包含這兩個方法並且下方用新增的方式來把title,author,year加進去新的object book1裡面</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Object Of Protos</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> bookProtos = &#123;</span><br><span class="line">    getSummary: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;<span class="built_in">this</span>.title&#125;</span> was written by </span></span><br><span class="line"><span class="string">        <span class="subst">$&#123;<span class="built_in">this</span>.author&#125;</span> in <span class="subst">$&#123;<span class="built_in">this</span>.year&#125;</span>`</span>;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    getAge: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">const</span> years = <span class="keyword">new</span> <span class="built_in">Date</span>().getFullYear() - <span class="built_in">this</span>.year;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;<span class="built_in">this</span>.title&#125;</span> is <span class="subst">$&#123;years&#125;</span> years old`</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Create Object</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> book1 = <span class="built_in">Object</span>.create(bookProtos);</span><br><span class="line">book1.title = <span class="string">&#x27;Book One&#x27;</span>;</span><br><span class="line">book1.author = <span class="string">&#x27;John Doe&#x27;</span>;</span><br><span class="line">book1.year = <span class="string">&#x27;2013&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(book1);</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/jzu1G7R.png"></p><p>下面這個寫法跟上面出來的結果是一樣的只是換個方式寫</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> book1 = <span class="built_in">Object</span>.create(bookProtos, &#123;</span><br><span class="line">    title: &#123;<span class="attr">value</span>: <span class="string">&#x27;Book One&#x27;</span>&#125;,</span><br><span class="line">    author: &#123;<span class="attr">value</span>: <span class="string">&#x27;John Doe&#x27;</span>&#125;,</span><br><span class="line">    year: &#123;<span class="attr">value</span>: <span class="string">&#x27;2013&#x27;</span>&#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(book1);</span><br></pre></td></tr></table></figure><hr><h2 id="ES6的東西開始"><a href="#ES6的東西開始" class="headerlink" title="ES6的東西開始"></a>ES6的東西開始</h2><h3 id="class"><a href="#class" class="headerlink" title="class"></a>class</h3><p>用法跟上面的建構子很像在做一樣的事情，也一樣需要建構物件以及實體化物件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Book</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">title, author, year</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.title = title;</span><br><span class="line">        <span class="built_in">this</span>.author = author;</span><br><span class="line">        <span class="built_in">this</span>.year = year;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Instantiate Object</span></span><br><span class="line"><span class="keyword">const</span> book1 = <span class="keyword">new</span> Book(<span class="string">&#x27;Book One&#x27;</span>, <span class="string">&#x27;John Doe&#x27;</span>, <span class="string">&#x27;2013&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(book1);</span><br></pre></td></tr></table></figure><p>接下來放入方法進去跟前面的寫法差不多，引用跟使用的方式也差不多</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Book</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">title, author, year</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.title = title;</span><br><span class="line">        <span class="built_in">this</span>.author = author;</span><br><span class="line">        <span class="built_in">this</span>.year = year;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">getSummary</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;<span class="built_in">this</span>.title&#125;</span> was written by </span></span><br><span class="line"><span class="string">        <span class="subst">$&#123;<span class="built_in">this</span>.author&#125;</span> in <span class="subst">$&#123;<span class="built_in">this</span>.year&#125;</span>`</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="title">getAge</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> years = <span class="keyword">new</span> <span class="built_in">Date</span>().getFullYear() - <span class="built_in">this</span>.year;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;<span class="built_in">this</span>.title&#125;</span> is <span class="subst">$&#123;years&#125;</span> years old`</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">revise</span>(<span class="params">newYear</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.year = newYear;</span><br><span class="line">        <span class="built_in">this</span>.revised = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Instantiate Object</span></span><br><span class="line"><span class="keyword">const</span> book1 = <span class="keyword">new</span> Book(<span class="string">&#x27;Book One&#x27;</span>, <span class="string">&#x27;John Doe&#x27;</span>, <span class="string">&#x27;2013&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(book1);</span><br><span class="line">book1.revise(<span class="string">&#x27;2018&#x27;</span>);</span><br></pre></td></tr></table></figure><p>輸出的結果如下:</p><p><img src="https://i.imgur.com/78nS8BQ.png"></p><h3 id="靜態語法-static"><a href="#靜態語法-static" class="headerlink" title="靜態語法(static)"></a>靜態語法(static)</h3><p>會寫在class裡面，它的特性是不會被已經實體化的物件呼叫比方說，而是被類別本身(class)直接呼叫</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="function"><span class="title">topBookStore</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;Barnes &amp; Nobles&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//這邊就是實體化的部分所以book1無法呼叫static方法</span></span><br><span class="line">    <span class="keyword">const</span> book1 = <span class="keyword">new</span> Book(<span class="string">&#x27;Book One&#x27;</span>, <span class="string">&#x27;John Doe&#x27;</span>, <span class="string">&#x27;2013&#x27;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//可以這樣子直接使用</span></span><br><span class="line">    <span class="built_in">console</span>.log(Book.topBookStore());</span><br></pre></td></tr></table></figure><h3 id="Subclasses"><a href="#Subclasses" class="headerlink" title="Subclasses"></a>Subclasses</h3><p>這邊很類似上面繼承的概念只是更新語法更簡潔</p><p>使用到<code>extend</code>來繼承Book的物件，然後一樣使用建構子<code>constructor</code>寫入所有的物件內容，之後使用<code>super</code>繼承物件內容，最後放入要新增的內容即可</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Book</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">title, author, year</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.title = title;</span><br><span class="line">        <span class="built_in">this</span>.author = author;</span><br><span class="line">        <span class="built_in">this</span>.year = year;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">getSummary</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;<span class="built_in">this</span>.title&#125;</span> was written by </span></span><br><span class="line"><span class="string">        <span class="subst">$&#123;<span class="built_in">this</span>.author&#125;</span> in <span class="subst">$&#123;<span class="built_in">this</span>.year&#125;</span>`</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Magazine Subclass</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Magazine</span> <span class="keyword">extends</span> <span class="title">Book</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">title, author, year, month</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(title, author, year);</span><br><span class="line">        <span class="built_in">this</span>.month = month;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Instantiate Magazine</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> mag1 = <span class="keyword">new</span> Magazine(<span class="string">&#x27;Mag One&#x27;</span>, <span class="string">&#x27;John Doe&#x27;</span>, <span class="string">&#x27;2018&#x27;</span>, <span class="string">&#x27;Jan&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(mag1.getSummary());</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;JavaScript-OOP-Crash-Course-ES5-amp-ES6&quot;&gt;&lt;a href=&quot;#JavaScript-OOP-Crash-Course-ES5-amp-ES6&quot; class=&quot;headerlink&quot; title=&quot;JavaScript OOP</summary>
      
    
    
    
    <category term="Javascript" scheme="http://example.com/categories/Javascript/"/>
    
    
    <category term="Javascript" scheme="http://example.com/tags/Javascript/"/>
    
  </entry>
  
  <entry>
    <title>JS-JavaScript Higher Order Functions &amp; Arrays (Vanilla JavaScript)</title>
    <link href="http://example.com/2021/03/22/JS-JavaScript%20Higher%20Order%20Functions%20&amp;%20Arrays%20(Vanilla%20JavaScript)/"/>
    <id>http://example.com/2021/03/22/JS-JavaScript%20Higher%20Order%20Functions%20&amp;%20Arrays%20(Vanilla%20JavaScript)/</id>
    <published>2021-03-22T11:21:35.872Z</published>
    <updated>2021-03-22T11:22:30.805Z</updated>
    
    <content type="html"><![CDATA[<h1 id="JavaScript-Higher-Order-Functions-amp-Arrays-Vanilla-JavaScript"><a href="#JavaScript-Higher-Order-Functions-amp-Arrays-Vanilla-JavaScript" class="headerlink" title="JavaScript Higher Order Functions &amp; Arrays (Vanilla JavaScript)"></a>JavaScript Higher Order Functions &amp; Arrays (Vanilla JavaScript)</h1><hr><h2 id="tags-Javascript-relate"><a href="#tags-Javascript-relate" class="headerlink" title="tags: Javascript relate"></a>tags: Javascript relate</h2><h6 id="tags-Javascript"><a href="#tags-Javascript" class="headerlink" title="tags: Javascript"></a>tags: <code>Javascript</code></h6><h1 id="事前準備"><a href="#事前準備" class="headerlink" title="事前準備:"></a>事前準備:</h1><p>待會要處理的資料</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> companies= [</span><br><span class="line">  &#123;<span class="attr">name</span>: <span class="string">&quot;Company One&quot;</span>, <span class="attr">category</span>: <span class="string">&quot;Finance&quot;</span>, <span class="attr">start</span>: <span class="number">1981</span>, <span class="attr">end</span>: <span class="number">2004</span>&#125;,</span><br><span class="line">  &#123;<span class="attr">name</span>: <span class="string">&quot;Company Two&quot;</span>, <span class="attr">category</span>: <span class="string">&quot;Retail&quot;</span>, <span class="attr">start</span>: <span class="number">1992</span>, <span class="attr">end</span>: <span class="number">2008</span>&#125;,</span><br><span class="line">  &#123;<span class="attr">name</span>: <span class="string">&quot;Company Three&quot;</span>, <span class="attr">category</span>: <span class="string">&quot;Auto&quot;</span>, <span class="attr">start</span>: <span class="number">1999</span>, <span class="attr">end</span>: <span class="number">2007</span>&#125;,</span><br><span class="line">  &#123;<span class="attr">name</span>: <span class="string">&quot;Company Four&quot;</span>, <span class="attr">category</span>: <span class="string">&quot;Retail&quot;</span>, <span class="attr">start</span>: <span class="number">1989</span>, <span class="attr">end</span>: <span class="number">2010</span>&#125;,</span><br><span class="line">  &#123;<span class="attr">name</span>: <span class="string">&quot;Company Five&quot;</span>, <span class="attr">category</span>: <span class="string">&quot;Technology&quot;</span>, <span class="attr">start</span>: <span class="number">2009</span>, <span class="attr">end</span>: <span class="number">2014</span>&#125;,</span><br><span class="line">  &#123;<span class="attr">name</span>: <span class="string">&quot;Company Six&quot;</span>, <span class="attr">category</span>: <span class="string">&quot;Finance&quot;</span>, <span class="attr">start</span>: <span class="number">1987</span>, <span class="attr">end</span>: <span class="number">2010</span>&#125;,</span><br><span class="line">  &#123;<span class="attr">name</span>: <span class="string">&quot;Company Seven&quot;</span>, <span class="attr">category</span>: <span class="string">&quot;Auto&quot;</span>, <span class="attr">start</span>: <span class="number">1986</span>, <span class="attr">end</span>: <span class="number">1996</span>&#125;,</span><br><span class="line">  &#123;<span class="attr">name</span>: <span class="string">&quot;Company Eight&quot;</span>, <span class="attr">category</span>: <span class="string">&quot;Technology&quot;</span>, <span class="attr">start</span>: <span class="number">2011</span>, <span class="attr">end</span>: <span class="number">2016</span>&#125;,</span><br><span class="line">  &#123;<span class="attr">name</span>: <span class="string">&quot;Company Nine&quot;</span>, <span class="attr">category</span>: <span class="string">&quot;Retail&quot;</span>, <span class="attr">start</span>: <span class="number">1981</span>, <span class="attr">end</span>: <span class="number">1989</span>&#125;</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> ages = [<span class="number">33</span>, <span class="number">12</span>, <span class="number">20</span>, <span class="number">16</span>, <span class="number">5</span>, <span class="number">54</span>, <span class="number">21</span>, <span class="number">44</span>, <span class="number">61</span>, <span class="number">13</span>, <span class="number">15</span>, <span class="number">45</span>, <span class="number">25</span>, <span class="number">64</span>, <span class="number">32</span>];</span><br></pre></td></tr></table></figure><h1 id="forEach-逐個印出"><a href="#forEach-逐個印出" class="headerlink" title="forEach 逐個印出"></a>forEach 逐個印出</h1><h2 id="使用for作範例"><a href="#使用for作範例" class="headerlink" title="使用for作範例"></a>使用for作範例</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; companies.length; i++) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(companies[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>印出結果:<br><img src="https://i.imgur.com/ebpS8lu.png"></p><h2 id="forEach"><a href="#forEach" class="headerlink" title="forEach"></a>forEach</h2><ul><li>是一個比較好的方法來跑array的迴圈相較於一般的for迴圈並且不會return東西回來</li><li>是個比較優雅的方式處理資料</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//這邊做的印出每一個物件</span></span><br><span class="line">companies.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">company</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(company);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//當然也可以取用裡面的資料</span></span><br><span class="line"></span><br><span class="line">companies.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">company</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(company.name);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>印出結果:<br>跟for跑出來的結果一模一樣，但比較淺顯易懂就是使用了一個forEach方法省去了很多複雜的條件<br><img src="https://i.imgur.com/ebpS8lu.png"></p><p>取用裡面的name資料印出的結果<br><img src="https://i.imgur.com/6NB9sFX.png"></p><h1 id="filter-篩選功能"><a href="#filter-篩選功能" class="headerlink" title="filter 篩選功能"></a>filter 篩選功能</h1><h2 id="練習一"><a href="#練習一" class="headerlink" title="練習一:"></a>練習一:</h2><p>篩選 ages 這個array裡面大於等於21歲的人<br><img src="https://i.imgur.com/YhViXk1.png"></p><h2 id="使用for作範例-1"><a href="#使用for作範例-1" class="headerlink" title="使用for作範例"></a>使用for作範例</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> canDrink = [];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; ages.length; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (ages[i] &gt;= <span class="number">21</span>) &#123;</span><br><span class="line">        canDrink.push(ages[i]); <span class="comment">//使用push把符合條件的人推進去</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(canDrink);</span><br></pre></td></tr></table></figure><p>印出結果:<br><img src="https://i.imgur.com/WgyScBp.png"></p><h2 id="filter"><a href="#filter" class="headerlink" title="filter"></a>filter</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> canDrink = ages.filter(<span class="function"><span class="keyword">function</span> (<span class="params">age</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (age &gt;= <span class="number">21</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(canDrink);</span><br></pre></td></tr></table></figure><p>甚至使用ES6語法的箭頭函式可以更簡潔:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> canDrink = ages.filter(<span class="function"><span class="params">age</span> =&gt;</span> age &gt;= <span class="number">21</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(canDrink);</span><br></pre></td></tr></table></figure><p>印出結果:<br>一樣不需要處理條件式且比較簡潔也不需要而外多使用其他的方法<br><img src="https://i.imgur.com/WgyScBp.png"></p><h2 id="練習二"><a href="#練習二" class="headerlink" title="練習二:"></a>練習二:</h2><p>抓出companies資料裡面含有’Retail內容的物件</p><h2 id="使用ES5的寫法"><a href="#使用ES5的寫法" class="headerlink" title="使用ES5的寫法"></a>使用ES5的寫法</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> retailCompanies = companies.filter(<span class="function"><span class="keyword">function</span> (<span class="params">company</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (company.category === <span class="string">&#x27;Retail&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(retailCompanies);</span><br></pre></td></tr></table></figure><h2 id="ES6箭頭函式的寫法"><a href="#ES6箭頭函式的寫法" class="headerlink" title="ES6箭頭函式的寫法"></a>ES6箭頭函式的寫法</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> retailCompanies = companies.filter(<span class="function"><span class="params">company</span> =&gt;</span> company.category === <span class="string">&#x27;Retail&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(retailCompanies);</span><br></pre></td></tr></table></figure><p>印出結果會一樣:<br><img src="https://i.imgur.com/4M3q9Oj.png"></p><h2 id="練習三"><a href="#練習三" class="headerlink" title="練習三:"></a>練習三:</h2><p>篩選公司成立時間在1980年代</p><p>主要篩選companies 的start區塊作時間上的判斷</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> eightiesCompanies = companies.filter(<span class="function"><span class="params">company</span> =&gt;</span> (company.start &gt;= <span class="number">1980</span> &amp;&amp; company.start &lt; <span class="number">1990</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(eightiesCompanies)</span><br></pre></td></tr></table></figure><p>印出結果:</p><p><img src="https://i.imgur.com/x1PBpe5.png"></p><h2 id="練習四"><a href="#練習四" class="headerlink" title="練習四:"></a>練習四:</h2><p>篩選出所有成立超過或是等於十年的公司</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> lastedTenYears = companies.filter(<span class="function"><span class="params">company</span> =&gt;</span> (company.end - company.start &gt;= <span class="number">10</span>));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(lastedTenYears);</span><br></pre></td></tr></table></figure><p>印出結果:<br><img src="https://i.imgur.com/zuEWelh.png"></p><h1 id="map-印出資料-新的array-並且操作他們"><a href="#map-印出資料-新的array-並且操作他們" class="headerlink" title="map 印出資料(新的array)並且操作他們"></a>map 印出資料(新的array)並且操作他們</h1><p>除了篩選資料之外我們還可以創造新的array從現存的array中<br>並且對新的array做各種操作</p><h2 id="練習一-1"><a href="#練習一-1" class="headerlink" title="練習一:"></a>練習一:</h2><p>把所有的公司名稱取出來並放入一個新的array</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> companyNames = companies.map(<span class="function"><span class="keyword">function</span> (<span class="params">company</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> company.name</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(companyNames);</span><br></pre></td></tr></table></figure><p>印出結果:</p><p>一個全新的array包含了公司名稱<br><img src="https://i.imgur.com/gKHMYRC.png"></p><h2 id="練習二-1"><a href="#練習二-1" class="headerlink" title="練習二:"></a>練習二:</h2><p>可以操作map取得的新array:</p><p>放入公司名稱跟年份組成新的arra</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> testMap = companies.map(<span class="function"><span class="params">company</span> =&gt;</span> <span class="string">`<span class="subst">$&#123;company.name&#125;</span>[<span class="subst">$&#123;company.start&#125;</span> - <span class="subst">$&#123;company.end&#125;</span>]`</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(testMap);</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/CQ5MNjw.png"></p><h2 id="練習三-1"><a href="#練習三-1" class="headerlink" title="練習三:"></a>練習三:</h2><p>對map的新array做數字上面的處理</p><p>把數字開平方</p><p>把數字乘2</p><p>把數字開平方後乘2</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> agesSquare = ages.map(<span class="function"><span class="params">age</span> =&gt;</span> <span class="built_in">Math</span>.sqrt(age));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(agesSquare);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> agesTimesTwo = ages.map(<span class="function"><span class="params">age</span> =&gt;</span> age * <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(agesTimesTwo);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 甚至可以把它們做串接處理</span></span><br><span class="line"><span class="keyword">const</span> agesMap = ages</span><br><span class="line">    .map(<span class="function"><span class="params">age</span> =&gt;</span> <span class="built_in">Math</span>.sqrt(age))</span><br><span class="line">    .map(<span class="function"><span class="params">age</span> =&gt;</span> age * <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(agesMap);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>印出結果:</p><p>開平方<br><img src="https://i.imgur.com/t0Gbuob.png"></p><p>乘2<br><img src="https://i.imgur.com/qTnAnZK.png"></p><p>開平方後乘2<br><img src="https://i.imgur.com/Siwzx2V.png"></p><h1 id="sort"><a href="#sort" class="headerlink" title="sort"></a>sort</h1><p>如果我們不對sort做任何處理的話會這樣安排:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> sortedAges = ages.sort();</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(sortedAges);</span><br></pre></td></tr></table></figure><p>看似是由大到小但是有個小問題在於其實只比較了第一個數字然後再比較第二位所以5竟然排在那麼下面顯然不太合理(對一般使用的情況下)<br><img src="https://i.imgur.com/qXvWpx0.png"></p><h2 id="一般我們會這樣處理sort"><a href="#一般我們會這樣處理sort" class="headerlink" title="一般我們會這樣處理sort:"></a>一般我們會這樣處理sort:</h2><p>讓順序由大排到小</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> sortedAges = ages.sort(<span class="function">(<span class="params">a,b</span>) =&gt;</span> a-b);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(sortedAges);</span><br></pre></td></tr></table></figure><p>由小排到大</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> sortedAges = ages.sort(<span class="function">(<span class="params">a,b</span>) =&gt;</span> b-a);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(sortedAges);</span><br></pre></td></tr></table></figure><h2 id="練習一-2"><a href="#練習一-2" class="headerlink" title="練習一:"></a>練習一:</h2><p>分類公司藉著他們的開始年分 最早排到最晚</p><p>一次比較兩個公司如果a&gt;b 則顯示-1排前面</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> sortedCompanies = companies.sort(<span class="function">(<span class="params">a, b</span>) =&gt;</span> (a.start &gt; b.start ? <span class="number">1</span> : -<span class="number">1</span>));</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(sortedCompanies);</span><br></pre></td></tr></table></figure><p>印出的結果:<br><img src="https://i.imgur.com/5OueGVc.png"></p><h1 id="reduce"><a href="#reduce" class="headerlink" title="reduce"></a>reduce</h1><p>作加總，記得寫法reduce(參數1,參數2){function(){},0}後面的0要記得寫</p><h2 id="練習一-3"><a href="#練習一-3" class="headerlink" title="練習一:"></a>練習一:</h2><p>加總ages所有的數字和</p><h2 id="使用for範例"><a href="#使用for範例" class="headerlink" title="使用for範例"></a>使用for範例</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> ageSum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; ages.length; i++) &#123;</span><br><span class="line">    ageSum += ages[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(ageSum);</span><br></pre></td></tr></table></figure><p>得出加總的數字為:460</p><h2 id="使用reduce"><a href="#使用reduce" class="headerlink" title="使用reduce"></a>使用reduce</h2><h2 id="Es5語法"><a href="#Es5語法" class="headerlink" title="Es5語法:"></a>Es5語法:</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> ageSum = ages.reduce(<span class="function"><span class="keyword">function</span> (<span class="params">total, age</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> total + age;</span><br><span class="line">&#125;, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(ageSum);</span><br></pre></td></tr></table></figure><p>得出加總的數字為:460</p><h2 id="ES6語法"><a href="#ES6語法" class="headerlink" title="ES6語法:"></a>ES6語法:</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> ageSum = ages.reduce(<span class="function">(<span class="params">total, age</span>) =&gt;</span> total + age, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(ageSum);</span><br></pre></td></tr></table></figure><p>得出加總的數字為:460</p><h2 id="練習二-2"><a href="#練習二-2" class="headerlink" title="練習二:"></a>練習二:</h2><p>加總所有公司的存在年分</p><p>把公司的end年份減去start年份就是存在時間並且做加上total就好瞜</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> totalYears = companies.reduce(<span class="function"><span class="keyword">function</span> (<span class="params">total, company</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> total + (company.end - company.start);</span><br><span class="line">&#125;, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">console</span>.log(totalYears);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//使用ES6的簡化寫法</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> totalYears = companies.reduce(<span class="function">(<span class="params">total, company</span>) =&gt;</span></span><br><span class="line">    total + (company.end - company.start), <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(totalYears);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>得出結果: 119</p><h1 id="串接使用全部方法"><a href="#串接使用全部方法" class="headerlink" title="串接使用全部方法"></a>串接使用全部方法</h1><p>不是很實用但是他們可以這樣串接使用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> combined = ages</span><br><span class="line">    .map(<span class="function"><span class="params">age</span> =&gt;</span> age * <span class="number">2</span>)</span><br><span class="line">    .filter(<span class="function"><span class="params">age</span> =&gt;</span> age &gt;= <span class="number">40</span>)</span><br><span class="line">    .sort(<span class="function">(<span class="params">a, b</span>) =&gt;</span> a - b)</span><br><span class="line">    .reduce(<span class="function">(<span class="params">a, b</span>) =&gt;</span> a + b, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(combined);</span><br></pre></td></tr></table></figure><p>由大到小排列:<br><img src="https://i.imgur.com/1zQSVkn.png"></p><p>得到加總結果結果是798</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;JavaScript-Higher-Order-Functions-amp-Arrays-Vanilla-JavaScript&quot;&gt;&lt;a href=&quot;#JavaScript-Higher-Order-Functions-amp-Arrays-Vanilla-Java</summary>
      
    
    
    
    <category term="Javascript" scheme="http://example.com/categories/Javascript/"/>
    
    
    <category term="Javascript" scheme="http://example.com/tags/Javascript/"/>
    
  </entry>
  
  <entry>
    <title>JS-正則表達式 Regular Expression</title>
    <link href="http://example.com/2021/03/22/JS-%E6%AD%A3%E5%89%87%E8%A1%A8%E9%81%94%E5%BC%8F%20Regular%20Expression/"/>
    <id>http://example.com/2021/03/22/JS-%E6%AD%A3%E5%89%87%E8%A1%A8%E9%81%94%E5%BC%8F%20Regular%20Expression/</id>
    <published>2021-03-22T11:21:35.872Z</published>
    <updated>2021-03-22T11:23:11.695Z</updated>
    
    <content type="html"><![CDATA[<h1 id="正則表達式-Regular-Expression"><a href="#正則表達式-Regular-Expression" class="headerlink" title="正則表達式 Regular Expression"></a>正則表達式 Regular Expression</h1><hr><h2 id="tags-Javascript-relate"><a href="#tags-Javascript-relate" class="headerlink" title="tags: Javascript relate"></a>tags: Javascript relate</h2><h6 id="tags-Javascript"><a href="#tags-Javascript" class="headerlink" title="tags: Javascript"></a>tags: <code>Javascript</code></h6><h1 id="JS-與-Regular-Expression"><a href="#JS-與-Regular-Expression" class="headerlink" title="JS 與 Regular Expression"></a>JS 與 Regular Expression</h1><h2 id="01-正則表達式是什麼-JS-中如何使用"><a href="#01-正則表達式是什麼-JS-中如何使用" class="headerlink" title="01 正則表達式是什麼 ? JS 中如何使用 ?"></a>01 正則表達式是什麼 ? JS 中如何使用 ?</h2><ul><li>做字串模式的判斷</li><li>做格式的過濾如電話、email、身分證</li><li>登入資料判讀、擷取</li><li>電子試算表資料擷取</li><li>單據檔案資料擷取</li></ul><h2 id="正則表達式的呈現"><a href="#正則表達式的呈現" class="headerlink" title="正則表達式的呈現:"></a>正則表達式的呈現:</h2><p><img src="https://i.imgur.com/7zh7HJL.png"></p><h1 id="Regular-Expression-學習資源"><a href="#Regular-Expression-學習資源" class="headerlink" title="Regular Expression 學習資源"></a>Regular Expression 學習資源</h1><p><a href="https://regexone.com/">學習網站</a></p><h2 id="Lesson-1-An-Introduction-and-the-ABCs"><a href="#Lesson-1-An-Introduction-and-the-ABCs" class="headerlink" title="Lesson 1: An Introduction, and the ABCs"></a>Lesson 1: An Introduction, and the ABCs</h2><p>輸入符合全部text的pattern:</p><p>三個text都包含了abc</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">TaskText </span><br><span class="line">MatchabcdefgTo be completed</span><br><span class="line">MatchabcdeTo be completed</span><br><span class="line">Matchabc</span><br><span class="line"></span><br><span class="line">input: abc</span><br></pre></td></tr></table></figure><h2 id="Lesson-1½-The-123s"><a href="#Lesson-1½-The-123s" class="headerlink" title="Lesson 1½: The 123s"></a>Lesson 1½: The 123s</h2><p>輸入符合全部text的pattern，因此除了字母會符合，數字也可以:</p><p>三個text都包含123</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">TaskText </span><br><span class="line">Matchabc123xyzTo be completed</span><br><span class="line">Matchdefine &quot;123&quot;To be completed</span><br><span class="line">Matchvar g &#x3D; 123;</span><br><span class="line"></span><br><span class="line">input: 123 &#x2F; \D*123\D*</span><br></pre></td></tr></table></figure><h2 id="Lesson-2-The-Dot-萬用字元"><a href="#Lesson-2-The-Dot-萬用字元" class="headerlink" title="Lesson 2: The Dot(.)萬用字元"></a>Lesson 2: The Dot(.)萬用字元</h2><p>題目要吻合前三個text並且讓最後一個task被跳過，所以使用跳脫字元()在最後一個(.)之前</p><p>wildcard(通用字元)也就是Dot(.)<br>跳脫字元()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">TaskText </span><br><span class="line">Matchcat.Success</span><br><span class="line">Match896.Success</span><br><span class="line">Match?&#x3D;+.Success</span><br><span class="line">Skipabc1</span><br><span class="line"></span><br><span class="line">input: ...\.</span><br></pre></td></tr></table></figure><h2 id="Lesson-3-Matching-specific-characters-符合特定字元"><a href="#Lesson-3-Matching-specific-characters-符合特定字元" class="headerlink" title="Lesson 3: Matching specific characters(符合特定字元)"></a>Lesson 3: Matching specific characters(符合特定字元)</h2><p>[]內部可以放入想要抓取的字元</p><p>前三個task符合後三個跳過:</p><p>使用中括號([])包含的字元會被特別抓取出來除此之外則跳過</p><p>例如[abc]只會抓取符合單一a,b,c沒有其他的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">TaskText </span><br><span class="line">MatchcanSuccess</span><br><span class="line">MatchmanSuccess</span><br><span class="line">MatchfanSuccess</span><br><span class="line">SkipdanTo be completed</span><br><span class="line">SkipranTo be completed</span><br><span class="line">Skippan</span><br><span class="line"></span><br><span class="line">input: [cmf]</span><br></pre></td></tr></table></figure><h2 id="Lesson-4-Excluding-specific-characters-排除特定字元"><a href="#Lesson-4-Excluding-specific-characters-排除特定字元" class="headerlink" title="Lesson 4: Excluding specific characters(排除特定字元)"></a>Lesson 4: Excluding specific characters(排除特定字元)</h2><p>排除特定字元</p><p>[^abc]會符合任何字元除了a,b,c</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">TaskText </span><br><span class="line">MatchhogSuccess</span><br><span class="line">MatchdogSuccess</span><br><span class="line">Skipbog</span><br><span class="line"></span><br><span class="line">input: [^b]og</span><br></pre></td></tr></table></figure><h2 id="Lesson-5-Character-ranges-字元的範圍"><a href="#Lesson-5-Character-ranges-字元的範圍" class="headerlink" title="Lesson 5: Character ranges(字元的範圍)"></a>Lesson 5: Character ranges(字元的範圍)</h2><p>\w代表所有字母數字的集合<br>\W代表非字母數字的集合</p><p>使用中括號[] 以及 (-)代表range<br>使用[A-C]選出前三個符合下三個完全沒有ABC所以被篩掉了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">TaskText </span><br><span class="line">MatchAnaSuccess</span><br><span class="line">MatchBobSuccess</span><br><span class="line">MatchCpcSuccess</span><br><span class="line">SkipaaxTo be completed</span><br><span class="line">SkipbbyTo be completed</span><br><span class="line">Skipccz</span><br><span class="line"></span><br><span class="line">input: [A-C][n-p][a-c]</span><br></pre></td></tr></table></figure><h2 id="Lesson-6-Catching-some-zzz’s-擷取重複的字元"><a href="#Lesson-6-Catching-some-zzz’s-擷取重複的字元" class="headerlink" title="Lesson 6: Catching some zzz’s(擷取重複的字元)"></a>Lesson 6: Catching some zzz’s(擷取重複的字元)</h2><p>擷取重複的字元</p><p>使用 要擷取的字元{數字}</p><p>例如下面的題目擷取z 3次 以及 5次  z{3,5}</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">TaskText </span><br><span class="line">MatchwazzzzzupSuccess</span><br><span class="line">MatchwazzzupSuccess</span><br><span class="line">Skipwazup</span><br><span class="line"></span><br><span class="line">input: waz&#123;3,5&#125;up</span><br></pre></td></tr></table></figure><h2 id="Lesson-7-Mr-Kleene-Mr-Kleene"><a href="#Lesson-7-Mr-Kleene-Mr-Kleene" class="headerlink" title="Lesson 7: Mr. Kleene, Mr. Kleene"></a>Lesson 7: Mr. Kleene, Mr. Kleene</h2><p>(*) 0個或是更多重複</p><p>(+) 1個或是更多重複</p><p>這兩者都可以使用在任何字元或是元字符 (Metacharacter)上面</p><blockquote><p>在POSIX擴展正則表達式裡[1]，定義了14個元字符，它們被作為一般的字符使用時，必須要通過「轉義」（前面加一個反斜槓「\」）來去除他們本身的特殊意義，這些元字符包括：</p><p>開和閉方括號：”[“和”]”<br>反斜線：”&quot;<br>脫字符：”^”<br>美元符號：”$”<br>句號/點：”.”<br>豎線/管道符：”|”<br>問號：”?”<br>星號：”*”<br>加號：”+”<br>開和閉 花括號：”{“和”}”<br>開和閉 小括號：”(“和”)”[2][3]</p></blockquote><p>下方範例可以看到:</p><p>a+ 代表 a是一個以上<br>b* 代表 b可以包含0以及以上<br>c+ 代表 c是一個以上</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">TaskText </span><br><span class="line">MatchaaaabccSuccess</span><br><span class="line">MatchaabbbbcSuccess</span><br><span class="line">MatchaaccSuccess</span><br><span class="line">Skipa</span><br><span class="line"></span><br><span class="line">input: a+b*c+</span><br></pre></td></tr></table></figure><h2 id="Lesson-8-Characters-optional-選擇性符號"><a href="#Lesson-8-Characters-optional-選擇性符號" class="headerlink" title="Lesson 8: Characters optional(?)選擇性符號"></a>Lesson 8: Characters optional(?)選擇性符號</h2><p>範例:</p><p>ab?c =&gt; abc or ac (b是選擇性的)</p><p>中括號124抓取前三個數字 跳過skip</p><p>並且使用?讓s變成選擇性的</p><p>最後跳脫字元?</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">TaskText </span><br><span class="line">Match1 file found?Success</span><br><span class="line">Match2 files found?Success</span><br><span class="line">Match24 files found?Success</span><br><span class="line">SkipNo files found.</span><br><span class="line"></span><br><span class="line">input: [124]+files? found\?</span><br></pre></td></tr></table></figure><h2 id="Lesson-9-All-this-whitespace-空白符號"><a href="#Lesson-9-All-this-whitespace-空白符號" class="headerlink" title="Lesson 9: All this whitespace(空白符號)"></a>Lesson 9: All this whitespace(空白符號)</h2><ul><li>space (␣)使用space產生的空白</li><li>tab (\t)使用tab產生的空白</li><li>new line (\n)斷行</li><li>carriage return (\r) 很少使用只有在character terminal</li><li>whitespace special character (\s) 此功能包含以上全部的空白</li><li>(\S)任何不是空格的字元</li></ul><p>這邊我的解法是</p><p>使用數字符號<br>代表第一個數字 \d</p><p>使用跳脫字元加上dot .代表順序後方的dot</p><p>接下來就是\s代表全部的空白處</p><p>最後是abc</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">TaskText </span><br><span class="line">Match1.   abcSuccess</span><br><span class="line">Match2.abcSuccess</span><br><span class="line">Match3.           abcSuccess</span><br><span class="line">Skip4.abcTo be completed</span><br><span class="line"></span><br><span class="line">input: \d\.\s+abc</span><br></pre></td></tr></table></figure><h2 id="Lesson-10-Starting-and-ending-搜尋完整的字句"><a href="#Lesson-10-Starting-and-ending-搜尋完整的字句" class="headerlink" title="Lesson 10: Starting and ending (搜尋完整的字句)"></a>Lesson 10: Starting and ending (搜尋完整的字句)</h2><p>使用 ^…$ 可以包含要搜尋的完整字句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">TaskText </span><br><span class="line">MatchMission: successfulSuccess</span><br><span class="line">SkipLast Mission: unsuccessfulTo be completed</span><br><span class="line">SkipNext Mission: successful upon capture of target</span><br><span class="line"></span><br><span class="line">input: ^Mission: successful$</span><br></pre></td></tr></table></figure><h2 id="Lesson-11-Match-groups-限定要抓取的範圍"><a href="#Lesson-11-Match-groups-限定要抓取的範圍" class="headerlink" title="Lesson 11: Match groups (()) (限定要抓取的範圍)"></a>Lesson 11: Match groups (()) (限定要抓取的範圍)</h2><p>使用(以及)限定要抓取的範圍</p><p>例如:</p><p>^(IMG\d+.png)$<br>這樣使用會抓取所以有的 IMG數字.png</p><p>如果想要只抓取檔案名稱可以這樣寫:</p><p>^(IMG\d+).png$<br>用()去框在名字的地方限定抓取的範圍只能檔案名稱</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Capturefile_record_transcript.pdffile_record_transcriptSuccess</span><br><span class="line">Capturefile_07241999.pdffile_07241999Success</span><br><span class="line">Skiptestfile_fake.pdf.tmp</span><br><span class="line"></span><br><span class="line">input: ^(file.+)\.pdf$</span><br></pre></td></tr></table></figure><h2 id="Lesson-12-Nested-groups-巢狀擷取"><a href="#Lesson-12-Nested-groups-巢狀擷取" class="headerlink" title="Lesson 12: Nested groups(巢狀擷取)"></a>Lesson 12: Nested groups(巢狀擷取)</h2><p>巢狀擷取</p><p>一樣使用括號(())來擷取內容，可以用多層的方式擷取內容中的內容</p><p>範例:</p><p>^(IMG(\d+)).png$<br>這邊會擷取IMG的數字.png然後再擷取只有數字的部分</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">TaskTextCapture Groups </span><br><span class="line">CaptureJan 1987Jan 1987 1987Success</span><br><span class="line">CaptureMay 1969May 1969 1969Success</span><br><span class="line">CaptureAug 2011Aug 2011 2011Success</span><br><span class="line"></span><br><span class="line">input: ^(\D+(\d+))$ or ^(\w+(\d+))$</span><br></pre></td></tr></table></figure><h2 id="Lesson-13-More-group-work"><a href="#Lesson-13-More-group-work" class="headerlink" title="Lesson 13: More group work"></a>Lesson 13: More group work</h2><p>中間多了一個字母一樣要抓取他其他的部份用括號擷取</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">TaskTextCapture Groups </span><br><span class="line">Capture1280x7201280 720Success</span><br><span class="line">Capture1920x16001920 1600Success</span><br><span class="line">Capture1024x7681024 768Success</span><br><span class="line"></span><br><span class="line">input: ^((\d+)[x](\d+))$ or ^((\d+)x(\d+))$</span><br></pre></td></tr></table></figure><h2 id="Lesson-14-It’s-all-conditional"><a href="#Lesson-14-It’s-all-conditional" class="headerlink" title="Lesson 14: It’s all conditional(|)"></a>Lesson 14: It’s all conditional(|)</h2><p>當作or使用即可(|)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">TaskText </span><br><span class="line">MatchI love catsSuccess</span><br><span class="line">MatchI love dogsSuccess</span><br><span class="line">SkipI love logsTo be completed</span><br><span class="line">SkipI love cogs</span><br><span class="line"></span><br><span class="line">input: I love cats|dogs</span><br></pre></td></tr></table></figure><h2 id="Lesson-15-Other-special-characters-其他特殊字元"><a href="#Lesson-15-Other-special-characters-其他特殊字元" class="headerlink" title="Lesson 15: Other special characters(其他特殊字元)"></a>Lesson 15: Other special characters(其他特殊字元)</h2><ul><li>\d 所有數字</li><li>\s 所有空白字元</li><li>\w 所有數字、字母</li></ul><hr><ul><li>\D 所有字母</li><li>\S 所有非空白字元</li><li>\W 所有非數字、字母</li></ul><p>\b 所有單詞</p><p>這邊的練習是個練習用的沙盒可以不用擺上來可以連上去練一下使用regex</p><p><a href="https://regexone.com/lesson/misc_meta_characters">練習網站</a></p><h2 id="YA完成了-第一部分ZZ"><a href="#YA完成了-第一部分ZZ" class="headerlink" title="YA完成了~第一部分ZZ"></a>YA完成了~第一部分ZZ</h2><p><img src="https://i.imgur.com/cLWvW2l.png"></p><h2 id="Practice-Problems"><a href="#Practice-Problems" class="headerlink" title="Practice Problems"></a>Practice Problems</h2><h2 id="Problem-1-Matching-a-decimal-numbers-擷取小數"><a href="#Problem-1-Matching-a-decimal-numbers-擷取小數" class="headerlink" title="Problem 1: Matching a decimal numbers (擷取小數)"></a>Problem 1: Matching a decimal numbers (擷取小數)</h2><p>主要是用[]解的 並且後面加上\d表示數字結尾</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Match3.14529Success</span><br><span class="line">Match-255.34Success</span><br><span class="line">Match128Success</span><br><span class="line">Match1.9e10Success</span><br><span class="line">Match123,340.00Success</span><br><span class="line">Skip720p</span><br><span class="line"></span><br><span class="line">input: ^[-\.,\de]+\d$</span><br></pre></td></tr></table></figure><h2 id="Problem-2-Matching-phone-numbers"><a href="#Problem-2-Matching-phone-numbers" class="headerlink" title="Problem 2: Matching phone numbers"></a>Problem 2: Matching phone numbers</h2><p>只抓前三個連號都可以辦到搂!基本上電話區碼的部分可以這樣抓</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">TaskTextCapture Groups </span><br><span class="line">Capture415-555-1234415Success</span><br><span class="line">Capture650-555-2345650Success</span><br><span class="line">Capture(416)555-3456416Success</span><br><span class="line">Capture202 555 4567202Success</span><br><span class="line">Capture4035555678403Success</span><br><span class="line">Capture1 416 555 9292416Success</span><br><span class="line"></span><br><span class="line">input: (\d&#123;3&#125;)</span><br></pre></td></tr></table></figure><h2 id="Problem-3-Matching-emails"><a href="#Problem-3-Matching-emails" class="headerlink" title="Problem 3: Matching emails"></a>Problem 3: Matching emails</h2><p>排除所有符號後方的字元</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">TaskTextCapture Groups </span><br><span class="line">Capturetom@hogwarts.comtomSuccess</span><br><span class="line">Capturetom.riddle@hogwarts.comtom.riddleSuccess</span><br><span class="line">Capturetom.riddle+regexone@hogwarts.comtom.riddleSuccess</span><br><span class="line">Capturetom@hogwarts.eu.comtomSuccess</span><br><span class="line">Capturepotter@hogwarts.compotterSuccess</span><br><span class="line">Captureharry@hogwarts.comharrySuccess</span><br><span class="line">Capturehermione+regexone@hogwarts.comhermioneSuccess</span><br><span class="line"></span><br><span class="line">input: ^([\w\.]*)</span><br></pre></td></tr></table></figure><h2 id="Problem-4-Matching-HTML"><a href="#Problem-4-Matching-HTML" class="headerlink" title="Problem 4: Matching HTML"></a>Problem 4: Matching HTML</h2><p>選取”&lt;”以及後面的字母 就是tag瞜!</p><p>ex. &lt;a or &lt;div</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Capture&lt;a&gt;This is a link&lt;&#x2F;a&gt;aSuccess</span><br><span class="line">Capture&lt;a href&#x3D;&#39;https:&#x2F;&#x2F;regexone.com&#39;&gt;Link&lt;&#x2F;a&gt;aSuccess</span><br><span class="line">Capture&lt;div class&#x3D;&#39;test_style&#39;&gt;Test&lt;&#x2F;div&gt;divSuccess</span><br><span class="line">Capture&lt;div&gt;Hello &lt;span&gt;world&lt;&#x2F;span&gt;&lt;&#x2F;div&gt;divSuccess</span><br><span class="line"></span><br><span class="line">input: &lt;(\w+)</span><br></pre></td></tr></table></figure><h2 id="Problem-5-Matching-specific-filenames"><a href="#Problem-5-Matching-specific-filenames" class="headerlink" title="Problem 5: Matching specific filenames"></a>Problem 5: Matching specific filenames</h2><p>| and $的活用</p><p>選擇jpg or png or gif $(作為結尾)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Skip.bash_profileTo be completed</span><br><span class="line">Skipworkspace.docTo be completed</span><br><span class="line">Captureimg0912.jpgimg0912 jpgSuccess</span><br><span class="line">Captureupdated_img0912.pngupdated_img0912 pngSuccess</span><br><span class="line">Skipdocumentation.htmlTo be completed</span><br><span class="line">Capturefavicon.giffavicon gifSuccess</span><br><span class="line">Skipimg0912.jpg.tmpTo be completed</span><br><span class="line">Skipaccess.lock</span><br><span class="line"></span><br><span class="line">input:(\w+)\.(jpg|png|gif)$</span><br></pre></td></tr></table></figure><h2 id="Problem-6-Trimming-whitespace-from-start-and-end-of-line"><a href="#Problem-6-Trimming-whitespace-from-start-and-end-of-line" class="headerlink" title="Problem 6: Trimming whitespace from start and end of line"></a>Problem 6: Trimming whitespace from start and end of line</h2><p>這邊我使用一開始去掉空白之後抓取全部的文字最後抓取串接以(.)結尾的句子</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CaptureThe quick brown fox...The quick brown fox...Success</span><br><span class="line">Capture   jumps over the lazy dog.jumps over the lazy dog.Success</span><br><span class="line"></span><br><span class="line">input: ([^\s+](.+)\.)$</span><br></pre></td></tr></table></figure><h2 id="Problem-7-Extracting-information-from-a-log-file"><a href="#Problem-7-Extracting-information-from-a-log-file" class="headerlink" title="Problem 7: Extracting information from a log file"></a>Problem 7: Extracting information from a log file</h2><p>(\w+)( 純文字以及跳脫字元&quot;(“\</p><p>[\w.]+): 這段是抓取所有文字以及有(.)加上一個(:)</p><p>(\d+))$ 這段是抓取括號以及數字結尾</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">SkipW&#x2F;dalvikvm( 1553): threadid&#x3D;1: uncaught exceptionTo be completed</span><br><span class="line">SkipE&#x2F;( 1553): FATAL EXCEPTION: mainTo be completed</span><br><span class="line">SkipE&#x2F;( 1553): java.lang.StringIndexOutOfBoundsExceptionTo be completed</span><br><span class="line">CaptureE&#x2F;( 1553):   at widget.List.makeView(ListView.java:1727)makeView ListView.java 1727Success</span><br><span class="line">CaptureE&#x2F;( 1553):   at widget.List.fillDown(ListView.java:652)fillDown ListView.java 652Success</span><br><span class="line">CaptureE&#x2F;( 1553):   at widget.List.fillFrom(ListView.java:709)fillFrom ListView.java 709Success</span><br><span class="line"></span><br><span class="line">input: (\w+)\(([\w\.]+):(\d+)\)$</span><br></pre></td></tr></table></figure><h2 id="Problem-8-Parsing-and-extracting-data-from-a-URL"><a href="#Problem-8-Parsing-and-extracting-data-from-a-URL" class="headerlink" title="Problem 8: Parsing and extracting data from a URL"></a>Problem 8: Parsing and extracting data from a URL</h2><p>(\w+):// 這段吃所有的 ://之前的字母</p><p>://([\w-.]+) 使用[]內部包含字母、跳脫字元的- .</p><p>(:(\d+))?  最後幾個(:)之後的數字因為不是每個都有所以上問號讓它們變成optional</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">TaskTextCapture Groups </span><br><span class="line">Captureftp:&#x2F;&#x2F;file_server.com:21&#x2F;top_secret&#x2F;life_changing_plans.pdfftp file_server.com 21Success</span><br><span class="line">Capturehttps:&#x2F;&#x2F;regexone.com&#x2F;lesson&#x2F;introduction#sectionhttps regexone.comSuccess</span><br><span class="line">Capturefile:&#x2F;&#x2F;localhost:4040&#x2F;zip_filefile localhost 4040Success</span><br><span class="line">Capturehttps:&#x2F;&#x2F;s3cur3-server.com:9999&#x2F;https s3cur3-server.com 9999Success</span><br><span class="line">Capturemarket:&#x2F;&#x2F;search&#x2F;angry%20birdsmarket searchSuccess</span><br><span class="line"></span><br><span class="line">input: (\w+):&#x2F;&#x2F;([\w\-\.]+)(:(\d+))?</span><br></pre></td></tr></table></figure><h2 id="Problem-X-Infinity-and-beyond"><a href="#Problem-X-Infinity-and-beyond" class="headerlink" title="Problem X: Infinity and beyond!"></a>Problem X: Infinity and beyond!</h2><p><img src="https://i.imgur.com/wTERooE.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;正則表達式-Regular-Expression&quot;&gt;&lt;a href=&quot;#正則表達式-Regular-Expression&quot; class=&quot;headerlink&quot; title=&quot;正則表達式 Regular Expression&quot;&gt;&lt;/a&gt;正則表達式 Regular </summary>
      
    
    
    
    <category term="Javascript" scheme="http://example.com/categories/Javascript/"/>
    
    
    <category term="Javascript" scheme="http://example.com/tags/Javascript/"/>
    
  </entry>
  
  <entry>
    <title>JS-Async JS Crash Course</title>
    <link href="http://example.com/2021/03/22/JS-Async%20JS%20Crash%20Course/"/>
    <id>http://example.com/2021/03/22/JS-Async%20JS%20Crash%20Course/</id>
    <published>2021-03-22T11:20:08.517Z</published>
    <updated>2021-03-22T11:21:09.097Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Async-JS-Crash-Course"><a href="#Async-JS-Crash-Course" class="headerlink" title="Async JS Crash Course"></a>Async JS Crash Course</h1><hr><h2 id="tags-Javascript-relate"><a href="#tags-Javascript-relate" class="headerlink" title="tags: Javascript relate"></a>tags: Javascript relate</h2><h6 id="tags-Javascript"><a href="#tags-Javascript" class="headerlink" title="tags: Javascript"></a>tags: <code>Javascript</code></h6><h1 id="使用範例來理解Async-JS在什麼情況下適合作用"><a href="#使用範例來理解Async-JS在什麼情況下適合作用" class="headerlink" title="使用範例來理解Async JS在什麼情況下適合作用:"></a>使用範例來理解Async JS在什麼情況下適合作用:</h1><ul><li>取得post貼上DOM延遲一秒鐘</li><li>創造新的post花了兩秒鐘</li></ul><p>這樣會發生什麼情況?</p><p><img src="https://i.imgur.com/lW6aV3a.png"></p><p>DOM會先PO post上去不等新的post創造好，所以永遠更新不到新的post</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> posts = [&#123;</span><br><span class="line">        title: <span class="string">&#x27;Post One&#x27;</span>,</span><br><span class="line">        body: <span class="string">&#x27;This is post one&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        title: <span class="string">&#x27;Post Two&#x27;</span>,</span><br><span class="line">        body: <span class="string">&#x27;This is post two&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 把取得的post貼到DOM上面 延遲一秒鐘</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getPost</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> output = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        posts.forEach(<span class="function">(<span class="params">post, index</span>) =&gt;</span> &#123;</span><br><span class="line">            output += <span class="string">`&lt;li&gt;<span class="subst">$&#123;post.title&#125;</span>&lt;/li&gt;`</span>;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="built_in">document</span>.body.innerHTML = output;</span><br><span class="line">    &#125;, <span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//創造一個新的post丟上去花了兩秒鐘</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createPost</span>(<span class="params">post</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        posts.push(post);</span><br><span class="line">    &#125;, <span class="number">2000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">getPost();</span><br><span class="line"></span><br><span class="line">createPost(&#123;</span><br><span class="line">    title: <span class="string">&#x27;Post Three&#x27;</span>,</span><br><span class="line">    body: <span class="string">&#x27;This is post Three&#x27;</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h1 id="使用callback"><a href="#使用callback" class="headerlink" title="使用callback:"></a>使用callback:</h1><p>使用callback代表getPosts，這樣一來就會在創造好新的post之後才會觸發getPosts整個過程會在兩秒內完成</p><p>需要注意callback的寫法在呼叫函式的部分撰寫的callback不需要加上()要特別留意</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//創造一個新的post丟上去花了兩秒鐘</span></span><br><span class="line"><span class="comment">//這邊的callback就代表了getPosts所以必須等創造好了新的post之後</span></span><br><span class="line"><span class="comment">// getPost才會觸發也才會把取的的物件推上去DOM所以就可以顯示新的post搂!</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createPost</span>(<span class="params">post, callback</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        posts.push(post);</span><br><span class="line">        callback();</span><br><span class="line">    &#125;, <span class="number">2000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">createPost(&#123;</span><br><span class="line">    title: <span class="string">&#x27;Post Three&#x27;</span>,</span><br><span class="line">    body: <span class="string">&#x27;This is post Three&#x27;</span></span><br><span class="line">&#125;, getPosts)</span><br></pre></td></tr></table></figure><h1 id="使用promise"><a href="#使用promise" class="headerlink" title="使用promise:"></a>使用promise:</h1><ul><li>promise解決會呼叫resolve</li><li>promise錯誤則呼叫reject</li></ul><p>promise成功則會使用then()內部的函式順利的印出新的post<br><img src="https://i.imgur.com/Vc1kOWO.png"></p><p>promise失敗(改寫error變數成true)則會顯示錯誤訊息在console裡面<br>也可以使用<code>catch</code>方法抓取錯誤的內容<br><img src="https://i.imgur.com/s18nYiL.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createPost</span>(<span class="params">post, </span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//如果promise解決會呼叫resolve</span></span><br><span class="line">    <span class="comment">//如果promise錯誤則呼叫reject</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            posts.push(post);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 解釋promise內部的兩個參數的判斷是如何運作</span></span><br><span class="line">            <span class="keyword">const</span> error = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (!error) &#123;</span><br><span class="line">                resolve();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                reject(<span class="string">&#x27;Error: something went wrong&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;, <span class="number">2000</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">createPost(&#123;</span><br><span class="line">        title: <span class="string">&#x27;Post Three&#x27;</span>,</span><br><span class="line">        body: <span class="string">&#x27;This is post three&#x27;</span></span><br><span class="line">    &#125;).then(getPosts).catch(<span class="function"><span class="params">err</span> =&gt;</span> <span class="built_in">console</span>.log(err));</span><br></pre></td></tr></table></figure><h2 id="示範promise-all"><a href="#示範promise-all" class="headerlink" title="示範promise.all"></a>示範promise.all</h2><p>常常promise會不只一個，一個一個接then太累了，所以可以使用promise.all一次抓住一同使用.then就好瞜!</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> promise1 = <span class="built_in">Promise</span>.resolve(<span class="string">&#x27;hello world&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> promise2 = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> promise3 = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> <span class="built_in">setTimeout</span>(resolve, <span class="number">2000</span>, <span class="string">&#x27;Goodbye&#x27;</span>));</span><br><span class="line"></span><br><span class="line"><span class="built_in">Promise</span>.all([promise1, promise2, promise3]).then(<span class="function"><span class="params">values</span> =&gt;</span> <span class="built_in">console</span>.log(values));</span><br></pre></td></tr></table></figure><p>最後.then的印出結果<br><img src="https://i.imgur.com/9yQSz0L.png"></p><h2 id="示範fetch-API-相關的promise寫法"><a href="#示範fetch-API-相關的promise寫法" class="headerlink" title="示範fetch API 相關的promise寫法"></a>示範fetch API 相關的promise寫法</h2><p>使用fetch抓取資料的話必須轉化格式所以在指派給變數的階段就要先.then轉換格式</p><p>這樣才可以在promise.all的階段被真正抓取到資料</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//使用兩個.then因為要轉換JSON格式</span></span><br><span class="line"><span class="keyword">const</span> promise4 = fetch(<span class="string">&#x27;https://jsonplaceholder.typicode.com/users&#x27;</span>).then(<span class="function"><span class="params">res</span> =&gt;</span> res.json());</span><br><span class="line"></span><br><span class="line"><span class="built_in">Promise</span>.all([promise1, promise2, promise3, promise4]).then(<span class="function"><span class="params">values</span> =&gt;</span> <span class="built_in">console</span>.log(values));</span><br></pre></td></tr></table></figure><p>最後.then的印出結果<br><img src="https://i.imgur.com/8fI5g5T.png"></p><h2 id="使用async"><a href="#使用async" class="headerlink" title="使用async:"></a>使用async:</h2><p><code>await</code> 等待一個同步的過程或動作去完成後才去執行其他動作</p><p>等待createPost處理完內部的函式createPost後也就是創造新的post後，才會往getPosts去執行這樣就會顯示摟!</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createPost</span>(<span class="params">post, </span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            posts.push(post);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">const</span> error = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (!error) &#123;</span><br><span class="line">                resolve();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                reject(<span class="string">&#x27;Error: something went wrong&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;, <span class="number">2000</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 等待createPost處理完成後，才會往getPosts去執行</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">init</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">await</span> createPost(&#123;</span><br><span class="line">        title: <span class="string">&#x27;Post Three&#x27;</span>,</span><br><span class="line">        body: <span class="string">&#x27;This is post three&#x27;</span></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    getPosts();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">init();</span><br></pre></td></tr></table></figure><h2 id="示範fetch-API-相關的async寫法"><a href="#示範fetch-API-相關的async寫法" class="headerlink" title="示範fetch API 相關的async寫法"></a>示範fetch API 相關的async寫法</h2><p>不只用.then一切都更乾淨好讀</p><p>一樣fetch都需要資料轉換，但是這邊從新指派一個變數處理比較特別</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">fetchUsers</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> res = <span class="keyword">await</span> fetch(<span class="string">&#x27;https://jsonplaceholder.typicode.com/users&#x27;</span>);</span><br><span class="line">    <span class="keyword">const</span> data = <span class="keyword">await</span> res.json();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">console</span>.log(data);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fetchUsers();</span><br></pre></td></tr></table></figure><p>fetch的資料印出:<br><img src="https://i.imgur.com/Xc4q0xs.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Async-JS-Crash-Course&quot;&gt;&lt;a href=&quot;#Async-JS-Crash-Course&quot; class=&quot;headerlink&quot; title=&quot;Async JS Crash Course&quot;&gt;&lt;/a&gt;Async JS Crash Course&lt;/</summary>
      
    
    
    
    <category term="Javascript" scheme="http://example.com/categories/Javascript/"/>
    
    
    <category term="Javascript" scheme="http://example.com/tags/Javascript/"/>
    
  </entry>
  
  <entry>
    <title>JS-AJAX Crash Course (5000字)</title>
    <link href="http://example.com/2021/03/22/JS-AJAX%20Crash%20Course%20(Vanilla%20JavaScript)/"/>
    <id>http://example.com/2021/03/22/JS-AJAX%20Crash%20Course%20(Vanilla%20JavaScript)/</id>
    <published>2021-03-22T11:17:15.184Z</published>
    <updated>2021-03-22T11:18:52.375Z</updated>
    
    <content type="html"><![CDATA[<h1 id="AJAX-Crash-Course-Vanilla-JavaScript"><a href="#AJAX-Crash-Course-Vanilla-JavaScript" class="headerlink" title="AJAX Crash Course (Vanilla JavaScript)"></a>AJAX Crash Course (Vanilla JavaScript)</h1><hr><h2 id="tags-Javascript-relate"><a href="#tags-Javascript-relate" class="headerlink" title="tags: Javascript relate"></a>tags: Javascript relate</h2><h6 id="tags-Javascript"><a href="#tags-Javascript" class="headerlink" title="tags: Javascript"></a>tags: <code>Javascript</code></h6><h1 id="AJAX是甚麼"><a href="#AJAX是甚麼" class="headerlink" title="AJAX是甚麼?"></a>AJAX是甚麼?</h1><ul><li>Asynchronous Javascript&amp;XML<blockquote><p>不是種語言、框架、函式庫只是一種網頁工具用來傳送、接收來自客戶端的資料給伺服器用一種非同步的處理方式那就是AJAX</p></blockquote></li><li>簡單來說就是處理這些發送的動作在看不到的狀況下同時不需要重新下載頁面</li><li>諷刺的地方是雖然命名有被使用到但是 XML相當少使用，比較多使用JSON(Javascript Object Notation)因為比較簡潔快速且受歡迎</li><li>單純的text也可以被使用</li></ul><h2 id="圖解AJAX"><a href="#圖解AJAX" class="headerlink" title="圖解AJAX"></a>圖解AJAX</h2><p><img src="https://i.imgur.com/TKMLQTR.png"></p><h3 id="Common-Request-amp-Response"><a href="#Common-Request-amp-Response" class="headerlink" title="Common Request&amp;Response"></a>Common Request&amp;Response</h3><p>例子:<br>點擊網頁連結會發出一個common request 給server會回傳common response，而這個response 包含了header或者是網頁內容，基本上使用者要求什麼就回傳甚麼 </p><h3 id="AJAX做的事情"><a href="#AJAX做的事情" class="headerlink" title="AJAX做的事情"></a>AJAX做的事情</h3><p>AJAX可做到的事情就是發送request 非同步的方式(Asynchronously)在後方，而不需要重新下載或是刷新全部頁面，而是只更新一小區域的內容，這樣的方式相對快速並且更充滿互動感</p><h3 id="AJAX去做request有幾種方式可以使用"><a href="#AJAX去做request有幾種方式可以使用" class="headerlink" title="AJAX去做request有幾種方式可以使用"></a>AJAX去做request有幾種方式可以使用</h3><p>1.使用原生JS語法<br>2.使用函式庫jQuery, Axios等等</p><h3 id="XmlHttpRequest"><a href="#XmlHttpRequest" class="headerlink" title="XmlHttpRequest"></a>XmlHttpRequest</h3><p>XmlHttpRequest Object (XHR)</p><blockquote><p>是一種物件型態的API 而他是一種物件代表會有屬性、方法可以使用，而這些其實是瀏覽器的JS環境提供的所以幾乎所有現代的瀏覽器都有這些API可以使用，其中的方法用來<strong>傳送資料往來</strong>用戶端-伺服器端或是瀏覽器-伺服器端</p></blockquote><ul><li>一種物件型態的API</li><li>瀏覽器的JS提供的環境</li><li>使用方法(methods)傳送資料往來用戶端-伺服器端</li><li>不只使用http，其他的protocols也可以使用</li><li>可以使用的資料格式有XML,JSON,plain text(純文字)</li></ul><h3 id="Server端回傳資料"><a href="#Server端回傳資料" class="headerlink" title="Server端回傳資料"></a>Server端回傳資料</h3><p>通常回傳的資料或是以JSON或是XML格式或是純文字</p><h3 id="HTML-Response"><a href="#HTML-Response" class="headerlink" title="HTML Response"></a>HTML Response</h3><p>這部分通常可以通過DOM去更新頁面或是回傳使用者要求的資料等等，回應使用者的需求</p><h3 id="Different-ways-libraries-amp-other-methods-to-make-AJAX-call"><a href="#Different-ways-libraries-amp-other-methods-to-make-AJAX-call" class="headerlink" title="Different ways(libraries&amp;other methods) to make AJAX call"></a>Different ways(libraries&amp;other methods) to make AJAX call</h3><ul><li>jQuery</li><li>Axios</li><li>Superagent</li><li>Fetch API 瀏覽器提供的功能</li><li>Prototype</li><li>Node HTTP</li></ul><h1 id="Let’s-Write-Some-Code"><a href="#Let’s-Write-Some-Code" class="headerlink" title="Let’s Write Some Code"></a>Let’s Write Some Code</h1><h2 id="Environment-setup"><a href="#Environment-setup" class="headerlink" title="Environment setup"></a>Environment setup</h2><p><a href="https://www.apachefriends.org/zh_tw/download.html">下載 XAMPP</a></p><p><img src="https://i.imgur.com/afbClYT.png"></p><p><a href="https://www.youtube.com/watch?v=6tCWiexc05U&list=PLillGF-Rfqbap2IB6ZS4BBBcYPagAjpjn&index=2&ab_channel=TraversyMedia">XAMPP設定影片</a></p><h3 id="創造資料夾擺接下來的要操作的範例"><a href="#創造資料夾擺接下來的要操作的範例" class="headerlink" title="創造資料夾擺接下來的要操作的範例"></a>創造資料夾擺接下來的要操作的範例</h3><p><img src="https://i.imgur.com/SyFwXky.png"></p><p>創造資料夾ajaxcrash<br><img src="https://i.imgur.com/MlL1rhU.png"></p><p>使用VScode開啟這個資料夾並且創建html檔案ajax1.html</p><p>打開一個網頁連接到剛剛創建好的資料夾就可以開始跟課程瞜!<br><img src="https://i.imgur.com/e4Q1w72.png"></p><p>設置一個sample.txt待會<br>待會程式會抓取使用並放入一些隨意的內文</p><p><img src="https://i.imgur.com/ioDd0QK.png"></p><h2 id="AJAX-1-Text-File-純文字檔案AJAX提取"><a href="#AJAX-1-Text-File-純文字檔案AJAX提取" class="headerlink" title="AJAX 1 -Text File 純文字檔案AJAX提取"></a>AJAX 1 -Text File 純文字檔案AJAX提取</h2><h3 id="onload"><a href="#onload" class="headerlink" title="onload()"></a>onload()</h3><p>當印出xhr會得到一些可以使用的方法<br><img src="https://i.imgur.com/Yt8JHRd.png"></p><p>創建一個按鈕來抓取sample.txt的內容<br><img src="https://i.imgur.com/SEEgr3F.png"></p><p>當成功抓取內文後，查看Netword內容<br>使用的方法:GET<br>Status Code:200 OK<br>Content Type:text/plain<br><img src="https://i.imgur.com/YfTSz3F.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button id=<span class="string">&quot;button&quot;</span>&gt;Get Text File&lt;/button&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="comment">//create event listener</span></span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">&quot;button&quot;</span>).addEventListener(<span class="string">&quot;click&quot;</span>, loadText);</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">loadText</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="comment">//創造xhr物件 create XHR object</span></span><br><span class="line">            <span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">            <span class="comment">//open方法填入的參數 open - type, url/file, async</span></span><br><span class="line">            xhr.open(<span class="string">&quot;GET&quot;</span>, <span class="string">&#x27;sample.txt&#x27;</span>, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//當status =200時印出sample.txt的內容</span></span><br><span class="line">            xhr.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">this</span>.status == <span class="number">200</span>) &#123;</span><br><span class="line">                    <span class="built_in">console</span>.log(<span class="built_in">this</span>.responseText);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//使用這個方法後才會顯示出內容在console裡面(send request)</span></span><br><span class="line">            xhr.send();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//HTTP Status</span></span><br><span class="line">        <span class="comment">//200 : &quot;OK&quot;</span></span><br><span class="line">        <span class="comment">//403 : &quot;Forbidden&quot;</span></span><br><span class="line">        <span class="comment">//404 : &quot;Not Found&quot;</span></span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p>在onload狀態做<code>console.log(&#39;readystate:&#39;, xhr.readyState);</code>來看看目前位置的readystate在哪個位置</p><p>會發現只有<img src="https://i.imgur.com/uLMFaJP.png">中間的過程都不會跑</p><h4 id="當onload出錯的時候-產生404狀態的時候也可以呈現在DOM上面"><a href="#當onload出錯的時候-產生404狀態的時候也可以呈現在DOM上面" class="headerlink" title="當onload出錯的時候 產生404狀態的時候也可以呈現在DOM上面"></a>當onload出錯的時候 產生404狀態的時候也可以呈現在DOM上面</h4><p>這邊如果想要練習可以藉著把sample改名就可以取得這樣的狀態摟!</p><p><img src="https://i.imgur.com/LBmMEiF.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">xhr.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&#x27;readystate:&#x27;</span>, xhr.readyState);</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">this</span>.status == <span class="number">200</span>) &#123;</span><br><span class="line">                    <span class="comment">//正常狀態下顯示在DOM的處理</span></span><br><span class="line">                    <span class="built_in">document</span>.getElementById(<span class="string">&#x27;text&#x27;</span>).innerHTML = <span class="built_in">this</span>.responseText</span><br><span class="line">                <span class="comment">// 也就是404的狀態也可以呈現在HTML上面</span></span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">this</span>.status == <span class="number">404</span>) &#123;</span><br><span class="line">                    <span class="built_in">document</span>.getElementById(<span class="string">&#x27;text&#x27;</span>).innerHTML = <span class="string">&quot;Not Found&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure><h3 id="onreadystatechange"><a href="#onreadystatechange" class="headerlink" title="onreadystatechange()"></a>onreadystatechange()</h3><p>會得出一樣的respose內容，差別在於<code>onreadystatechange()</code>在readystate必須在4的情況下也就是(4:request finished and response is ready)才會印出reponse的內容</p><p>可以使用<code>console.log(&#39;readystate:&#39;, xhr.readyState);</code>來看看目前位置的readystate在哪個位置</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">loadText</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="comment">//create XHR object</span></span><br><span class="line">            <span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">            <span class="comment">//open - type, url/file, async</span></span><br><span class="line">            xhr.open(<span class="string">&quot;GET&quot;</span>, <span class="string">&#x27;sample.txt&#x27;</span>, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 當放在這一段的時候只會得到readystate1</span></span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&#x27;readystate:&#x27;</span>, xhr.readyState);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// xhr.onload = function () &#123;</span></span><br><span class="line">            <span class="comment">//     if (this.status == 200) &#123;</span></span><br><span class="line">            <span class="comment">//         // console.log(this.responseText);</span></span><br><span class="line">            <span class="comment">//     &#125;</span></span><br><span class="line">            <span class="comment">// &#125;</span></span><br><span class="line">            xhr.onreadystatechange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&#x27;readystate:&#x27;</span>, xhr.readyState);</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">this</span>.readyState == <span class="number">4</span> &amp;&amp; <span class="built_in">this</span>.status == <span class="number">200</span>) &#123;</span><br><span class="line">                    <span class="comment">// console.log(this.responseText);</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//send request</span></span><br><span class="line">            xhr.send();</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>放在條件式function之前時會顯示1</p><p>放在條件式中時會跑1234一直到也就是完成request以及respose ready內容進條件事就會跑後方的動作也就是印出responseText</p><p><img src="https://i.imgur.com/CI6r4hC.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button id=<span class="string">&quot;button&quot;</span>&gt;Get Text File&lt;/button&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="comment">//create event listener</span></span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">&quot;button&quot;</span>).addEventListener(<span class="string">&quot;click&quot;</span>, loadText);</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">loadText</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="comment">//create XHR object</span></span><br><span class="line">            <span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">            <span class="comment">//open - type, url/file, async</span></span><br><span class="line">            xhr.open(<span class="string">&quot;GET&quot;</span>, <span class="string">&#x27;sample.txt&#x27;</span>, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">            xhr.onreadystatechange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 這邊的readyState必須是4下方的內容才會被印出</span></span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">this</span>.readyState == <span class="number">4</span> &amp;&amp; <span class="built_in">this</span>.status == <span class="number">200</span>) &#123;</span><br><span class="line">                    <span class="built_in">console</span>.log(<span class="built_in">this</span>.responseText);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//send request</span></span><br><span class="line">            xhr.send();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// readyState Values</span></span><br><span class="line">        <span class="comment">// 0:request not initialized</span></span><br><span class="line">        <span class="comment">// 1:server connection established</span></span><br><span class="line">        <span class="comment">// 2:request received</span></span><br><span class="line">        <span class="comment">// 3:processing request</span></span><br><span class="line">        <span class="comment">// 4:request finished and response is ready</span></span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><h4 id="兩者的區別"><a href="#兩者的區別" class="headerlink" title="兩者的區別"></a>兩者的區別</h4><p>在於兩者的readyState</p><ul><li>onload - 它不會執行除非狀態是readyState:4</li><li>onreadystatechange - 卻是readyState:2,3也會執行</li></ul><h3 id="onprogress"><a href="#onprogress" class="headerlink" title="onprogress()"></a>onprogress()</h3><p>等待網頁載入時會跑的gif動畫時背景在做的事情</p><p>使用<code>console.log(&#39;readystate:&#39;, xhr.readyState);</code>來看看目前位置的readystate在哪個位置得出 3:processing request</p><p><img src="https://i.imgur.com/EUDGFaX.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">xhr.onprogress = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&#x27;readyState:&#x27;</span>, xhr.readyState);</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure><h3 id="onerror"><a href="#onerror" class="headerlink" title="onerror()"></a>onerror()</h3><p>當onload事件出錯時會跑這邊的函式</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">xhr.onerror = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&#x27;Request Error...&#x27;</span>);</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure><h3 id="把取得的response放到DOM上面"><a href="#把取得的response放到DOM上面" class="headerlink" title="把取得的response放到DOM上面"></a>把取得的response放到DOM上面</h3><p>在上方的HTML先設置一個區域可以抓取的div</p><p><img src="https://i.imgur.com/a6SCQQi.png"></p><p>抓好之後使用<code>innerHTML</code>修改內容變成<code>responseText</code>就可以把DOM呈現reponse的內容了</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">xhr.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&#x27;readystate:&#x27;</span>, xhr.readyState);</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">this</span>.status == <span class="number">200</span>) &#123;</span><br><span class="line">                    <span class="comment">// console.log(this.responseText);</span></span><br><span class="line">                    <span class="built_in">document</span>.getElementById(<span class="string">&#x27;text&#x27;</span>).innerHTML = <span class="built_in">this</span>.responseText</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure><h2 id="AJAX2-Local-JSON-本地端資料夾AJAX提取資料"><a href="#AJAX2-Local-JSON-本地端資料夾AJAX提取資料" class="headerlink" title="AJAX2 - Local JSON 本地端資料夾AJAX提取資料"></a>AJAX2 - Local JSON 本地端資料夾AJAX提取資料</h2><p>前置作業:</p><p>設置ajax2.html來操作JSON<br><img src="https://i.imgur.com/0DC8Qzo.png"></p><p>多設置兩個資料夾待會做操作使用<br><img src="https://i.imgur.com/qrt5R5j.png"></p><p><img src="https://i.imgur.com/PQBR87Z.png"></p><p>並且轉換伺服器網址到ajax2<br><img src="https://i.imgur.com/qjvxRwM.png"></p><h3 id="取得JSON格式得內容"><a href="#取得JSON格式得內容" class="headerlink" title="取得JSON格式得內容"></a>取得JSON格式得內容</h3><p>使用下方的程式碼可以取得JSON全部的內容!</p><p>當點Get User時會產生下面的資料在console中<br><img src="https://i.imgur.com/ebGT9GQ.png"></p><p><img src="https://i.imgur.com/UlScz1z.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button id=<span class="string">&quot;button1&quot;</span>&gt;Get User&lt;/button&gt;</span><br><span class="line">    &lt;button id=<span class="string">&quot;button2&quot;</span>&gt;Get Users&lt;/button&gt;</span><br><span class="line"></span><br><span class="line">    &lt;h1&gt;User&lt;/h1&gt;</span><br><span class="line">    &lt;div id=<span class="string">&quot;user&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line">    &lt;h1&gt;Users&lt;/h1&gt;</span><br><span class="line">    &lt;div id=<span class="string">&quot;users&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">&quot;button1&quot;</span>).addEventListener(<span class="string">&quot;click&quot;</span>, loadUser);</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">loadUser</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">            xhr.open(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;user.json&quot;</span>, <span class="literal">true</span>)</span><br><span class="line"></span><br><span class="line">            xhr.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">this</span>.status == <span class="number">200</span>) &#123;</span><br><span class="line">                    <span class="built_in">console</span>.log(<span class="built_in">this</span>.responseText);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            xhr.send();</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><h3 id="JSON-parse"><a href="#JSON-parse" class="headerlink" title="JSON.parse"></a><code>JSON.parse</code></h3><p>但是如果要取得其中的id,name,email個別取得的時候必須使用<code>JSON.parse</code></p><p>下方的範例我使用取的user的名字:Rick以字串的形式印出</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">xhr.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">this</span>.status == <span class="number">200</span>) &#123;</span><br><span class="line">                    <span class="keyword">var</span> user = <span class="built_in">JSON</span>.parse(xhr.responseText);</span><br><span class="line">                    <span class="built_in">console</span>.log(user.name);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure><h3 id="抓取到的JSON呈現到DOM上"><a href="#抓取到的JSON呈現到DOM上" class="headerlink" title="抓取到的JSON呈現到DOM上"></a>抓取到的JSON呈現到DOM上</h3><p>這邊我使用ES6的語法做串接直接貼到innerHTML上</p><p>當點擊Get User可以做到這樣的效果<br><img src="https://i.imgur.com/xEdYHx6.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">loadUser</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">            xhr.open(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;user.json&quot;</span>, <span class="literal">true</span>)</span><br><span class="line"></span><br><span class="line">            xhr.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">this</span>.status == <span class="number">200</span>) &#123;</span><br><span class="line">                    <span class="keyword">var</span> user = <span class="built_in">JSON</span>.parse(xhr.responseText);</span><br><span class="line">                    <span class="built_in">document</span>.getElementById(<span class="string">&quot;user&quot;</span>).innerHTML =</span><br><span class="line">                        <span class="string">`&lt;ul&gt;&lt;li&gt;ID:<span class="subst">$&#123;user.id&#125;</span>&lt;/li&gt;&lt;li&gt;name:<span class="subst">$&#123;user.name&#125;</span>&lt;/li&gt;&lt;li&gt;email:<span class="subst">$&#123;user.email&#125;</span>&lt;/li&gt;&lt;/ul&gt;`</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            xhr.send();</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="如果要取的複數JSON資料呈現到DOM上"><a href="#如果要取的複數JSON資料呈現到DOM上" class="headerlink" title="如果要取的複數JSON資料呈現到DOM上"></a>如果要取的複數JSON資料呈現到DOM上</h3><p>這邊的for…in迴圈會印出物件的屬性並且使用+=把所有的內容接續印出直到把內容印完為止</p><p><img src="https://i.imgur.com/xRC8VVu.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">loadUsers</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">            xhr.open(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;users.json&quot;</span>, <span class="literal">true</span>)</span><br><span class="line"></span><br><span class="line">            xhr.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">this</span>.status == <span class="number">200</span>) &#123;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">var</span> users = <span class="built_in">JSON</span>.parse(<span class="built_in">this</span>.responseText);</span><br><span class="line">                    <span class="keyword">var</span> output = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> users) &#123;</span><br><span class="line">                        output +=</span><br><span class="line">                            <span class="string">`&lt;ul&gt;&lt;li&gt;ID:<span class="subst">$&#123;users[i].id&#125;</span>&lt;/li&gt;&lt;li&gt;name:<span class="subst">$&#123;users[i].name&#125;</span>&lt;/li&gt;&lt;li&gt;email:<span class="subst">$&#123;users[i].email&#125;</span>&lt;/li&gt;&lt;/ul&gt;`</span>;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">document</span>.getElementById(<span class="string">&quot;users&quot;</span>).innerHTML = output;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            xhr.send();</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h2 id="AJAX3-External-API-AJAX提取-GitHub作範例"><a href="#AJAX3-External-API-AJAX提取-GitHub作範例" class="headerlink" title="AJAX3 - External API AJAX提取(GitHub作範例)"></a>AJAX3 - External API AJAX提取(GitHub作範例)</h2><p>處理方式基本上跟取的內部資料夾檔案的方式差不多只是在xhr.open的中間的參數改成Github API的網址，其他處理基本上都一樣</p><p><img src="https://i.imgur.com/l4pEydG.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button id=<span class="string">&quot;button&quot;</span>&gt;Load GitHub Users&lt;/button&gt;</span><br><span class="line">    &lt;br&gt;</span><br><span class="line">    &lt;h1&gt;Github Users&lt;/h1&gt;</span><br><span class="line">    &lt;div id=<span class="string">&quot;users&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">&quot;button&quot;</span>).addEventListener(<span class="string">&quot;click&quot;</span>, loadUsers);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//Load Github Users</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">loadUsers</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">            xhr.open(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;https://api.github.com/users&quot;</span>, <span class="literal">true</span>)</span><br><span class="line"></span><br><span class="line">            xhr.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">this</span>.status == <span class="number">200</span>) &#123;</span><br><span class="line">                    <span class="keyword">var</span> users = <span class="built_in">JSON</span>.parse(<span class="built_in">this</span>.responseText);</span><br><span class="line">                    <span class="keyword">var</span> output = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> users) &#123;</span><br><span class="line">                        output +=</span><br><span class="line">                            <span class="string">`&lt;div class=&quot;user&quot;&gt;</span></span><br><span class="line"><span class="string">                            &lt;img src=&quot;<span class="subst">$&#123;users[i].avatar_url&#125;</span>&quot; width =&quot;70&quot; height =&quot;70&quot;&gt;</span></span><br><span class="line"><span class="string">                            &lt;ul&gt;</span></span><br><span class="line"><span class="string">                            &lt;li&gt;ID:<span class="subst">$&#123;users[i].id&#125;</span>&lt;/li&gt;</span></span><br><span class="line"><span class="string">                            &lt;li&gt;Login:<span class="subst">$&#123;users[i].login&#125;</span>&lt;/li&gt;</span></span><br><span class="line"><span class="string">                            &lt;/ul&gt;</span></span><br><span class="line"><span class="string">                            &lt;/div&gt;`</span></span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="built_in">document</span>.getElementById(<span class="string">&#x27;users&#x27;</span>).innerHTML = output;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            xhr.send();</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><h2 id="AJAX4-使用PHP取得資料並且對比AJAX取得方式-參考閱讀PHP的部分"><a href="#AJAX4-使用PHP取得資料並且對比AJAX取得方式-參考閱讀PHP的部分" class="headerlink" title="AJAX4 - 使用PHP取得資料並且對比AJAX取得方式(參考閱讀PHP的部分)"></a>AJAX4 - 使用PHP取得資料並且對比AJAX取得方式(參考閱讀PHP的部分)</h2><h3 id="GET"><a href="#GET" class="headerlink" title="GET"></a>GET</h3><p>使用正常PHP方式會整個reload網頁<br><img src="https://i.imgur.com/JsuWQEJ.gif"></p><p>使用AJAX會再背景處理資料<br><img src="https://i.imgur.com/7dtHe3H.gif"></p><p>一樣修改<code>xhr.open(process.php?name=$&#123;name&#125;)</code> 這個部分讓name的部分是input去輸入，其他AJAX部分的操作都差不多，PHP部分就不多做介紹只是舉例子示範</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button id=<span class="string">&quot;button&quot;</span>&gt;Get Name&lt;/button&gt;</span><br><span class="line">    &lt;hr&gt;</span><br><span class="line">    &lt;h1&gt;PHP GET FORM&lt;/h1&gt;</span><br><span class="line">    &lt;form metod=<span class="string">&quot;GET&quot;</span> action=<span class="string">&quot;process.php&quot;</span>&gt;</span><br><span class="line">        &lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;name&quot;</span>&gt;</span><br><span class="line">        &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;Submit&quot;</span>&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line"></span><br><span class="line">    &lt;h1&gt;PHP AJAX GET FORM&lt;/h1&gt;</span><br><span class="line">    &lt;form id=<span class="string">&quot;getForm&quot;</span>&gt;</span><br><span class="line">        &lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;name&quot;</span> id=<span class="string">&quot;name1&quot;</span>&gt;</span><br><span class="line">        &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;Submit&quot;</span>&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">&quot;button&quot;</span>).addEventListener(<span class="string">&quot;click&quot;</span>, getName);</span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">&quot;getForm&quot;</span>).addEventListener(<span class="string">&quot;submit&quot;</span>, getName);</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">getName</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">            e.preventDefault();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> name = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;name1&#x27;</span>).value;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">            xhr.open(<span class="string">&quot;GET&quot;</span>, <span class="string">`process.php?name=<span class="subst">$&#123;name&#125;</span>`</span>, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">            xhr.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="built_in">this</span>.responseText);</span><br><span class="line">            &#125;</span><br><span class="line">            xhr.send();</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><h3 id="POST"><a href="#POST" class="headerlink" title="POST"></a>POST</h3><p>頁面呈現其實跟GET差不多但是方法內容不同，可以做參考就好</p><p>POST PHP的寫法不太好懂不過也只是要呈現出跟AJAX的差異所以這邊不多做解釋<br>不過POST的作用是把資料傳進伺服器</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h1&gt;PHP POST FORM&lt;/h1&gt;</span><br><span class="line">    &lt;form method=<span class="string">&quot;POST&quot;</span> action=<span class="string">&quot;process.php&quot;</span>&gt;</span><br><span class="line">        &lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;name&quot;</span>&gt;</span><br><span class="line">        &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;Submit&quot;</span>&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line"></span><br><span class="line">    &lt;h1&gt;PHP AJAX POST FORM&lt;/h1&gt;</span><br><span class="line">    &lt;form id=<span class="string">&quot;postForm&quot;</span>&gt;</span><br><span class="line">        &lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;name&quot;</span> id=<span class="string">&quot;name2&quot;</span>&gt;</span><br><span class="line">        &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;Submit&quot;</span>&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">&quot;postForm&quot;</span>).addEventListener(<span class="string">&quot;submit&quot;</span>, postName);</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">postName</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">            e.preventDefault();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> name = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;name2&#x27;</span>).value;</span><br><span class="line">            <span class="keyword">var</span> params = <span class="string">&quot;name=&quot;</span> + name;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">            xhr.open(<span class="string">&#x27;POST&#x27;</span>, <span class="string">&#x27;process.php&#x27;</span>, <span class="literal">true</span>);</span><br><span class="line">            xhr.setRequestHeader(<span class="string">&#x27;Content-type&#x27;</span>, <span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span>);</span><br><span class="line"></span><br><span class="line">            xhr.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="built_in">this</span>.responseText);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            xhr.send(params);</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;AJAX-Crash-Course-Vanilla-JavaScript&quot;&gt;&lt;a href=&quot;#AJAX-Crash-Course-Vanilla-JavaScript&quot; class=&quot;headerlink&quot; title=&quot;AJAX Crash Course (V</summary>
      
    
    
    
    <category term="Javascript" scheme="http://example.com/categories/Javascript/"/>
    
    
    <category term="Javascript" scheme="http://example.com/tags/Javascript/"/>
    
  </entry>
  
  <entry>
    <title>JS-Fetch API Introduction(5000字)</title>
    <link href="http://example.com/2021/03/22/JS-Fetch%20API%20Introduction/"/>
    <id>http://example.com/2021/03/22/JS-Fetch%20API%20Introduction/</id>
    <published>2021-03-22T11:16:20.849Z</published>
    <updated>2021-03-22T11:19:44.219Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Fetch-API-Introduction-Vanilla-JavaScript"><a href="#Fetch-API-Introduction-Vanilla-JavaScript" class="headerlink" title="Fetch API Introduction(Vanilla JavaScript)"></a>Fetch API Introduction(Vanilla JavaScript)</h1><hr><h2 id="tags-Javascript-relate"><a href="#tags-Javascript-relate" class="headerlink" title="tags: Javascript relate"></a>tags: Javascript relate</h2><h6 id="tags-Javascript"><a href="#tags-Javascript" class="headerlink" title="tags: Javascript"></a>tags: <code>Javascript</code></h6><h1 id="使用Fetch-API取得plain-text"><a href="#使用Fetch-API取得plain-text" class="headerlink" title="使用Fetch API取得plain text"></a>使用Fetch API取得plain text</h1><h2 id="建立一個plain-text待會使用"><a href="#建立一個plain-text待會使用" class="headerlink" title="建立一個plain text待會使用"></a>建立一個plain text待會使用</h2><p><img src="https://i.imgur.com/qo8Shae.png"></p><h2 id="response印出的結果是目前response的一些狀態"><a href="#response印出的結果是目前response的一些狀態" class="headerlink" title="response印出的結果是目前response的一些狀態"></a>response印出的結果是目前response的一些狀態</h2><p><img src="https://i.imgur.com/w40HcCx.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button id=<span class="string">&quot;getText&quot;</span>&gt;Get Text&lt;/button&gt;</span><br><span class="line">    &lt;div id=<span class="string">&quot;div&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;script&gt;</span><br><span class="line">      <span class="built_in">document</span>.getElementById(<span class="string">&quot;getText&quot;</span>).addEventListener(<span class="string">&quot;click&quot;</span>, getText);</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">function</span> <span class="title">getText</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        fetch(<span class="string">&quot;sample.txt&quot;</span>).then(<span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">          <span class="built_in">console</span>.log(res);</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><h2 id="確認response的text"><a href="#確認response的text" class="headerlink" title="確認response的text()"></a>確認response的text()</h2><p>想要確認response的text()，卻得到還在pending的promise，同時可以看到裡面包含著value是我們要的內容，但目前還不能使用<br><img src="https://i.imgur.com/b5iqQch.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getText</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        fetch(<span class="string">&quot;sample.txt&quot;</span>).then(<span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">          <span class="built_in">console</span>.log(res.text());</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><h2 id="轉換response-成-text"><a href="#轉換response-成-text" class="headerlink" title="轉換response 成 text"></a>轉換response 成 text</h2><p>因為內容是plain tex所以必須轉換response 成 text<br>return其值後，再使用一次<code>.then</code>即可印出值摟!</p><p><img src="https://i.imgur.com/7sHhNNL.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getText</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        fetch(<span class="string">&quot;sample.txt&quot;</span>)</span><br><span class="line">          .then(<span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">          </span><br><span class="line">          <span class="comment">//因為內容是plain tex所以必須轉換response 成 text</span></span><br><span class="line">            <span class="keyword">return</span> res.text();</span><br><span class="line">          &#125;)</span><br><span class="line">          .then(<span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(data);</span><br><span class="line">          &#125;);</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><h2 id="使用箭頭函式寫一遍"><a href="#使用箭頭函式寫一遍" class="headerlink" title="使用箭頭函式寫一遍"></a>使用箭頭函式寫一遍</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">fetch(<span class="string">&quot;sample.txt&quot;</span>)</span><br><span class="line">          .then(<span class="function">(<span class="params">res</span>) =&gt;</span> res.text())</span><br><span class="line">          .then(<span class="function">(<span class="params">data</span>) =&gt;</span> <span class="built_in">console</span>.log(data));</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><h2 id="把獲取到的plain-text-貼到DOM"><a href="#把獲取到的plain-text-貼到DOM" class="headerlink" title="把獲取到的plain text 貼到DOM"></a>把獲取到的plain text 貼到DOM</h2><p><img src="https://i.imgur.com/QBcQ8jN.png"></p><p><img src="https://i.imgur.com/aKSmxFf.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">fetch(<span class="string">&quot;sample.txt&quot;</span>)</span><br><span class="line">          .then(<span class="function">(<span class="params">res</span>) =&gt;</span> res.text())</span><br><span class="line">          .then(<span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="built_in">document</span>.getElementById(<span class="string">&quot;div&quot;</span>).innerHTML = data;</span><br><span class="line">          &#125;);</span><br></pre></td></tr></table></figure><h2 id="catch"><a href="#catch" class="headerlink" title="catch()"></a><code>catch()</code></h2><p>當reject情況發生的時候的時候，會跑catch內部的函式</p><p>印出錯誤訊息以及字串”err”<br><img src="https://i.imgur.com/ZPQXl47.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">fetch(<span class="string">&quot;sample.txt&quot;</span>)</span><br><span class="line">          .then(<span class="function">(<span class="params">res</span>) =&gt;</span> res.text())</span><br><span class="line">          .then(<span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="built_in">document</span>.getElementById(<span class="string">&quot;divv&quot;</span>).innerHTML = data;</span><br><span class="line">          &#125;)</span><br><span class="line">          .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&quot;err&quot;</span>);</span><br><span class="line">            <span class="built_in">console</span>.error(err);</span><br><span class="line">          &#125;);</span><br></pre></td></tr></table></figure><h1 id="使用Fetch-API取得JSON格式的資料"><a href="#使用Fetch-API取得JSON格式的資料" class="headerlink" title="使用Fetch API取得JSON格式的資料"></a>使用Fetch API取得JSON格式的資料</h1><h2 id="先建立一個JSON檔案待會做取用"><a href="#先建立一個JSON檔案待會做取用" class="headerlink" title="先建立一個JSON檔案待會做取用"></a>先建立一個JSON檔案待會做取用</h2><p>從這邊可以看到要操作的資料被包裹在陣列裡面<br><img src="https://i.imgur.com/jFUOq7A.png"></p><h2 id="用forEach操作陣列資料後以ES6字串串接的方式呈現"><a href="#用forEach操作陣列資料後以ES6字串串接的方式呈現" class="headerlink" title="用forEach操作陣列資料後以ES6字串串接的方式呈現"></a>用forEach操作陣列資料後以ES6字串串接的方式呈現</h2><p>因為內容是JSON格式所以必須轉換response 成 JSON格式再使用forEach去逐個印出<br>forEach內部的函式是每一個印出的user該長的樣子讓他符合html的格式後再使用innerHTML貼上去outputs<br><img src="https://i.imgur.com/Dr8rzap.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getUsers</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        fetch(<span class="string">&quot;users.json&quot;</span>)</span><br><span class="line">          .then(<span class="function">(<span class="params">res</span>) =&gt;</span> res.json())</span><br><span class="line">          .then(<span class="function">(<span class="params">users</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> outputs = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            users.forEach(<span class="function">(<span class="params">user</span>) =&gt;</span> &#123;</span><br><span class="line">              outputs += <span class="string">`</span></span><br><span class="line"><span class="string">              &lt;ul&gt;</span></span><br><span class="line"><span class="string">                &lt;li&gt;ID:<span class="subst">$&#123;user.id&#125;</span>&lt;/li&gt;</span></span><br><span class="line"><span class="string">                &lt;li&gt;name:<span class="subst">$&#123;user.name&#125;</span>&lt;/li&gt;</span></span><br><span class="line"><span class="string">                &lt;li&gt;email:<span class="subst">$&#123;user.email&#125;</span>&lt;/li&gt;</span></span><br><span class="line"><span class="string">                &lt;/ul&gt;</span></span><br><span class="line"><span class="string">              `</span>;</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="built_in">document</span>.getElementById(<span class="string">&quot;div&quot;</span>).innerHTML = outputs;</span><br><span class="line">          &#125;);</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><h1 id="使用Fetch-API-POST-JSON格式的資料"><a href="#使用Fetch-API-POST-JSON格式的資料" class="headerlink" title="使用Fetch API POST JSON格式的資料"></a>使用Fetch API POST JSON格式的資料</h1><p>當點擊submit按鈕時，會送出POST方法。</p><p>下面有展示一些簡易的POST寫法，之後的.then處理方式是跟GET方法是一樣的</p><p><img src="https://i.imgur.com/P5SIhv4.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">    &lt;form id=<span class="string">&quot;addPost&quot;</span>&gt;</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">            &lt;input type=<span class="string">&quot;text&quot;</span> id=<span class="string">&quot;title&quot;</span> placeholder=<span class="string">&quot;Title&quot;</span>&gt;&lt;/input&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;div&gt;</span><br><span class="line">            &lt;textarea type=<span class="string">&quot;text&quot;</span> id=<span class="string">&quot;body&quot;</span> placeholder=<span class="string">&quot;Body&quot;</span><span class="string">&quot;&gt;&lt;/textarea&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;input type=&quot;</span>submit<span class="string">&quot; value=&quot;</span>submit<span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;/form&gt;</span></span><br><span class="line"><span class="string">    &lt;div id=&quot;</span>div<span class="string">&quot;&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;script&gt;</span></span><br><span class="line"><span class="string">      </span></span><br><span class="line"><span class="string">      document.getElementById(&quot;</span>addPost<span class="string">&quot;).addEventListener(&quot;</span>submit<span class="string">&quot;, addPost);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">      function addPost(e) &#123;</span></span><br><span class="line"><span class="string">          e.preventDefault();</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">          let title = document.getElementById(&quot;</span>title<span class="string">&quot;).value;</span></span><br><span class="line"><span class="string">          let body = document.getElementById(&quot;</span>body<span class="string">&quot;).value;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">          fetch(&#x27;https://jsonplaceholder.typicode.com/posts&#x27;, &#123;</span></span><br><span class="line"><span class="string">              method: &#x27;POST&#x27;,</span></span><br><span class="line"><span class="string">              headers: &#123;</span></span><br><span class="line"><span class="string">                  &#x27;Accept&#x27;: &#x27;application/json, text/plain, */*&#x27;,</span></span><br><span class="line"><span class="string">                  &#x27;Content-Type&#x27;: &#x27;application/json&#x27;</span></span><br><span class="line"><span class="string">              &#125;,</span></span><br><span class="line"><span class="string">              body:JSON.stringify(&#123;title: title, body: body&#125;)</span></span><br><span class="line"><span class="string">          &#125;)</span></span><br><span class="line"><span class="string">          .then((res) =&gt;res.json())</span></span><br><span class="line"><span class="string">          .then((data) =&gt;console.log(data))</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">    &lt;/script&gt;</span></span><br><span class="line"><span class="string">  &lt;/body&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Fetch-API-Introduction-Vanilla-JavaScript&quot;&gt;&lt;a href=&quot;#Fetch-API-Introduction-Vanilla-JavaScript&quot; class=&quot;headerlink&quot; title=&quot;Fetch API </summary>
      
    
    
    
    <category term="Javascript" scheme="http://example.com/categories/Javascript/"/>
    
    
    <category term="Javascript" scheme="http://example.com/tags/Javascript/"/>
    
  </entry>
  
  <entry>
    <title>JS-The Weird Part Of Javascript - part 2(一萬字)</title>
    <link href="http://example.com/2021/03/21/JS-The%20Weird%20Part%20Of%20Javascript%20-%20part%202/"/>
    <id>http://example.com/2021/03/21/JS-The%20Weird%20Part%20Of%20Javascript%20-%20part%202/</id>
    <published>2021-03-20T17:35:53.016Z</published>
    <updated>2021-03-21T18:30:55.743Z</updated>
    
    <content type="html"><![CDATA[<h1 id="The-Weird-Part-Of-Javascript-part-2"><a href="#The-Weird-Part-Of-Javascript-part-2" class="headerlink" title="The Weird Part Of Javascript - part 2"></a>The Weird Part Of Javascript - part 2</h1><h2 id="tags-Javascript-relate"><a href="#tags-Javascript-relate" class="headerlink" title="tags: Javascript relate"></a>tags: Javascript relate</h2><h6 id="tags-Javascript"><a href="#tags-Javascript" class="headerlink" title="tags: Javascript"></a>tags: <code>Javascript</code></h6><h1 id="物件與函式-Objects-And-Functions"><a href="#物件與函式-Objects-And-Functions" class="headerlink" title="物件與函式 (Objects And Functions)"></a>物件與函式 (Objects And Functions)</h1><blockquote><p>在其他程式語言中物件、函式是兩種完全不同的存在，但是在JS裡面它們非常相似</p></blockquote><h2 id="Objects-And-The-Dot"><a href="#Objects-And-The-Dot" class="headerlink" title="Objects And The Dot"></a>Objects And The Dot</h2><ul><li>物件(objects)是鍵值配對 (name:value pair) 的集合(不一定只有一對)</li><li>物件內可以包含有純值(Primitives)、另一個物件(Objects)、函式Function(或稱方法method)</li><li>上面標示的0x001是記憶體內部位置的範例，就像是它們的地址</li></ul><p><img src="https://i.imgur.com/zt3XHMD.png"></p><h3 id="範例"><a href="#範例" class="headerlink" title="範例"></a>範例</h3><p>這邊是為了作範例而這樣製作物件，不過會有更好的方式會在後面的章節介紹</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> person = <span class="keyword">new</span> <span class="built_in">Object</span>();</span><br><span class="line"></span><br><span class="line">person[<span class="string">&quot;firstname&quot;</span>] = <span class="string">&quot;Tony&quot;</span>;</span><br><span class="line">person[<span class="string">&quot;lastname&quot;</span>] = <span class="string">&quot;Alicea&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> firstNameProperty = <span class="string">&quot;firstname&quot;</span>;</span><br><span class="line"></span><br><span class="line">person.address = <span class="keyword">new</span> <span class="built_in">Object</span>();</span><br><span class="line">person.address.street = <span class="string">&quot;111 Main St.&quot;</span>;</span><br><span class="line">person.address.city = <span class="string">&quot;London&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(person); <span class="comment">//得到object</span></span><br><span class="line"><span class="built_in">console</span>.log(person[<span class="string">&quot;firstname&quot;</span>]); <span class="comment">//得到Tony</span></span><br><span class="line"><span class="built_in">console</span>.log(person[firstNameProperty])<span class="comment">//得到Tony</span></span><br><span class="line"><span class="built_in">console</span>.log(person.firstname);<span class="comment">//得到Tony</span></span><br><span class="line"><span class="built_in">console</span>.log(person.address.street); <span class="comment">//得到111 Main St.</span></span><br><span class="line"><span class="built_in">console</span>.log(person.address.city);<span class="comment">//得到London</span></span><br></pre></td></tr></table></figure><ol><li>我們設置一個物件person，並且新增兩個屬性firstname,lastname</li><li>把firstname指派給變數，一樣可以使用變數取得新增的內容</li><li>使用(.)可以更方便的新增屬性以及取得物件內容</li><li>使用 [ ] , (.) 這兩個運算子都能取得物件內容以及新增屬性</li></ol><p><img src="https://i.imgur.com/tLJUO9h.png"></p><p>[ ]  運算子</p><ul><li>需要使用字串型態</li><li>可使用變數指派的方式使用</li></ul><p>(.) 運算子</p><ul><li>編譯器可以直接閱讀不需要使用字串型態</li><li>不可使用變數指派方式使用</li><li>更簡潔易讀</li></ul><p><img src="https://i.imgur.com/QFtKBuI.png"></p><h1 id="物件、物件實字-Objects-And-Object-Literals"><a href="#物件、物件實字-Objects-And-Object-Literals" class="headerlink" title="物件、物件實字(Objects And Object Literals)"></a>物件、物件實字(Objects And Object Literals)</h1><ul><li>為了創造物件我們可以使用{ } 是 <code>new Object();</code>的縮寫</li><li>{} 不是運算子</li><li>JS引擎會判斷使用{ } 就是正在創造物件</li><li>只要用{ } 來建立物件的語法，就稱為物件實字 (Object Literals)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> Tony = &#123;<span class="attr">firstname</span>:<span class="string">&#x27;Tony&#x27;</span>,<span class="attr">lastname</span>:<span class="string">&#x27;Alicea&#x27;</span>&#125;;</span><br><span class="line"><span class="built_in">console</span>.log(Tony);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> Tony = <span class="keyword">new</span> <span class="built_in">Object</span>();</span><br><span class="line">person.firstname = <span class="string">&quot;Tony&quot;</span>;</span><br><span class="line">person.lastname = <span class="string">&quot;Alicea&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(Tony);</span><br></pre></td></tr></table></figure><p>會印出一樣的結果<br><img src="https://i.imgur.com/aUcJqIY.png"></p><p><strong>物件創建在物件之內</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> Tony = &#123;</span><br><span class="line">    firstname:<span class="string">&quot;Tony&quot;</span></span><br><span class="line">    address:&#123;</span><br><span class="line">        street:<span class="string">&#x27;111 Main St.&#x27;</span>,</span><br><span class="line">        city:<span class="string">&#x27;New York&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>創建在函式內部</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">greet</span>(<span class="params">person</span>)</span>&#123;</span><br><span class="line"> <span class="built_in">console</span>.log(<span class="string">&#x27;HI&#x27;</span> + person)</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">greet(&#123;</span><br><span class="line">firstname:<span class="string">&#x27;Mary&#x27;</span>,</span><br><span class="line">lastname:<span class="string">&#x27;Doe&#x27;</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>使用在增添屬性上面</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Tony.company = &#123;</span><br><span class="line">    street: <span class="string">&#x27;333 Second St.&#x27;</span>,</span><br><span class="line">    companyName: <span class="string">&#x27;Sucess&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="框架小叮嚀-Framework-Aside"><a href="#框架小叮嚀-Framework-Aside" class="headerlink" title="框架小叮嚀(Framework Aside)"></a>框架小叮嚀(Framework Aside)</h1><ul><li>JS是沒有namespace，因為{ }的關係不需要</li><li>可以使用{ } 創造出物件來假扮命名空間</li><li>在框架或是函式庫的原始碼中很常看到這樣的使用方式</li></ul><h2 id="Faking-Namespaces"><a href="#Faking-Namespaces" class="headerlink" title="Faking Namespaces"></a>Faking Namespaces</h2><h3 id="命名空間-Namespace"><a href="#命名空間-Namespace" class="headerlink" title="命名空間(Namespace)"></a>命名空間(Namespace)</h3><p>專門給變數以及函式使用的空間，讓同樣名字的變數或是函式可以做區隔</p><h3 id="範例-1"><a href="#範例-1" class="headerlink" title="範例"></a>範例</h3><p>兩個變數名稱一樣時上方的變數會被複寫，因此印出Hola!</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> greet = <span class="string">&#x27;Hello!&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> greet = <span class="string">&#x27;Hola!&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(greet); <span class="comment">// Renders Hola!</span></span><br></pre></td></tr></table></figure><p>為了避免上面的複寫情況發生，我們可以使用Faking Namespaces，創造一個物件來包裹住這些變數，這樣就能避免變數或是函式之間名字相同的衝突或是複寫的狀況發生摟!</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> greet = <span class="string">&#x27;Hello!&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> greet = <span class="string">&#x27;Hola!&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> english = &#123;&#125;;</span><br><span class="line"><span class="keyword">var</span> spanish = &#123;&#125;;</span><br><span class="line"></span><br><span class="line">english.greet = <span class="string">&#x27;Hello!&#x27;</span>;</span><br><span class="line">spanish.greet = <span class="string">&#x27;Hola!&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="範例二"><a href="#範例二" class="headerlink" title="範例二"></a>範例二</h3><p>命名空稱使用的{ }物件可以做很多層:</p><p>把greet包裹在greeting裡面</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> greet = <span class="string">&#x27;Hello!&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> english = &#123;&#125;;</span><br><span class="line"></span><br><span class="line">english.greeting = &#123;&#125;;</span><br><span class="line">english.greeting.greet = <span class="string">&#x27;Hello!&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(english);</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/xHDptD5.png"></p><p>也可以使用物件實字:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> greet = <span class="string">&#x27;Hello!&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> english = &#123;</span><br><span class="line">    greeting:&#123;</span><br><span class="line">        greet:<span class="string">&quot;Hello!&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(english);</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/MNGbIRI.png"></p><h1 id="JSON以及物件實字-JSON-And-Object-Literals"><a href="#JSON以及物件實字-JSON-And-Object-Literals" class="headerlink" title="JSON以及物件實字(JSON And Object Literals)"></a>JSON以及物件實字(JSON And Object Literals)</h1><ul><li>JSON (JavaScript Object Notation)</li><li>跟物件的型態非常相似</li><li>有數個方法可以使用來轉換JSON</li></ul><p>一般物件型態:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> objectLiteral = &#123;</span><br><span class="line">    firstname: <span class="string">&#x27;Mary&#x27;</span>,</span><br><span class="line">    isAProgrammer: <span class="literal">true</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>JSON型態:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;firstname&quot;</span>: <span class="string">&quot;Mary&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isAProgrammer&quot;</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>轉換物件成JSON格式可以使用<code>JSON.stringify()</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">JSON</span>.stringify(objectLiteral);</span><br></pre></td></tr></table></figure><p>轉換JSON為物件給JS使用<code>JSON.parse()</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> jsonValue = <span class="built_in">JSON</span>.parse(<span class="string">&#x27;&#123; &quot;firstname&quot;: &quot;Mary&quot;, &quot;isAProgrammer&quot;: true &#125;&#x27;</span>);</span><br></pre></td></tr></table></figure><h1 id="函式就是物件-Function-Are-Objects"><a href="#函式就是物件-Function-Are-Objects" class="headerlink" title="函式就是物件(Function Are Objects)"></a>函式就是物件(Function Are Objects)</h1><h2 id="First-Class-Functions"><a href="#First-Class-Functions" class="headerlink" title="First Class Functions"></a>First Class Functions</h2><ul><li>你可以對函式做對於其他類型(字串、數字、物件、布林值等)都可以做的事情</li><li>可以指派函式為變數</li><li>可以把函式當成參數給其他函式使用</li><li>可以在literal syntax中使用函式</li></ul><p><img src="https://i.imgur.com/Uc94cSq.png"></p><p>函式是一種特殊的物件，但正因為它是物件所以他可以使用純值、物件、函式</p><p>以及兩種特殊的屬性 </p><ol><li>name(非必須，有匿名函式)</li><li>code也就是使用者撰寫的程式碼並且它是可以被呼叫的”Invocable”()</li></ol><h2 id="範例-2"><a href="#範例-2" class="headerlink" title="範例"></a>範例</h2><p>能成功地給函式加上屬性代表函式真的是一種物件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">greet</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;h1&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">greet.language = <span class="string">&#x27;English&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(greet.language);</span><br></pre></td></tr></table></figure><ol><li>設置一個函式greet，內容為印出hi</li><li>給函式加上屬性</li><li>印出greet.language</li></ol><p>得出結果 正是加上去的屬性<br><img src="https://i.imgur.com/31dfkx9.png"></p><h2 id="“Invocable”"><a href="#“Invocable”" class="headerlink" title="“Invocable”()"></a>“Invocable”()</h2><p><img src="https://i.imgur.com/eyOntey.png"></p><ul><li>當創造這個greet 函式時，它會被放到記憶體裡(以目前的例子會放到全域物件裡)</li><li>函式會有個名字屬性 greet</li><li>函式會有code屬性也就是 <code>console.log(&quot;h1&quot;);</code></li><li>然而當呼叫greet()這邊使用括弧來呼叫函式</li></ul><h2 id="作者非常強調"><a href="#作者非常強調" class="headerlink" title="作者非常強調"></a>作者非常強調</h2><blockquote><p>JS的函式就是物件</p></blockquote><h1 id="函式陳述式、函式表達式-Function-Statements-And-Function-Expressions"><a href="#函式陳述式、函式表達式-Function-Statements-And-Function-Expressions" class="headerlink" title="函式陳述式、函式表達式(Function Statements And Function Expressions)"></a>函式陳述式、函式表達式(Function Statements And Function Expressions)</h1><h2 id="表達式-Expression"><a href="#表達式-Expression" class="headerlink" title="表達式(Expression)"></a>表達式(Expression)</h2><ul><li>它不必須存在變數之中</li><li>一段會創造值(value)的程式碼</li></ul><h3 id="表達式範例"><a href="#表達式範例" class="headerlink" title="表達式範例"></a>表達式範例</h3><ul><li>(=),(+)運算子都會回傳結果，因此他們兩個都是表達式</li></ul><p><code>var a;</code></p><p><img src="https://i.imgur.com/QWDWw1J.png"></p><ul><li>只要有回傳值就是表達式(下方回傳物件)</li></ul><p><img src="https://i.imgur.com/Nwn6KsN.png"></p><h2 id="陳述式-statement"><a href="#陳述式-statement" class="headerlink" title="陳述式(statement)"></a>陳述式(statement)</h2><p>判斷式if 就是個很好的例子</p><ul><li>不會返回值</li><li>無法把if判斷式指派給變數</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(a ===<span class="number">3</span>)&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="函式陳述式範例"><a href="#函式陳述式範例" class="headerlink" title="函式陳述式範例"></a>函式陳述式範例</h2><ul><li>一開始就會被寫進記憶體中</li><li>具有Hoisting特性</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">greet</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;h1&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>這段函式它不會回傳值因為它沒有被呼叫，所以它就是個函式陳述式，只代表它被放置於記憶體中，也就代表著<strong>Hositing</strong></p><p>因此我們可以這樣使用:</p><ol><li>先呼叫函式</li><li>撰寫函式本體</li><li>依舊可以印出結果</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">greet();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">greet</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;h1&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="函式表達式範例"><a href="#函式表達式範例" class="headerlink" title="函式表達式範例"></a>函式表達式範例</h2><ul><li><p>一開始不會被寫進記憶體</p></li><li><p>執行時建立這個函數物件使用指向該函數記憶體的變數進行呼叫(也就是指派給變數做呼叫)</p></li><li><p>匿名函式的部分就是函式表達式</p><p><img src="https://i.imgur.com/T0hnU0W.png"></p></li></ul><p>注意: 這邊可以發現匿名函式的部分就是函式表達式，因為它會產生值</p><ol><li>創造匿名函式</li><li>把函式指派給變數 anonymousGreet</li><li>使用”()”  anonymousGreet()</li><li>就可以呼叫此匿名函式瞜</li></ol><p>#關於匿名函式的部分，其實可以命名，但是基於程式碼簡潔的關係以及其實函式位置已經綁訂於變數所以命名這部分是比較多餘的</p><h2 id="函式表達式無法做Hoisting"><a href="#函式表達式無法做Hoisting" class="headerlink" title="函式表達式無法做Hoisting"></a>函式表達式無法做Hoisting</h2><ul><li>因為變數的預設值為undefined</li><li>要到變數被執行了才會知道它的值，所以只會先顯示undefined那當然不是個函式</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">anonymousGreet();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> anonymousGreet = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;h1 &#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/OtTr7EZ.png"></p><h2 id="把函式作為參數丟進另一個函式"><a href="#把函式作為參數丟進另一個函式" class="headerlink" title="把函式作為參數丟進另一個函式"></a>把函式作為參數丟進另一個函式</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">log</span>(<span class="params">a</span>) </span>&#123;</span><br><span class="line">    a();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">log(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;h1&#x27;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>把函式做完參數傳送</li><li>這樣的寫法其實就是下方範例，也就是<a href="#First-Class-Functions">First Class Functions</a>的概念</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;h1&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">a();</span><br></pre></td></tr></table></figure><h1 id="Conceptual-Aside"><a href="#Conceptual-Aside" class="headerlink" title="Conceptual Aside"></a>Conceptual Aside</h1><h2 id="By-Value-vs-By-reference"><a href="#By-Value-vs-By-reference" class="headerlink" title="By Value vs By reference"></a>By Value vs By reference</h2><ul><li>這邊主要談論的都是指變數</li><li>reference 像是記憶體中的地址</li><li>value 代表變數的值</li></ul><h3 id="By-Value"><a href="#By-Value" class="headerlink" title="By Value"></a>By Value</h3><blockquote><p>讓兩個變數有相同的value藉由複製value的方式但是有兩個不同的reference</p></blockquote><ul><li>所有純值都是傳值(By value)</li></ul><ol><li>設置 a = 純值(數字、字串)</li><li>這時候純值會有個reference就像是它的地址讓變數a可以找到它</li><li>讓 新的變數b b = a </li><li>這時候b就會複製純值的value到不一樣的地址b</li></ol><p><img src="https://i.imgur.com/pPMboQa.png"></p><h3 id="By-Value-範例"><a href="#By-Value-範例" class="headerlink" title="By Value 範例"></a>By Value 範例</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// by value(primitives)</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">var</span> b;</span><br><span class="line"></span><br><span class="line">b = a;</span><br><span class="line"></span><br><span class="line">a = <span class="number">2</span>;</span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br><span class="line"><span class="built_in">console</span>.log(b);</span><br></pre></td></tr></table></figure><p>印出結果<br><img src="https://i.imgur.com/piUJv9Y.png"></p><p>因為by value只會複製值不會複製reference所以，b還是保持在新的地址，a的變化跟b無關</p><h3 id="Mutate"><a href="#Mutate" class="headerlink" title="Mutate"></a>Mutate</h3><p>改變某樣東西</p><ul><li>Immutable 代表無法被改變</li></ul><h3 id="By-reference"><a href="#By-reference" class="headerlink" title="By reference"></a>By reference</h3><blockquote><p>讓兩個物件有相同的物件藉由給予同樣的reference並不是複製同樣的內容</p></blockquote><ul><li>所有的物件都是傳址(by reference)</li><li>不管是處理把他們(物件)設置相等或是傳入函式</li></ul><ol><li>設置 a = 純值(數字、字串)</li><li>這時候純值會有個reference就像是它的地址讓變數a可以找到它</li><li>讓 新的變數b b = a </li><li>這時候b會藉由原本 a 的reference找到其value</li></ol><p><img src="https://i.imgur.com/JMYnTYu.png"></p><h3 id="By-reference-範例"><a href="#By-reference-範例" class="headerlink" title="By reference 範例"></a>By reference 範例</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// by reference(all objects(including function))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> c = &#123;</span><br><span class="line">    greeting: <span class="string">&#x27;hi&#x27;</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> d;</span><br><span class="line"></span><br><span class="line">d = c;</span><br><span class="line">c.greeting = <span class="string">&#x27;hello&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(c);</span><br><span class="line"><span class="built_in">console</span>.log(d);</span><br></pre></td></tr></table></figure><p>印出結果:<br><img src="https://i.imgur.com/1ixoIdP.png"></p><p>因為By reference 傳遞的是地址，所以兩個物件c d 基本上是在一樣的地址一樣的內容，修改其一另一個一樣也被修改</p><h3 id="By-reference-even-as-parameters-範例"><a href="#By-reference-even-as-parameters-範例" class="headerlink" title="By reference(even as parameters) 範例"></a>By reference(even as parameters) 範例</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">changeGreeting</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line">    obj.greeting = <span class="string">&#x27;Hola&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">changeGreeting(d);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(c);</span><br><span class="line"><span class="built_in">console</span>.log(d);</span><br></pre></td></tr></table></figure><p>印出結果:<br><img src="https://i.imgur.com/VjO4C4H.png"></p><p>把物件使用參數做傳遞，一樣是傳址，因此兩個傳遞對象是一樣的地址，修改一個其他都會修改</p><h3 id="By-reference-使用-指派-範例-特例"><a href="#By-reference-使用-指派-範例-特例" class="headerlink" title="By reference 使用(=)指派 範例(特例)"></a>By reference 使用(=)指派 範例(特例)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">c = &#123;</span><br><span class="line">    greeting: <span class="string">&#x27;Howdy&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(c);</span><br><span class="line"><span class="built_in">console</span>.log(d);</span><br></pre></td></tr></table></figure><p>印出結果:<br><img src="https://i.imgur.com/2Mbfcfb.png"></p><ul><li>這邊可以看到不是說reference是傳址，所以兩方物件應該會一樣?</li><li>但是(=)運算子可以設定新的記憶體地址給c因此c,d印出來的結果不同了</li></ul><h1 id="物件、函式以及’this’-Objects-Functions-And-‘this’"><a href="#物件、函式以及’this’-Objects-Functions-And-‘this’" class="headerlink" title="物件、函式以及’this’(Objects, Functions, And ‘this’)"></a>物件、函式以及’this’(Objects, Functions, And ‘this’)</h1><p><img src="https://i.imgur.com/RIdUSQV.png"></p><ul><li>函式就是物件: 其中有兩個特殊屬性 code, name</li><li>當函式被呼叫時(也就是code的部分)，會創造出執行背景(Execution Context)，接著會被擺入執行堆(Execution stack)，這會決定這個函式會如何被執行</li><li>當執行背景被創造出來時，內部都會有variable Environment也就是變數被創造在函式內部</li><li>也會有Outer Environment也就是當在函式內部找不到變數使用時，會往外部尋找參考一直找到全域變數為止(再來也沒了)</li><li>但我們也知道每天JS引擎創造執行背景時都會創造’this’這個變數，甚至我們不需要輸入任何內容</li><li>而這個this會指向(代表)不同的物件取決於這個函式是如何被呼叫</li></ul><h2 id="‘this’的指向"><a href="#‘this’的指向" class="headerlink" title="‘this’的指向"></a>‘this’的指向</h2><h3 id="範例一"><a href="#範例一" class="headerlink" title="範例一"></a>範例一</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">this</span>);</span><br><span class="line">    <span class="built_in">this</span>.newvariable = <span class="string">&#x27;hello&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> b = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">a();</span><br><span class="line"><span class="built_in">console</span>.log(newvariable);</span><br><span class="line">b();</span><br></pre></td></tr></table></figure><p>這邊設置了三種情況</p><ol><li>一定有的golbal object</li><li>函式陳述式</li><li>函式表達式</li></ol><p>結果印出來:</p><p>全部都指向window這個global object<br>並且可以直接給global object加上屬性都沒問題</p><p><img src="https://i.imgur.com/DlKoeZ0.png"></p><ul><li>當值是純值的時候被稱為property</li><li>當值是函式的時候被稱為method</li></ul><h3 id="範例二-例外"><a href="#範例二-例外" class="headerlink" title="範例二(例外)"></a>範例二(例外)</h3><p>這邊把this使用在物件內部的函式也就是methods</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> c = &#123;</span><br><span class="line">    name: <span class="string">&#x27;The c object&#x27;</span>,</span><br><span class="line">    log: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">c.log();</span><br></pre></td></tr></table></figure><p>印出結果:<br><img src="https://i.imgur.com/q1ClvKP.png"></p><p>竟然是指向了object</p><p>並且可以這樣使用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> c = &#123;</span><br><span class="line">    name: <span class="string">&#x27;The c object&#x27;</span>,</span><br><span class="line">    log: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.name = <span class="string">&quot;I can change name&quot;</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">c.log();</span><br></pre></td></tr></table></figure><p>印出結果:<br><img src="https://i.imgur.com/rBANwZ9.png"></p><p>竟然可以通過this的指向來操作物件的內容key的部分</p><h3 id="範例三-類似bug"><a href="#範例三-類似bug" class="headerlink" title="範例三(類似bug)"></a>範例三(類似bug)</h3><p>於是我們找到一個類似於JS引擎比較類似缺點的地方:</p><p>透過函式表達式的方式使用變數傳遞函式在物件內部的methods內，並且使用this再次改寫一次name屬性，這邊理論上應該會使”I can change name”修改成’change name again’</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> c = &#123;</span><br><span class="line">    name: <span class="string">&#x27;The c object&#x27;</span>,</span><br><span class="line">    log: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.name = <span class="string">&quot;I can change name&quot;</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">this</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> setname = <span class="function"><span class="keyword">function</span> (<span class="params">newname</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.name = newname;</span><br><span class="line">        &#125;</span><br><span class="line">        setname(<span class="string">&#x27;change name again&#x27;</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">c.log();</span><br></pre></td></tr></table></figure><p>印出結果:</p><p>沒有任何變化<br>剛剛以為透過物件內部的methods內部的this會指向物件本身，但是這邊的this卻指向別的地方</p><p><img src="https://i.imgur.com/p3yMbyc.png"></p><p>打開window全域物件查看發現，這邊的this竟然指向的位置是全域物件window<br><img src="https://i.imgur.com/S0rUjDo.png"></p><h3 id="範例四-範例三的解答"><a href="#範例四-範例三的解答" class="headerlink" title="範例四(範例三的解答)"></a>範例四(範例三的解答)</h3><p>如何避免這樣的情況發生呢?</p><p>把this的位置好好綁訂好並且把每個地方的this都使用變數確認是使用同一個this指向同一個地方就可以解決這個問題摟!</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> c = &#123;</span><br><span class="line">    name: <span class="string">&#x27;The c object&#x27;</span>,</span><br><span class="line">    log: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> self = <span class="built_in">this</span>;</span><br><span class="line"></span><br><span class="line">        self.name = <span class="string">&quot;I can change name&quot;</span></span><br><span class="line">        <span class="built_in">console</span>.log(self);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> setname = <span class="function"><span class="keyword">function</span> (<span class="params">newname</span>) </span>&#123;</span><br><span class="line">            self.name = newname;</span><br><span class="line">        &#125;</span><br><span class="line">        setname(<span class="string">&#x27;change name again&#x27;</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(self);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">c.log();</span><br></pre></td></tr></table></figure><p>印出結果:</p><p>這次的this就正常的指向物件本身因此可以修改name屬性搂!</p><p><img src="https://i.imgur.com/Xq4GGwA.png"></p><h1 id="Conceptual-Aside-1"><a href="#Conceptual-Aside-1" class="headerlink" title="Conceptual Aside"></a>Conceptual Aside</h1><h2 id="Arrays-Collection-of-Anything"><a href="#Arrays-Collection-of-Anything" class="headerlink" title="Arrays Collection of Anything"></a>Arrays Collection of Anything</h2><p>創造一個array<br><code>var arr = new Array();</code></p><p>使用array literal syntax<br><code>var arr = [];</code></p><p>JS的array是以0為基底的:</p><p><code>console.log(arr[0])</code></p><p>可以印出array第一個元素</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;The-Weird-Part-Of-Javascript-part-2&quot;&gt;&lt;a href=&quot;#The-Weird-Part-Of-Javascript-part-2&quot; class=&quot;headerlink&quot; title=&quot;The Weird Part Of Java</summary>
      
    
    
    
    <category term="Javascript" scheme="http://example.com/categories/Javascript/"/>
    
    
    <category term="Javascript" scheme="http://example.com/tags/Javascript/"/>
    
  </entry>
  
  <entry>
    <title>實作練習-Mars Weather - SASS project</title>
    <link href="http://example.com/2021/02/27/Mars-Weather-SASS-project/"/>
    <id>http://example.com/2021/02/27/Mars-Weather-SASS-project/</id>
    <published>2021-02-26T17:25:13.199Z</published>
    <updated>2021-03-20T14:56:02.878Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Mars-Weather-SASS-project"><a href="#Mars-Weather-SASS-project" class="headerlink" title="Mars Weather - SASS project"></a>Mars Weather - SASS project</h1><hr><h2 id="tags-HTML-CSS-SASS-relate"><a href="#tags-HTML-CSS-SASS-relate" class="headerlink" title="tags: HTML, CSS, SASS relate"></a>tags: HTML, CSS, SASS relate</h2><h6 id="tags-HTML-CSS-SASS"><a href="#tags-HTML-CSS-SASS" class="headerlink" title="tags: HTML, CSS, SASS"></a>tags: <code>HTML, CSS, SASS</code></h6><h1 id="製作一個火星天氣觀測網頁"><a href="#製作一個火星天氣觀測網頁" class="headerlink" title="製作一個火星天氣觀測網頁"></a>製作一個火星天氣觀測網頁</h1><h2 id="成品"><a href="#成品" class="headerlink" title="成品:"></a>成品:</h2><p><img src="https://i.imgur.com/XEPEoF7.jpg"></p><p><a href="https://chiehliu.github.io/git-projects/MarsWeatherApp/index.html">成品網址</a></p><h2 id="成品功能"><a href="#成品功能" class="headerlink" title="成品功能:"></a>成品功能:</h2><ol><li>cel/fah 的按鈕可以做切換</li><li>下方的七天天氣可以點擊按鈕開關</li></ol><h1 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h1><h2 id="html-程式碼"><a href="#html-程式碼" class="headerlink" title="html 程式碼:"></a>html 程式碼:</h2><h1 id="SCSS"><a href="#SCSS" class="headerlink" title="SCSS"></a>SCSS</h1><h2 id="全域設定"><a href="#全域設定" class="headerlink" title="全域設定"></a>全域設定</h2><ul><li>全域設定 border-box 這樣做 margin, padding, border 比較方便</li><li>設定所有的顏色、文字大小以及粗細</li><li>.sr-only 主要給聽障人士使用(這邊用來隱藏元素)</li><li>body, h1, a 都是比較常見的設定</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">*,</span><br><span class="line">*::before,</span><br><span class="line">*::after &#123;</span><br><span class="line">    box-sizing: border-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">:root &#123;</span><br><span class="line">    --fw-light: 300;</span><br><span class="line">    --fw-normal: 400;</span><br><span class="line">    --fw-semi: 500;</span><br><span class="line">    --fw-bold: 700;</span><br><span class="line">    --fs-h1: 1.5rem;</span><br><span class="line">    --fs-h2: 2.25rem;</span><br><span class="line">    --fs-body: 1rem;</span><br><span class="line">    --fs-xl: 4.5rem;</span><br><span class="line">    --clr-light: #fff;</span><br><span class="line">    --clr-gray: #989898;</span><br><span class="line">    --clr-dark: #444;</span><br><span class="line">    --clr-accent: #D06D6D;</span><br><span class="line">    --clr-accent-dark: #613131;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.sr-only:not(:focus):not(:active) &#123;</span><br><span class="line">    clip: rect(0 0 0 0);</span><br><span class="line">    clip-path: inset(50%);</span><br><span class="line">    height: 1px;</span><br><span class="line">    overflow: hidden;</span><br><span class="line">    position: absolute;</span><br><span class="line">    white-space: nowrap;</span><br><span class="line">    width: 1px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">body &#123;</span><br><span class="line">    margin: 0;</span><br><span class="line">    font-family: &#39;Montserrat&#39;, sans-serif;</span><br><span class="line">    line-height: 1.6;</span><br><span class="line">    background-image: url(https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;kevin-powell&#x2F;Mars-Weather-App&#x2F;master&#x2F;img&#x2F;mars.jpg);</span><br><span class="line">    background-size: cover;</span><br><span class="line">    height: 100vh;</span><br><span class="line">    overflow: hidden;</span><br><span class="line">    color: var(--clr-light);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">h1,</span><br><span class="line">h2,</span><br><span class="line">h3 &#123;</span><br><span class="line">    line-height: 1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">a &#123;</span><br><span class="line">    color: var(--clr-accent);</span><br><span class="line"></span><br><span class="line">    &amp;:hover &#123;</span><br><span class="line">        color: var(--clr-accent-dark);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="mars-current-weather"><a href="#mars-current-weather" class="headerlink" title=".mars-current-weather"></a>.mars-current-weather</h2><p><img src="https://i.imgur.com/gYmJTHU.png"></p><ul><li>做 grid 以及分三個欄位(等長)等下做使用</li><li>設定 max-width 避免拉太長跑版</li><li>背景做透明</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">.mars-current-weather &#123;</span><br><span class="line">    background: rgba(0, 0, 0, .7);</span><br><span class="line">    padding: 2em;</span><br><span class="line">    max-width: 1000px;</span><br><span class="line">    margin: 4em 0 0 4em;</span><br><span class="line">    display: grid;</span><br><span class="line">    grid-template-columns: repeat(3, 1fr);</span><br><span class="line">    grid-gap: 2em;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="main-title"><a href="#main-title" class="headerlink" title=".main-title"></a>.main-title</h3><p><img src="https://i.imgur.com/nX7kr8L.png"></p><ul><li>抓取 grid 的欄位 1~-1 讓 main-title 可以延續整個面板長度</li><li>全轉成大寫</li><li>字母間距 2px(作者喜好)</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.main-title &#123;</span><br><span class="line">    font-size: var(--fs-h1);</span><br><span class="line">    font-weight: var(--fw-light);</span><br><span class="line">    text-transform: uppercase;</span><br><span class="line">    color: var(--clr-accent);</span><br><span class="line">    letter-spacing: 2px;</span><br><span class="line">    grid-column: 1&#x2F;-1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="section-title"><a href="#section-title" class="headerlink" title=".section-title"></a>.section-title</h3><p>綠色框框處<br><img src="https://i.imgur.com/lRzFp5Z.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.section-title &#123;</span><br><span class="line">    font-size: var(--fs-h2);</span><br><span class="line">    font-weight: var(--fw-bold);</span><br><span class="line">    margin: 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>讓日期部分最大最顯眼</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.section-title--date &#123;</span><br><span class="line">    font-size: var(--fs-xl);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="reading"><a href="#reading" class="headerlink" title=".reading"></a>.reading</h3><p>綠色框框處<br><img src="https://i.imgur.com/bwK3ooy.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.reading &#123;</span><br><span class="line">    font-size: var(--fs-h1);</span><br><span class="line">    margin: 0;</span><br><span class="line">    color: var(--clr-gray);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="date"><a href="#date" class="headerlink" title=".date"></a>.date</h3><p>內容包含天次以及日期<br><img src="https://i.imgur.com/6swOmfN.png"></p><p>整個視窗的抓取位置在第一到第二欄位</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">.date &#123;</span><br><span class="line">    grid-column: 1&#x2F;2;</span><br><span class="line"></span><br><span class="line">    &amp;__day &#123;</span><br><span class="line">        font-size: var(--fs-h2);</span><br><span class="line">        margin: 0;</span><br><span class="line">        color: var(--clr-gray);</span><br><span class="line">        font-weight: var(--fw-light);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="temp"><a href="#temp" class="headerlink" title=".temp"></a>.temp</h3><p><img src="https://i.imgur.com/1aNYy25.png"></p><ul><li>抓取位置在第二到第三格</li><li>處理左右兩邊的格線</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">.temp &#123;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 像這邊的var設置在temp裡面所以並不能給外面使用</span><br><span class="line">    --border: solid .25em var(--clr-accent-dark);</span><br><span class="line">    grid-column: 2&#x2F;3;</span><br><span class="line">    border-left: var(--border);</span><br><span class="line">    border-right: var(--border);</span><br><span class="line">    padding: 0 2em;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="wind"><a href="#wind" class="headerlink" title=".wind"></a>.wind</h3><p><img src="https://i.imgur.com/KgNXJMV.png"></p><p>第二次 grid 為了排列圓盤以及標題風速<br><img src="https://i.imgur.com/TSATGVa.png"></p><p>第三次 grid 為了排列指針<br><img src="https://i.imgur.com/OEpfQMh.png"></p><h4 id="整個-wind-區塊"><a href="#整個-wind-區塊" class="headerlink" title="整個.wind 區塊"></a>整個.wind 區塊</h4><ul><li>抓取位置在第三到第四格</li><li>在進行第二次 gird 為了讓內容物作排列</li></ul><h4 id="圓盤區域"><a href="#圓盤區域" class="headerlink" title="圓盤區域"></a>圓盤區域</h4><ul><li>進行第三次 grid 為了排列裡面的指針並且使用<code>place-items: center;</code>全置中</li><li>圓盤的部份跨越了兩個 row 所以使用<code>grid-row: 1/span 2;</code></li></ul><h4 id="指針區域"><a href="#指針區域" class="headerlink" title="指針區域"></a>指針區域</h4><ul><li>指針的部份使用 clip-path: polygon 裁剪出三角形</li><li>使用 transform 做好定位並且指向 0 度的方向</li><li>transform-origin 讓三角形的旋轉是以底部的中心點轉才不會偏調</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">.wind &#123;</span><br><span class="line">    grid-column: 3&#x2F;4;</span><br><span class="line">    display: grid;</span><br><span class="line">    grid-template-columns: repeat(2, 1fr);</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 這一步是為了讓Wind標題與風速之間的間距縮小讓行距大小跟內容一樣</span><br><span class="line">    grid-template-rows: min-content 1fr;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F;往上對齊</span><br><span class="line">    align-self: start;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F;幫它們做好排列位置</span><br><span class="line">    .section-title,</span><br><span class="line">    .reading &#123;</span><br><span class="line">        grid-column: 2&#x2F;3;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F;圓圈的部分修飾</span><br><span class="line">    &amp;__direction &#123;</span><br><span class="line">        --size: 6rem;</span><br><span class="line">        width: var(--size);</span><br><span class="line">        height: var(--size);</span><br><span class="line">        background-color: rgba(255, 255, 255, .5);</span><br><span class="line">        border-radius: 50%;</span><br><span class="line">        display: grid;</span><br><span class="line">        place-items: center;</span><br><span class="line">        grid-row: 1&#x2F;span 2;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &amp;__arrow &#123;</span><br><span class="line">        --direction: 0deg;</span><br><span class="line">        --size: 1rem;</span><br><span class="line">        height: calc(var(--size)*3);</span><br><span class="line">        width: var(--size);</span><br><span class="line">        background: var(--clr-accent-dark);</span><br><span class="line">        clip-path: polygon(50% 0, 0% 100%, 100% 100%);</span><br><span class="line">        transform: translateY(-50%) rotate(var(--direction));</span><br><span class="line">        transform-origin: bottom center;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="info"><a href="#info" class="headerlink" title=".info"></a>.info</h3><p><img src="https://i.imgur.com/2BG9XHx.png"></p><ul><li>抓取位置</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.info &#123;</span><br><span class="line">    grid-column: 1&#x2F;3;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="unit"><a href="#unit" class="headerlink" title=".unit"></a>.unit</h3><p>可調整式按鈕藉由 SCSS 全部製作出來!<br><img src="https://i.imgur.com/s3HT8kN.png"></p><h4 id="整個外框"><a href="#整個外框" class="headerlink" title="整個外框"></a>整個外框</h4><p><img src="https://i.imgur.com/TEn4KgA.png"></p><ul><li>先放置到位置<code>grid-column: 3/4;</code></li><li>使用 place-self:end 會把物件放到最右邊最下方</li><li>要把 unit 內部元素弄成一橫排直接 flex</li><li>做一點透明度以及 hover 時會有特效</li></ul><h4 id="input-區域的-checkbox"><a href="#input-區域的-checkbox" class="headerlink" title="input 區域的 checkbox"></a>input 區域的 checkbox</h4><p>隱藏前的樣子<br><img src="https://i.imgur.com/DMfjeRx.png"></p><ul><li>引入的 sr-only 的內容隱藏 checkbox</li></ul><h4 id="unit-toggle"><a href="#unit-toggle" class="headerlink" title="unit__toggle"></a>unit__toggle</h4><ul><li>中間的橢圓形外框修飾</li></ul><h4 id="unit-toggle-after"><a href="#unit-toggle-after" class="headerlink" title="unit__toggle::after"></a>unit__toggle::after</h4><ul><li>中間的圓球的部分點擊兩側的溫度則會移動，左側自動填滿 margin 所以球會移動到最右邊</li><li><img src="https://i.imgur.com/8FZWj2V.png"> 因為這個 checked 關係球會預設在 °C</li><li>使用<code>margin-left:auto;</code>會讓球往右邊跑因為左邊 auto 直接填滿</li><li>使用<code>margin-left: 3px;</code>會讓球回到左側因為 3px 就是原本預設的 margin</li></ul><p>偽類選擇器<code>:checked</code>只會使用在任何選中狀態下的<code>radio(&lt;input type=&quot;radio&quot;&gt;)，checkbox (&lt;input type=&quot;checkbox&quot;&gt;) 或(&quot;select&quot;) </code>元素中的 option HTML 元素(“option”)。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">:checked~.unit__toggle::after &#123;</span><br><span class="line">        margin-left: 3px;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">.unit &#123;</span><br><span class="line">    grid-column: 3&#x2F;4;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; place-self是align-self and justify-self的縮寫</span><br><span class="line">    &#x2F;&#x2F; 使用end會把物件放到最右邊最下方</span><br><span class="line">    place-self: end;</span><br><span class="line">    color: var(--clr-light);</span><br><span class="line">    display: flex;</span><br><span class="line">    opacity: .7;</span><br><span class="line">    transition: opacity 275ms linear;</span><br><span class="line"></span><br><span class="line">    &amp;:hover &#123;</span><br><span class="line">        opacity: 1;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    label &#123;</span><br><span class="line">        cursor: pointer;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 要隱藏input區域那個圓形checkbox</span><br><span class="line">    &#x2F;&#x2F; 一樣使用sr-only的屬性貼在這邊使用</span><br><span class="line">    input &#123;</span><br><span class="line">        clip: rect(0 0 0 0);</span><br><span class="line">        &#x2F;&#x2F; 這個clip-path主要會把input的checkbox裁減掉</span><br><span class="line">        clip-path: inset(50%);</span><br><span class="line">        height: 1px;</span><br><span class="line">        overflow: hidden;</span><br><span class="line">        position: absolute;</span><br><span class="line">        white-space: nowrap;</span><br><span class="line">        width: 1px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 中間按鈕的部分修飾</span><br><span class="line">    &amp;__toggle &#123;</span><br><span class="line">        cursor: pointer;</span><br><span class="line">        width: 4em;</span><br><span class="line">        border: 2px solid var(--clr-light);</span><br><span class="line">        background: transparent;</span><br><span class="line">        padding: 0;</span><br><span class="line">        &#x2F;&#x2F; vmax &#x3D; vh,vw的最大值</span><br><span class="line">        border-radius: 100vmax;</span><br><span class="line">        margin: 0 1em;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; 中間圓點修飾</span><br><span class="line">        &amp;::after &#123;</span><br><span class="line">            content: &#39;&#39;;</span><br><span class="line">            display: block;</span><br><span class="line">            background: var(--clr-light);</span><br><span class="line">            border-radius: 50%;</span><br><span class="line">            height: 1rem;</span><br><span class="line">            margin: 3px;</span><br><span class="line">            width: 1rem;</span><br><span class="line">            &#x2F;&#x2F; 左側自動填滿margin所以球會移動到最右邊</span><br><span class="line">            margin-left: auto;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 偽類選擇器:checked只會使用在任何選中狀態下的radio(&lt;input type&#x3D;&quot;radio&quot;&gt;)，checkbox (&lt;input type&#x3D;&quot;checkbox&quot;&gt;) 或(&quot;select&quot;) 元素中的option HTML元素(&quot;option&quot;)。</span><br><span class="line">    &#x2F;&#x2F; 當選中checked時則底下的after修飾也就是圓點的部分會移動回左邊只有margin:3px的狀態</span><br><span class="line">    :checked~.unit__toggle::after &#123;</span><br><span class="line">        margin-left: 3px;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="previous-weather"><a href="#previous-weather" class="headerlink" title=".previous-weather"></a>.previous-weather</h2><p><img src="https://i.imgur.com/7cAFRnC.png"></p><ul><li>把整個區塊往下拉</li><li>下拉做動畫<code>transition: transform 350ms ease;</code></li></ul><h3 id="previous-weather-1"><a href="#previous-weather-1" class="headerlink" title=".previous-weather"></a>.previous-weather</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">.previous-weather &#123;</span><br><span class="line">    background: var(--clr-light);</span><br><span class="line">    color: var(--clr-dark);</span><br><span class="line">    position: absolute;</span><br><span class="line">    bottom: 0;</span><br><span class="line">    width: 100%;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 把previous-weather欄位往下60%</span><br><span class="line">    transform: translateY(60%);</span><br><span class="line">    transition: transform 350ms ease;</span><br><span class="line">    padding: 3em;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="show-previous-weather"><a href="#show-previous-weather" class="headerlink" title=".show-previous-weather"></a>.show-previous-weather</h3><p><img src="https://i.imgur.com/3KYFK2x.png"></p><ul><li>設定定位上面<code>transform: translate(-50%, calc(-100% - 3rem));</code>因為整個 previou-weather 視窗 padding 是 3rem 這邊必須扣掉不然會超出去</li><li>line-height 跟其他地方一樣都設定 1</li><li>clip-path: polygon 一樣使用裁減功能成三角形</li><li>特別的地方是 font-family 必須使用繼承 inherit 才吃的到</li></ul><h4 id="span"><a href="#span" class="headerlink" title=".span"></a>.span</h4><ul><li>span 的部份做箭頭旋轉特效但這邊還沒轉顯示正常的 0 度</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">.show-previous-weather &#123;</span><br><span class="line">    cursor: pointer;</span><br><span class="line">    position: absolute;</span><br><span class="line">    background: var(--clr-light);</span><br><span class="line">    left: 50%;</span><br><span class="line">    width: 10rem;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 這邊因為在previous-weather上加入padding會使箭頭區域跑掉所以加上clac而外加上3rem來確保位置不會跑掉</span><br><span class="line">    transform: translate(-50%, calc(-100% - 3rem));</span><br><span class="line">    text-align: center;</span><br><span class="line">    font-size: var(--fs-h2);</span><br><span class="line">    line-height: 1;</span><br><span class="line">    clip-path: polygon(50% 0, 0 100%, 100% 100%);</span><br><span class="line">    color: var(--clr-gray);</span><br><span class="line">    border: 0;</span><br><span class="line">    font-family: inherit;</span><br><span class="line"></span><br><span class="line">    &amp;:hover,</span><br><span class="line">    &amp;:focus &#123;</span><br><span class="line">        color: var(--clr-dark);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    span &#123;</span><br><span class="line">        display: block;</span><br><span class="line">        transform: rotate(0);</span><br><span class="line">        transition: transform 300ms ease;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="previous-days-previous-weather-title-previous-day"><a href="#previous-days-previous-weather-title-previous-day" class="headerlink" title=".previous-days, .previous-weather__title, .previous-day"></a>.previous-days, .previous-weather__title, .previous-day</h3><p>下方的整區<br><img src="https://i.imgur.com/s2nuu2M.png"></p><ul><li>flex 直接讓他們成行排列並且 space-between 讓中間空隙一樣</li><li>title 置中</li><li>針對文字，按鈕做修飾</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">.previous-days &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    justify-content: space-between;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.previous-weather__title &#123;</span><br><span class="line">    text-align: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.previous-day &#123;</span><br><span class="line">    opacity: 0;</span><br><span class="line"></span><br><span class="line">    &amp;&gt;* &#123;</span><br><span class="line">        margin: 0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &amp;__date &#123;</span><br><span class="line">        font-size: .9rem;</span><br><span class="line">        color: var(--clr-gray);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &amp;__more-info &#123;</span><br><span class="line">        border: 0;</span><br><span class="line">        border-radius: 100vmax;</span><br><span class="line">        background: var(--clr-dark);</span><br><span class="line">        color: var(--clr-light);</span><br><span class="line">        text-transform: uppercase;</span><br><span class="line">        padding: .3em 1em;</span><br><span class="line">        cursor: pointer;</span><br><span class="line">        margin-top: 1em;</span><br><span class="line"></span><br><span class="line">        &amp;:hover &#123;</span><br><span class="line">            background: var(--clr-gray)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="show-weather-previous-weather"><a href="#show-weather-previous-weather" class="headerlink" title=".show-weather.previous-weather"></a>.show-weather.previous-weather</h3><p>這邊針對加上.show-weather 的.previous-weather 做處理也就是整個視窗移上來的時候</p><h4 id="span-1"><a href="#span-1" class="headerlink" title="span"></a>span</h4><ul><li>當視窗移動上來的時候 span 裡面的箭頭會轉 180 度</li><li>Y 軸也要調整不然會跑版</li></ul><h4 id="previous-weather-title-previous-day"><a href="#previous-weather-title-previous-day" class="headerlink" title=".previous-weather__title, .previous-day"></a>.previous-weather__title, .previous-day</h4><ul><li>做透明變成不透明特效並且製作 slideUpIn 特效</li><li>使用 forwards 讓特效結束後停在原地不繼續執行</li><li>把標題移動到左邊</li></ul><h4 id="使用-each"><a href="#使用-each" class="headerlink" title="使用@each"></a>使用@each</h4><ul><li>個別印出不同的 delay 時間做出這個特效</li></ul><p><img src="https://i.imgur.com/oUpYZDj.gif"></p><ul><li>使用 sass list 建立包含(index delay 時間)</li><li>使用 each 個別印出 list 內部所有元素</li><li>使用#{}選取動態的變數丟入 nth-child()內</li><li>使用 nth()選取 list 內部的第一位以及第二位分別貼上 nth-child,animation-delay</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$slidTime: 1 100ms,</span><br><span class="line">    2 125ms,</span><br><span class="line">    3 150ms,</span><br><span class="line">    4 175ms,</span><br><span class="line">    5 200ms,</span><br><span class="line">    6 225ms,</span><br><span class="line">    7 250ms;</span><br><span class="line"></span><br><span class="line">    @each $slide in $slidTime &#123;</span><br><span class="line">        .previous-day:nth-child(#&#123;nth($slide,1)&#125;) &#123;</span><br><span class="line">            animation-delay: #&#123;nth($slide,2)&#125;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="keyframes"><a href="#keyframes" class="headerlink" title="@keyframes"></a>@keyframes</h4><ul><li>設定透明以及標題移動特效</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">.show-weather.previous-weather &#123;</span><br><span class="line">    transform: translateY(0);</span><br><span class="line"></span><br><span class="line">    .show-previous-weather span &#123;</span><br><span class="line">        display: block;</span><br><span class="line">        transform: rotate(180deg) translateY(-6px);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .previous-weather__title,</span><br><span class="line">    .previous-day &#123;</span><br><span class="line">        opacity: 1;</span><br><span class="line">        animation: slideUpIn 750ms forwards;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .previous-weather__title &#123;</span><br><span class="line">        text-align: left;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 讓previous-day的資料有一個一個上來的特效</span><br><span class="line">    $slidTime: 1 100ms,</span><br><span class="line">    2 125ms,</span><br><span class="line">    3 150ms,</span><br><span class="line">    4 175ms,</span><br><span class="line">    5 200ms,</span><br><span class="line">    6 225ms,</span><br><span class="line">    7 250ms;</span><br><span class="line"></span><br><span class="line">    @each $slide in $slidTime &#123;</span><br><span class="line">        .previous-day:nth-child(#&#123;nth($slide,1)&#125;) &#123;</span><br><span class="line">            animation-delay: #&#123;nth($slide,2)&#125;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@keyframes slideUpIn &#123;</span><br><span class="line">    0% &#123;</span><br><span class="line">        opacity: 0;</span><br><span class="line">        transform: translateY(50%);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    100% &#123;</span><br><span class="line">        opacity: 1;</span><br><span class="line">        transform: translateY(0%);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Mars-Weather-SASS-project&quot;&gt;&lt;a href=&quot;#Mars-Weather-SASS-project&quot; class=&quot;headerlink&quot; title=&quot;Mars Weather - SASS project&quot;&gt;&lt;/a&gt;Mars Weat</summary>
      
    
    
    
    <category term="HTML, CSS 作品" scheme="http://example.com/categories/HTML-CSS-%E4%BD%9C%E5%93%81/"/>
    
    
    <category term="SASS" scheme="http://example.com/tags/SASS/"/>
    
    <category term="HTML" scheme="http://example.com/tags/HTML/"/>
    
    <category term="CSS" scheme="http://example.com/tags/CSS/"/>
    
    <category term="Grid" scheme="http://example.com/tags/Grid/"/>
    
  </entry>
  
  <entry>
    <title>實作練習-Clothes Store - SASS Project</title>
    <link href="http://example.com/2021/02/27/[%E4%BD%9C%E5%93%81]Clothes-Store-SASS-Project/"/>
    <id>http://example.com/2021/02/27/[%E4%BD%9C%E5%93%81]Clothes-Store-SASS-Project/</id>
    <published>2021-02-26T17:25:13.199Z</published>
    <updated>2021-03-20T14:54:55.348Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Clothes-Store-SASS-Project"><a href="#Clothes-Store-SASS-Project" class="headerlink" title="Clothes Store - SASS Project"></a>Clothes Store - SASS Project</h1><hr><h2 id="tags-Javascript-relate"><a href="#tags-Javascript-relate" class="headerlink" title="tags: Javascript relate"></a>tags: Javascript relate</h2><h6 id="tags-HTML-CSS-SASS"><a href="#tags-HTML-CSS-SASS" class="headerlink" title="tags: HTML, CSS, SASS"></a>tags: <code>HTML, CSS, SASS</code></h6><h1 id="製作一個衣服購物網站"><a href="#製作一個衣服購物網站" class="headerlink" title="製作一個衣服購物網站"></a>製作一個衣服購物網站</h1><h2 id="成品"><a href="#成品" class="headerlink" title="成品:"></a>成品:</h2><p><img src="https://i.imgur.com/hEEPgbC.jpg"></p><p><a href="https://chiehliu.github.io/git-projects/clothesStore/index.html">成品網址</a></p><h2 id="成品功能"><a href="#成品功能" class="headerlink" title="成品功能:"></a>成品功能:</h2><p>1.有兩條 navbar 其中一條有 hover 出下拉選單 2.投影片區域每 4 秒更新，淺入淺出特效 3.商品區域 hover 出現價錢跟購買按鈕並且商品帶有透明特效 4.下方 see more 按鈕有特效處理<br>5.footer 區域字樣以及按鈕做 hover 變色，input 內部區域做 focus 外框變色<br>6.RWD 針對 1200, 1000, 760, 560px 大小作處理</p><h1 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h1><h2 id="html-程式碼"><a href="#html-程式碼" class="headerlink" title="html 程式碼:"></a>html 程式碼:</h2><p><a href="https://github.com/chiehLiu/git-projects/blob/clothesStore/clothesStore/index.html">html.index</a></p><h1 id="SCSS"><a href="#SCSS" class="headerlink" title="SCSS:"></a>SCSS:</h1><p>下面我以資料夾做分類解析</p><h1 id="main-scss"><a href="#main-scss" class="headerlink" title="main.scss"></a>main.scss</h1><h2 id="main-scss-1"><a href="#main-scss-1" class="headerlink" title="main.scss"></a>main.scss</h2><p>處理全部的 import 並且按照資料夾分類處理</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">@import &quot;abstracts&#x2F;variables&quot;;</span><br><span class="line">@import &quot;abstracts&#x2F;mixins&quot;;</span><br><span class="line">@import &quot;base&#x2F;base&quot;;</span><br><span class="line"></span><br><span class="line">@import &quot;layout&#x2F;header&quot;;</span><br><span class="line">@import &quot;layout&#x2F;navigation&quot;;</span><br><span class="line">@import &quot;layout&#x2F;slideshow&quot;;</span><br><span class="line">@import &quot;layout&#x2F;products&quot;;</span><br><span class="line">@import &quot;layout&#x2F;footer&quot;;</span><br><span class="line"></span><br><span class="line">@import &quot;components&#x2F;logo&quot;;</span><br><span class="line">@import &quot;components&#x2F;heading&quot;;</span><br><span class="line">@import &quot;components&#x2F;dropdown&quot;;</span><br><span class="line">@import &quot;components&#x2F;button&quot;;</span><br></pre></td></tr></table></figure><h1 id="base"><a href="#base" class="headerlink" title="base"></a>base</h1><h2 id="base-scss"><a href="#base-scss" class="headerlink" title="_base.scss"></a>_base.scss</h2><h3 id="全域字體大小處理"><a href="#全域字體大小處理" class="headerlink" title="全域字體大小處理"></a>全域字體大小處理</h3><p>作者想要使用 10px 代替 16px 作為基礎 1rem 因為比較方便<br>所以 10/16=0.625 使用到趴數上面就是 62.5%</p><h3 id="container-包裹住全體物件的容器直接設計-grid-框架上去"><a href="#container-包裹住全體物件的容器直接設計-grid-框架上去" class="headerlink" title=".container 包裹住全體物件的容器直接設計 grid 框架上去"></a><code>.container</code> 包裹住全體物件的容器直接設計 grid 框架上去</h3><p>作者把物件都用這些 grid 出現的格線去做排列，並且把上面的元素固定在規畫好的格線內</p><ul><li>grid-template-columns 設定每一行的每個區塊怎麼分大小以及分幾塊</li><li>grid-template-rows 設定每一列的每個區塊怎麼分大小以及分幾塊</li><li>grid-row-gap 行的間距</li></ul><p><img src="https://i.imgur.com/hwQ8u4N.jpg"></p><ul><li><code>minmax()</code>使用兩個參數(最大值, 最小值) 功能使內容物不跑版</li><li>fr 代表可用空間的分塊的每一塊的的代表假設寫成 1fr,1fr,1fr 代表區塊分成三塊並且大小相同<br>寫成 2fr,1fr,1fr 代表第一塊是兩倍大其他兩個大小相同</li><li>max/min-content 代表所屬 block 的最大以及最小值下方範例使用<code>min-content</code>代表最小所以都是最小單位也就是內容物多大這個空間就多大</li><li>使用函式<code>color()</code>取用 map <code>$colors</code>裡面的內容</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">    margin: 0;</span><br><span class="line">    padding: 0;</span><br><span class="line">    font-family: &#39;Josefin Sans&#39;, sans-serif;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 這邊因為作者想要使用10px代替16px作為基礎 1rem 因為比較方便</span><br><span class="line">&#x2F;&#x2F; 所以10&#x2F;16&#x3D;0.625 使用到趴數上面就是62.5%</span><br><span class="line">html &#123;</span><br><span class="line">    font-size: 62.5%;</span><br><span class="line"></span><br><span class="line">    @include response(md) &#123;</span><br><span class="line">        font-size: 56.25%;</span><br><span class="line">        &#x2F;&#x2F;9&#x2F;16 &#x3D; 56.25;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @include response(sm) &#123;</span><br><span class="line">        font-size: 50%;</span><br><span class="line">        &#x2F;&#x2F;8&#x2F;16 &#x3D; 56.25;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; minmax使用兩個參數(最大值, 最小值) 功能使內容物不跑版</span><br><span class="line">&#x2F;&#x2F; fr代表可用空間的分塊的每一塊的的代表假設寫成 1fr,1fr,1fr代表區塊分成三塊並且大小相同</span><br><span class="line">&#x2F;&#x2F; 寫成 2fr,1fr,1fr代表第一塊是兩倍大其他兩個大小相同</span><br><span class="line">&#x2F;&#x2F; max&#x2F;min-content 代表所屬block的最大以及最小值下方範例使用min-content代表最小所以都是最小單位</span><br><span class="line">&#x2F;&#x2F;使用函式color取用map $colors裡面的內容</span><br><span class="line">.container &#123;</span><br><span class="line">    display: grid;</span><br><span class="line">    grid-template-columns: minmax(6rem, 1fr) repeat(8, minmax(min-content, 16rem)) minmax(6rem, 1fr);</span><br><span class="line">    grid-template-rows: repeat(4, min-content);</span><br><span class="line">    grid-row-gap: 1.6rem;</span><br><span class="line">    background-color: color(tertiary);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="abstracts"><a href="#abstracts" class="headerlink" title="abstracts"></a>abstracts</h1><h2 id="variables-scss"><a href="#variables-scss" class="headerlink" title="_variables.scss"></a>_variables.scss</h2><p>設置顏色，文字的 function</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$colors: (primary:#333,</span><br><span class="line">    secondary:#ffe,</span><br><span class="line">    tertiary:#f2f0f1,</span><br><span class="line">    quaternary:#f5b149,</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">@function color($color-name) &#123;</span><br><span class="line">    @return map-get($colors, $color-name);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$font-sizes:(xl:3rem,</span><br><span class="line">    lg:2.5rem,</span><br><span class="line">    md:2rem,</span><br><span class="line">    sm:1.8rem,</span><br><span class="line">    xs:1.6rem);</span><br><span class="line"></span><br><span class="line">@function size($size) &#123;</span><br><span class="line">    @return map-get($font-sizes, $size);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="mixins-scss"><a href="#mixins-scss" class="headerlink" title="_mixins.scss"></a>_mixins.scss</h2><h3 id="navigation"><a href="#navigation" class="headerlink" title="navigation"></a>navigation</h3><p>first-nav/second-nav 重複的地方直接擷取近來這邊:</p><ul><li>display</li><li>定位 space-around</li><li>height</li><li>list-style</li><li>link 部分字體的修飾以及 hover 特效</li></ul><h3 id="flexPosition-justCont-center-alignIte-center"><a href="#flexPosition-justCont-center-alignIte-center" class="headerlink" title="flexPosition($justCont: center, $alignIte:center)"></a>flexPosition($justCont: center, $alignIte:center)</h3><p>預設全置中</p><ul><li>display: flex</li><li>justify-content: $justCont</li><li>align-items: $alignIte</li></ul><h3 id="footerList"><a href="#footerList" class="headerlink" title="footerList"></a>footerList</h3><ul><li>處理 footer 文字部分修飾</li><li>hover 特效</li></ul><h3 id="response"><a href="#response" class="headerlink" title="response"></a>response</h3><p>處理全部的 RWD<br>並且使用 if 判斷式下方舉一個做例子:</p><p>判斷的地方填入 sm,md,lg,xl 來做數字的代替，並且使用@content 來代替不同的處理內容會寫在各處要被處理的地方裡面這邊的@content 比較像個代表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@if($breakpoint&#x3D;&#x3D;xl) &#123;</span><br><span class="line">        @media(max-width:1200px) &#123;</span><br><span class="line">            @content;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h1 id="components"><a href="#components" class="headerlink" title="components"></a>components</h1><h2 id="buttons-scss"><a href="#buttons-scss" class="headerlink" title="_buttons.scss"></a>_buttons.scss</h2><p><img src="https://i.imgur.com/F2N4TI8.png"></p><p>處理 products 區域下方的 See More btn:</p><ol><li>position 定位 relative</li><li>寬高</li><li>定位部分選擇 space-around</li></ol><h3 id="hover-特效"><a href="#hover-特效" class="headerlink" title="hover 特效:"></a>hover 特效:</h3><p><img src="https://i.imgur.com/bidBhwR.gif"></p><p>主要處理整個背景伸長 箭頭旋轉、伸長特效</p><ul><li>寬度增加</li><li>文字變色</li><li>箭頭尖端處移動<br>設定三條直線的 div 並且作 Z 軸旋轉，為了因應 hover 特效則處理水平移動</li><li>箭柄伸長<br>設定的直線做水平移動達到伸長特效</li></ul><h2 id="dropdown-scss"><a href="#dropdown-scss" class="headerlink" title="_dropdown.scss"></a>_dropdown.scss</h2><p>使用<code>::after</code>做出 icon 效果<br><img src="https://i.imgur.com/aizQeh8.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&amp;::after &#123;</span><br><span class="line">        font-family: &#39;Font Awesome 5 Free&#39;;</span><br><span class="line">        content: &#39;\f078&#39;;</span><br><span class="line">        font-weight: bold;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>處理 hover 特效碰到才會出現不然一般呈現隱藏以及透明</p><p><img src="https://i.imgur.com/Ub0GVKo.gif"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&amp;:hover .dropdown &#123;</span><br><span class="line">        visibility: visible;</span><br><span class="line">        opacity: 1;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>使用<code>@mixin navigation</code>裡面的文字變色特效以及文字修飾</p><h3 id="小三角形凸起處"><a href="#小三角形凸起處" class="headerlink" title="小三角形凸起處"></a>小三角形凸起處</h3><p>使用<code>&amp;::before</code>來做出右上角的尖角<br><img src="https://i.imgur.com/O8FevAH.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">border-right: 15px solid transparent;</span><br><span class="line">border-bottom: 15px solid darken(color(tertiary), 5%);</span><br><span class="line">border-left: 15px solid transparent;</span><br></pre></td></tr></table></figure><h2 id="heading-scss"><a href="#heading-scss" class="headerlink" title="_heading.scss"></a>_heading.scss</h2><p>大標題文字修飾<br><img src="https://i.imgur.com/4eU3ZFp.png"></p><p>使用 gird-colum/row 抓取位置後開始修飾文字</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">.heading &#123;</span><br><span class="line">    grid-column: 1&#x2F;-1;</span><br><span class="line">    grid-row: 2 &#x2F; 3;</span><br><span class="line">    text-align: center;</span><br><span class="line"></span><br><span class="line">    &amp;-text &#123;</span><br><span class="line">        font-family: &#39;Great Vibes&#39;, cursive;</span><br><span class="line">        font-size: size(xl)*2;</span><br><span class="line">        font-weight: lighter;</span><br><span class="line">        letter-spacing: 0.5rem;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="logo-scss"><a href="#logo-scss" class="headerlink" title="_logo.scss"></a>_logo.scss</h2><p><img src="https://i.imgur.com/tea4ivA.png"></p><p>使用 gird-colum/row 抓取位置後開始修飾圖片並且高度設定 100%做 RWD</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">.logo &#123;</span><br><span class="line">    grid-column: 1&#x2F;2;</span><br><span class="line">    grid-row: 1&#x2F;2;</span><br><span class="line">    padding: 1rem;</span><br><span class="line"></span><br><span class="line">    &amp;-img &#123;</span><br><span class="line">        width: 10rem;</span><br><span class="line">        height: 100%;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="layout"><a href="#layout" class="headerlink" title="layout"></a>layout</h1><h2 id="header-scss"><a href="#header-scss" class="headerlink" title="_header.scss"></a>_header.scss</h2><p>在最外層的 gird 容器內再 grid 的一次並且再度劃分行、列的大小</p><p>以行舉例:<br>三個區塊紅 minmax(6rem, 1fr)黃(repeat)綠 minmax(6rem, 1fr)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">minmax(10rem, 1fr) repeat(7, minmax(min-content, 16rem)) minmax(10rem, 1fr);</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/W5LeISF.png"></p><p><img src="https://i.imgur.com/VcwwHao.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">.header &#123;</span><br><span class="line">    grid-column: 1 &#x2F; -1;</span><br><span class="line">    grid-row: 1 &#x2F; 2;</span><br><span class="line">    display: grid;</span><br><span class="line">    grid-template-columns: minmax(10rem, 1fr) repeat(7, minmax(min-content, 16rem)) minmax(10rem, 1fr);</span><br><span class="line">    grid-template-rows: repeat(3, min-content);</span><br><span class="line">    grid-gap: 2rem;</span><br><span class="line">    z-index: 100;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="navigation-scss"><a href="#navigation-scss" class="headerlink" title="_navigation.scss"></a>_navigation.scss</h2><p>使用<code>@mixin navigation</code> 修飾 navbar 文字</p><p>基本上都在操作 RWD</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">.second-nav &#123;</span><br><span class="line">    grid-column: 3&#x2F;8;</span><br><span class="line">    grid-row: 3&#x2F;4;</span><br><span class="line">    @include navigation;</span><br><span class="line"></span><br><span class="line">    @include response(lg) &#123;</span><br><span class="line">        grid-column: 2&#x2F;9;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @include response(md) &#123;</span><br><span class="line">        grid-column: 1&#x2F;-1;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="slideshow-scss"><a href="#slideshow-scss" class="headerlink" title="_slideshow.scss"></a>_slideshow.scss</h2><p>幻燈片 slide 特效配上 fade in&amp;out 每四秒跑一張<br><img src="https://i.imgur.com/6I0c1rT.png"></p><ul><li>使用 grid 抓好位置</li><li>設定 position:relative 待會給 description 坐定位使用</li><li>寬度設定 100%做 RWD 長度抓 80vh 螢幕大小</li><li>RWD 部分更換 vh 大小很直觀</li></ul><h3 id="每張-slide-處理"><a href="#每張-slide-處理" class="headerlink" title="每張 slide 處理"></a>每張 slide 處理</h3><ul><li>每張 slide 長寬繼承父層</li><li>必須先把預設做隱藏不然會 20 秒會才跑第一個動畫</li><li>避免圖片失真<code>object-fit: cover</code></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&amp;-slide &#123;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; 使用定位之後會讓所有圖片疊再一起，最後一張在最上層</span><br><span class="line">        position: absolute;</span><br><span class="line">        top: 0;</span><br><span class="line">        left: 0;</span><br><span class="line">        width: inherit;</span><br><span class="line">        height: inherit;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; 這邊如果不把slide隱藏掉的話20s過後才會開始跑動畫</span><br><span class="line">        visibility: hidden;</span><br><span class="line">        opacity: 0;</span><br><span class="line">        animation: slideshow 20s linear infinite;</span><br><span class="line"></span><br><span class="line">        img &#123;</span><br><span class="line">            width: inherit;</span><br><span class="line">            height: inherit;</span><br><span class="line">            &#x2F;&#x2F; 避免圖片失真</span><br><span class="line">            object-fit: cover;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="slide-特效處理"><a href="#slide-特效處理" class="headerlink" title="slide 特效處理"></a>slide 特效處理</h3><p>先建立 list 後跑 each loop 可以得到這個效果出現在 main.css 裡面<br><img src="https://i.imgur.com/7tcMPJk.png"></p><p>list:每 4 秒建立一個</p><p>each loop:<br>使用<code>nth-child()</code>選取指定元素並且內部參數放入動態的變數<code>#&#123;&#125;</code>再使用<code>nth()</code>抓取要迭代的內容<code>$item</code>的第一部分，animation-delay 的部份則抓取<code>$item</code>的第二部分也就是秒數</p><p>@keyframes 動畫名稱</p><p>製作動畫內容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 使用list 建立第幾個元素以及delay幾秒</span><br><span class="line">$animList: 1 0s,</span><br><span class="line">2 4s,</span><br><span class="line">3 8s,</span><br><span class="line">4 12s,</span><br><span class="line">5 16s;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 使用nth(前面擺入每個要被個別印出的的元素也就是(1 0s)(2 4s)的代表參數, 後方會擺入index從1開始算起)</span><br><span class="line">@each $item in $animList &#123;</span><br><span class="line">    .slideshow-slide:nth-child(#&#123;nth($item,1)&#125;) &#123;</span><br><span class="line">        animation-delay: nth($item, 2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 這邊製作fade in&#x2F;out 的特效頭跟尾都處理隱藏以及透明達到這樣的效果</span><br><span class="line">@keyframes slideshow &#123;</span><br><span class="line">    0% &#123;</span><br><span class="line">        visibility: hidden;</span><br><span class="line">        opacity: 0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    2% &#123;</span><br><span class="line">        visibility: visible;</span><br><span class="line">        opacity: 1;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    18% &#123;</span><br><span class="line">        visibility: visible;</span><br><span class="line">        opacity: 1;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    20% &#123;</span><br><span class="line">        visibility: hidden;</span><br><span class="line">        opacity: 0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    100% &#123;</span><br><span class="line">        visibility: hidden;</span><br><span class="line">        opacity: 0;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="products-scss"><a href="#products-scss" class="headerlink" title="_products.scss"></a>_products.scss</h2><p><img src="https://i.imgur.com/OH9RHss.png"></p><p>商品陳列區域包含一個具有 hover 特效的按鈕</p><p>商品也有 hover 特效，沒有 hover 的時候會隱藏</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&amp;:hover .product-description &#123;</span><br><span class="line">        opacity: 1;</span><br><span class="line">        visibility: visible;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &amp;:hover .product-img &#123;</span><br><span class="line">        opacity: .5;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/MWNCkAL.gif"></p><p>商品描述欄位</p><p>基本處理一些內文背景的修飾</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&amp;-description &#123;</span><br><span class="line">       position: absolute;</span><br><span class="line">       top: 50%;</span><br><span class="line">       left: 50%;</span><br><span class="line">       transform: translate(-50%, -50%);</span><br><span class="line">       background-color: transparentize(color(secondary), .4);</span><br><span class="line">       padding: 2rem;</span><br><span class="line">       border: .1rem solid color(primary);</span><br><span class="line">       border-radius: .5rem;</span><br><span class="line">       color: color(primary);</span><br><span class="line">       text-align: center;</span><br><span class="line">       opacity: 0;</span><br><span class="line">       visibility: hidden;</span><br><span class="line">       transition: all 1s .5s;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><p>商品內文區塊的整體修飾</p><p>標題/價錢/按鈕</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&amp;-heading &#123;</span><br><span class="line">            font-size: size(xl);&#125;</span><br><span class="line"></span><br><span class="line">&amp;-price &#123;</span><br><span class="line">            font-size: size(lg);</span><br><span class="line">            font-weight: 300;</span><br><span class="line">            margin: 1rem 0;&#125;</span><br><span class="line"></span><br><span class="line">&amp;-btn &#123;</span><br><span class="line">            font-size: size(xs);</span><br><span class="line">            text-decoration: none;</span><br><span class="line">            color: color(quaternary);</span><br><span class="line">            display: block;</span><br><span class="line">            padding: .5rem 1rem;</span><br><span class="line">            border: .1rem solid color(quaternary);</span><br><span class="line">            background-color: lighten(color(primary), 20%);&#125;</span><br></pre></td></tr></table></figure><h2 id="footer-scss"><a href="#footer-scss" class="headerlink" title="_footer.scss"></a>_footer.scss</h2><h3 id="聯絡資訊"><a href="#聯絡資訊" class="headerlink" title="聯絡資訊"></a>聯絡資訊</h3><ul><li>更多資訊欄位</li><li>sign up 欄位</li><li>聯絡資訊欄位</li></ul><p><img src="https://i.imgur.com/EkIRMXd.png"></p><p>這邊很聰明的地方是針對最左最右兩邊做處理的時候直接使用<code>@mixin</code>處理重複的部分<br>也就是 footerList 這個部分直接統一文字修飾處理</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">@mixin footerList &#123;</span><br><span class="line">    &amp;-heading &#123;</span><br><span class="line">        font-size: size(lg);</span><br><span class="line">        color: color(primary);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &amp;-item &#123;</span><br><span class="line">        list-style: none;</span><br><span class="line">        margin: 1rem 0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &amp;-link &#123;</span><br><span class="line">        font-size: size(xs);</span><br><span class="line">        text-decoration: none;</span><br><span class="line">        color: lighten(color(primary), 15%);</span><br><span class="line">        transition: color .2s;</span><br><span class="line"></span><br><span class="line">        &amp;:hover &#123;</span><br><span class="line">            color: lighten(color(primary), 35%);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p><img src="https://i.imgur.com/dNxmJ8o.gif"></p><p>中間針對 input 區域四個框框處理 focus 特效的<code>not()</code>只排除 submit 對其他三個處理 border 變色</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&amp;:focus:not([type&#x3D;&quot;submit&quot;]) &#123;</span><br><span class="line">                border: .1rem solid darken(color(quaternary), 30%);</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure><h3 id="socialMedia"><a href="#socialMedia" class="headerlink" title="socialMedia"></a>socialMedia</h3><p><img src="https://i.imgur.com/CwJM2kk.png"></p><p>建立一個(index 顏色)的 list 並且把內容使用 each loop 個別迭代進去每一個 social-icon 使用<code>nth-child()</code>來選取各個並且元素後個別填入該文字以及邊框顏色</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$socialMediaColors:1 #3b5998,</span><br><span class="line">2 #b31217,</span><br><span class="line">3 #dc4e41,</span><br><span class="line">4 #55acee,</span><br><span class="line">5 #517fa4,</span><br><span class="line">6 #0077b5;</span><br><span class="line"></span><br><span class="line">@each $color in $socialMediaColors &#123;</span><br><span class="line">    .social-icons-item:nth-child(#&#123;nth($color,1)&#125;) .social-icons-link &#123;</span><br><span class="line">        color: nth($color, 2);</span><br><span class="line">        border: .1rem solid nth($color, 2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>得出這個結果<br><img src="https://i.imgur.com/9VKa9PL.png"></p><h1 id="MAIN-CSS-完整程式碼"><a href="#MAIN-CSS-完整程式碼" class="headerlink" title="MAIN.CSS 完整程式碼"></a>MAIN.CSS 完整程式碼</h1><p><a href="https://github.com/chiehLiu/git-projects/blob/clothesStore/clothesStore/css/main.css">main.css</a></p><p>小補充:</p><p><a href="https://developer.mozilla.org/zh-TW/docs/Web/CSS/CSS_Grid_Layout/Basic_Concepts_of_Grid_Layout">grid MDN</a><br><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/minmax()">grid minmax() MDN</a><br><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column">grid-column MDN</a><br><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/gap">gap (grid-gap) MDN</a><br><a href="https://github.com/chiehLiu/git-projects/blob/clothesStore/clothesStore/index.html">order felx items MDN</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Clothes-Store-SASS-Project&quot;&gt;&lt;a href=&quot;#Clothes-Store-SASS-Project&quot; class=&quot;headerlink&quot; title=&quot;Clothes Store - SASS Project&quot;&gt;&lt;/a&gt;Clothe</summary>
      
    
    
    
    <category term="HTML, CSS 作品" scheme="http://example.com/categories/HTML-CSS-%E4%BD%9C%E5%93%81/"/>
    
    
    <category term="SASS" scheme="http://example.com/tags/SASS/"/>
    
    <category term="HTML" scheme="http://example.com/tags/HTML/"/>
    
    <category term="CSS" scheme="http://example.com/tags/CSS/"/>
    
    <category term="Grid" scheme="http://example.com/tags/Grid/"/>
    
  </entry>
  
  <entry>
    <title>SASS-The Complete SASS Course(CSS Preprocessor)(一萬字)</title>
    <link href="http://example.com/2021/02/22/Sass-crash-course/"/>
    <id>http://example.com/2021/02/22/Sass-crash-course/</id>
    <published>2021-02-22T13:58:32.838Z</published>
    <updated>2021-03-21T18:29:42.729Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SASS-The-Complete-SASS-Course-CSS-Preprocessor"><a href="#SASS-The-Complete-SASS-Course-CSS-Preprocessor" class="headerlink" title="SASS The Complete SASS Course(CSS Preprocessor)"></a>SASS The Complete SASS Course(CSS Preprocessor)</h1><hr><h2 id="tags-HTML-CSS-relate"><a href="#tags-HTML-CSS-relate" class="headerlink" title="tags: HTML CSS relate"></a>tags: HTML CSS relate</h2><h6 id="tags-HTML-CSS-SASS"><a href="#tags-HTML-CSS-SASS" class="headerlink" title="tags: HTML, CSS, SASS"></a>tags: <code>HTML, CSS, SASS</code></h6><h1 id="SASS-簡介"><a href="#SASS-簡介" class="headerlink" title="SASS 簡介"></a>SASS 簡介</h1><h2 id="SASS-是什麼"><a href="#SASS-是什麼" class="headerlink" title="SASS 是什麼"></a>SASS 是什麼</h2><ul><li>Syntactically Awesome Style Sheets</li><li>是 CSS 的擴展配件、預處理器</li><li>可以讓 CSS 更加強大且具有更多的活動空間</li></ul><h2 id="Sass-特點"><a href="#Sass-特點" class="headerlink" title="Sass 特點"></a>Sass 特點</h2><ul><li><p>讓 CSS 可以跟其他語言一樣有更多邏輯的操作 -因為可以使用變數跟函式以及判斷式</p></li><li><p>可以把不同的 Style 檔案分開在做引入避免把所有元素都丟進同一個 css 檔案(最重要)</p></li></ul><p>像這樣分區做修飾並且全部整合進去 main.scss 檔案<br><img src="https://i.imgur.com/sOhNmax.png"></p><h2 id="How-Sass-Work"><a href="#How-Sass-Work" class="headerlink" title="How Sass Work"></a>How Sass Work</h2><p>一般瀏覽器是無法讀取 Sass 檔案的，所以我們在撰寫玩 Sass 之後必須作轉檔成 Css 檔案</p><p>而這個過程就叫做 Transpiling<br><img src="https://i.imgur.com/KfgAlO6.png"></p><h2 id="SASS-vs-SCSS"><a href="#SASS-vs-SCSS" class="headerlink" title="SASS vs SCSS"></a>SASS vs SCSS</h2><p>SASS 的部分再縮排方面會比較敏感</p><ul><li>去掉大括號做操作</li><li>可以巢狀寫法</li><li>沒有分號(;)</li></ul><p><img src="https://i.imgur.com/yhQEXkY.png"></p><p>SCSS 會比較常用並且跟 CSS 寫法雷同</p><ul><li>一樣有大括號以及分號</li><li>可以巢狀寫法</li><li>對縮排以及空白沒有 SASS 哪麼敏感</li></ul><p><img src="https://i.imgur.com/7Tcnfrk.png"></p><h1 id="SASS-入門"><a href="#SASS-入門" class="headerlink" title="SASS 入門"></a>SASS 入門</h1><h2 id="環境設定"><a href="#環境設定" class="headerlink" title="環境設定"></a>環境設定</h2><ul><li>Google Chrome 是最推薦使用</li><li>Firefox 也推薦使用(第二個作品會使用到)</li><li>Brackets 是作者推薦使用的 code editor(因為 VS CODE 本身的一些問題在處理 SASS code 上)</li><li>桌面建立資料夾 - sass-introduction</li><li>Ready to go!</li></ul><h2 id="安裝-SASS-Compiler"><a href="#安裝-SASS-Compiler" class="headerlink" title="安裝 SASS Compiler"></a>安裝 SASS Compiler</h2><h3 id="如何安裝"><a href="#如何安裝" class="headerlink" title="如何安裝"></a>如何安裝</h3><ul><li><a href="https://nodejs.org/en/">node.js</a></li><li>npm(下載 node.js 會自動下載)</li><li>下載 node.sass</li><li>創建 package.json(包含描述其他檔案的 metadata(檔案的結構資訊))</li></ul><p>確認是否完成可以使用 command prompt</p><p>並輸入 <code>node --version</code><br><code>npm --version</code></p><p>有出現版本就是有成功瞜!</p><p><img src="https://i.imgur.com/YdTp4tZ.png"></p><p>使用 code editor 開啟資料夾並且創建好以下內容<br><img src="https://i.imgur.com/zxqd2FZ.png"></p><p>使用 command prompt 進入該資料夾<br><img src="https://i.imgur.com/rKCvvc2.png"></p><p>並輸入 <code>npm init --yes</code></p><p>來創建 json 檔案<br><img src="https://i.imgur.com/3QkjyCg.png"><br>他會就出現在操作的資料夾中顯示所有各種資訊摟!<br><img src="https://i.imgur.com/urWuNL7.png"></p><p>下載 node.sass</p><p>輸入 <code>npm i -g node-sass</code></p><p><img src="https://i.imgur.com/Zfsaiso.png"></p><p>接下來就可以做簡易的操作搂!</p><p>在 scss 檔案簡單寫入一些修飾，但這個時候還沒有專換成 css 所以並不會有效果<br><img src="https://i.imgur.com/tE7Yl8U.png"></p><p>輸入 <code>node-sass -o css scss/main.scss</code></p><p><img src="https://i.imgur.com/wbUGUsC.png"></p><p>就可以順利的傳換 scss 成 css 檔案摟!<br><img src="https://i.imgur.com/S0S87uP.png"></p><p>但是每次操作就要使用這行程式碼去轉換 scss 太惱人了所以這邊使用</p><p>輸入 <code>node-sass -o css scss/main.scss -w</code></p><p>當 scss 檔案更改並且存檔時就會及時轉換過去搂!</p><p>但是當我們操作專案時不想要一直切換到 terminal 上面</p><p>可對這邊做修改<br><img src="https://i.imgur.com/1Wj4eMQ.png"></p><p>並且回到 terminal 頁面輸入 CTRL+C 輸入 y 同意後</p><p>輸入 <code>npm run watch</code></p><p>就可以順利直接做轉換並且不用切到換 terminal 輸入瞜!<br><img src="https://i.imgur.com/Rv1w9iU.png"></p><h2 id="SASS-變數"><a href="#SASS-變數" class="headerlink" title="SASS 變數"></a>SASS 變數</h2><h3 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h3><blockquote><p>變數像是一個容器儲存可重複利用的資料</p></blockquote><p>基本的呈現方式會像這樣:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$color-primary:orange !important;</span><br><span class="line">$color-secondary:gray;</span><br><span class="line">$color-tertiary:royalblue;</span><br><span class="line"></span><br><span class="line">$font-lg: 40px;</span><br><span class="line">$font-md: 30px;</span><br><span class="line">$font-sm: 20px;</span><br></pre></td></tr></table></figure><p>SCSS:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">.nav &#123;</span><br><span class="line">  background-color: $color-primary;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.banner h1 &#123;</span><br><span class="line">  font-size: $font-lg;</span><br><span class="line">  color: $color-secondary;</span><br><span class="line">  text-align: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.footer h3 &#123;</span><br><span class="line">  font-size: $font-md;</span><br><span class="line">  color: $color-secondary;</span><br><span class="line">  text-align: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>轉換過後的 CSS</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.nav</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: orange <span class="meta">!important</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.banner</span> <span class="selector-tag">h1</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">40px</span>;</span><br><span class="line">  <span class="attribute">color</span>: gray;</span><br><span class="line">  <span class="attribute">text-align</span>: center; &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.footer</span> <span class="selector-tag">h3</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">30px</span>;</span><br><span class="line">  <span class="attribute">color</span>: gray;</span><br><span class="line">  <span class="attribute">text-align</span>: center; &#125;</span><br></pre></td></tr></table></figure><p>這邊可以觀察到 h1,h3 的字體顏色我使用一樣的變數操作，所以當最上方的變數改變時<br><img src="https://i.imgur.com/mcJ14U5.png"><br>整體的顏色都可以做到條整，就不需要逐一修改內容的顏色而是在頂端直接修改變數內容即可<br><img src="https://i.imgur.com/YRcMDHS.png"></p><h3 id="變數的影響範圍-Scope-of-Variable"><a href="#變數的影響範圍-Scope-of-Variable" class="headerlink" title="變數的影響範圍(Scope of Variable)"></a>變數的影響範圍(Scope of Variable)</h3><ul><li><strong>全域變數</strong></li><li><strong>區域變數</strong></li></ul><p>全域變數的操作基本上就是把變數設置在外層並且沒有用大括號包裹住</p><p>區域變數則設置在大括號內只供括號內部使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">.nav &#123;</span><br><span class="line">  background-color: $color-primary;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.banner h1 &#123;</span><br><span class="line">  $color-secondary: red;</span><br><span class="line">  font-size: $font-lg;</span><br><span class="line">  color: $color-secondary;</span><br><span class="line">  text-align: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.footer h3 &#123;</span><br><span class="line">  font-size: $font-md;</span><br><span class="line">  color: $color-secondary;</span><br><span class="line">  text-align: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>像是這邊可以觀察到因為 h1 內部的區域變數的關係所以 h1 為紅色<br><img src="https://i.imgur.com/MHEvycZ.png"></p><h3 id="區域變數轉變成全域變數"><a href="#區域變數轉變成全域變數" class="headerlink" title="區域變數轉變成全域變數"></a>區域變數轉變成全域變數</h3><p>但也可以針對特定的變數做 !global 就可以把區域變數轉變成全域變數瞜!</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.banner h1 &#123;</span><br><span class="line">  $color-secondary: red ! global;</span><br><span class="line">  font-size: $font-lg;</span><br><span class="line">  color: $color-secondary;</span><br><span class="line">  text-align: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>紅色就可以影響到全域了!<br><img src="https://i.imgur.com/9oZ0jb7.png"></p><h3 id="作者提醒"><a href="#作者提醒" class="headerlink" title="作者提醒"></a>作者提醒</h3><ul><li>基本上不推薦使用區域變數，大多數時候以全域變數為主</li><li>變數設置時候的(-)dash sign / (_)underscore 這兩個部分是可以交替使用的</li></ul><p>它們可以達到一樣的效果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$color-primary:orange !important;</span><br><span class="line">$color_primary:orange !important;</span><br></pre></td></tr></table></figure><h2 id="SASS-巢狀寫法"><a href="#SASS-巢狀寫法" class="headerlink" title="SASS 巢狀寫法"></a>SASS 巢狀寫法</h2><ul><li>避免寫很多行的 CSS</li><li>容易使用</li><li>一種 CSS 的縮寫</li></ul><h3 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h3><p>SCSS 巢狀寫法<br>直接把要修飾的內容寫在大標題下即可不用像 CSS 一樣多寫一個大括號</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.nav &#123;</span><br><span class="line">  background-color: $color-primary;</span><br><span class="line"></span><br><span class="line">  ul li &#123;</span><br><span class="line">    list-style: none;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>轉換後的 CSS 必須寫在大括號內</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.nav</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: orange <span class="meta">!important</span>; &#125;</span><br><span class="line">  <span class="selector-class">.nav</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">list-style</span>: none; &#125;</span><br></pre></td></tr></table></figure><h3 id="偽元素-偽類"><a href="#偽元素-偽類" class="headerlink" title="偽元素/偽類"></a>偽元素/偽類</h3><p>hover 前面的&amp;字元代表 parent 元素也就是要修飾的 a tag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">a &#123;</span><br><span class="line">    text-decoration: none;</span><br><span class="line">    font-size: $font-sm;</span><br><span class="line">    color: $color-secondary;</span><br><span class="line"></span><br><span class="line">    &amp;:hover &#123;</span><br><span class="line">      color: $color-tertiary;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h3 id="作者提醒-1"><a href="#作者提醒-1" class="headerlink" title="作者提醒"></a>作者提醒</h3><blockquote><p>在寫 sass 的過程中要不時確認 main.css 的狀況可以更了解 sass 之外也更了解背後的原理</p></blockquote><h2 id="SASS-Mixin"><a href="#SASS-Mixin" class="headerlink" title="SASS Mixin"></a>SASS Mixin</h2><ul><li>避免 DRY(don’t repeat yourself)</li><li>把我們會重複使用的 code 包起來就不需要一直重複輸入</li><li>有點像變數但是更強大且動態</li></ul><h3 id="基本操作-1"><a href="#基本操作-1" class="headerlink" title="基本操作"></a>基本操作</h3><p>h1,h3 的修飾其實都是一樣的，所以拿出來做 Mixin</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@mixin 名字可以自訂&#123;</span><br><span class="line">&#x2F;&#x2F;輸入修飾的內容</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;把這一行填入需要被修飾的地方</span><br><span class="line">@inclue 名字可以自訂</span><br></pre></td></tr></table></figure><p>實際操作如下:<br>把重複的地方拉出來做<code>@mixin</code>並且命名，再<code>@include名字</code>嵌入要修飾的元素中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">@mixin headingStyles &#123;</span><br><span class="line">  color: $color-secondary;</span><br><span class="line">  text-align: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.banner h1 &#123;</span><br><span class="line"></span><br><span class="line">  font-size: $font-lg;</span><br><span class="line">  @include headingStyles;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.footer h3 &#123;</span><br><span class="line">  font-size: $font-md;</span><br><span class="line">  @include headingStyles;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用類似-function-的寫法嵌入參數"><a href="#使用類似-function-的寫法嵌入參數" class="headerlink" title="使用類似 function 的寫法嵌入參數"></a>使用類似 function 的寫法嵌入參數</h3><p>就可以針對內容物不同輸入不同的變數內容達到類似函式的寫法，讓程式碼更簡潔</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">@mixin headingStyles($fontSize) &#123;</span><br><span class="line">  font-size: $fontSize;</span><br><span class="line">  color: $color-secondary;</span><br><span class="line">  text-align: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.banner h1 &#123;</span><br><span class="line">  @include headingStyles($font-lg);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.footer h3 &#123;</span><br><span class="line">  @include headingStyles($font-md);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>也可以把<code>$fontSize</code>指派預設值(50px)，如果在參數沒有被擺入的預設的文字大小就是 50px</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@mixin headingStyles($fontSize:50px) &#123;</span><br><span class="line">  font-size: $fontSize;</span><br><span class="line">  color: $color-secondary;</span><br><span class="line">  text-align: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="多個參數的寫法-param…"><a href="#多個參數的寫法-param…" class="headerlink" title="多個參數的寫法($param…)"></a>多個參數的寫法($param…)</h3><p>讓 h3 hover 的時候改變顏色字體並且有延緩 字體:0.5s 背景色:1s</p><p>使用<code>$自訂名稱...</code> 來定義多個參數並且使用 transition 來作範例:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">@mixin transition($param...) &#123;</span><br><span class="line">  transition: $param;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.footer h3 &#123;</span><br><span class="line">  @include headingStyles($font-md);</span><br><span class="line">  @include transition(color .5s, background-color 1s);</span><br><span class="line"></span><br><span class="line">  &amp;:hover &#123;</span><br><span class="line">    color: $color-tertiary;</span><br><span class="line">    background-color: $color-primary;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>CSS 的部分會正常顯示不過 scss 部分相當的簡潔易懂<br><img src="https://i.imgur.com/vLQR4Ny.png"></p><h3 id="作者提醒-2"><a href="#作者提醒-2" class="headerlink" title="作者提醒"></a>作者提醒</h3><p>如果出現轉換沒有發生效果的狀況往往查看 terminal 的錯誤訊息會很有用</p><h2 id="SASS-Extend"><a href="#SASS-Extend" class="headerlink" title="SASS Extend"></a>SASS Extend</h2><ul><li>讓選擇器的 style 可以被繼承給另一個選擇器</li><li>避免代碼膨脹(code bloat)程式過於龐大、執行緩慢、浪費資源</li><li>把擁有同樣元素的選擇器包起來跟 mixin 有點像</li><li>寫出更乾淨簡潔的程式碼</li></ul><h3 id="基本操作-2"><a href="#基本操作-2" class="headerlink" title="基本操作"></a>基本操作</h3><p>直接把 heading 的屬性全部繼承出去使用<code>@extend</code>放入想要繼承的屬性選擇器內</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">.heading &#123;</span><br><span class="line">  color: $color-primary;</span><br><span class="line">  font-size: $font-lg;</span><br><span class="line">  background-color: $color-secondary;</span><br><span class="line">  text-align: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.banner h1 &#123;</span><br><span class="line">  @extend .heading;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.footer h3 &#123;</span><br><span class="line">  @extend .heading;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="作者提醒-3"><a href="#作者提醒-3" class="headerlink" title="作者提醒"></a>作者提醒</h3><p>(重要)這樣的操作會出錯!!</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">.heading &#123;</span><br><span class="line">  color: $color-primary;</span><br><span class="line">  font-size: $font-lg;</span><br><span class="line">  background-color: $color-secondary;</span><br><span class="line">  text-align: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.banner h1 &#123;</span><br><span class="line">  @extend .heading;</span><br><span class="line">  &amp;:hover&#123;</span><br><span class="line">  color:blue;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.footer h3 &#123;</span><br><span class="line">  @extend .banner h1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面的 .banner h1 的部分是錯誤的 extend 使用方式修改如下:</p><ul><li>去掉.banner 直接使用 h1</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">h1 &#123;</span><br><span class="line">  @extend .heading;</span><br><span class="line">  &amp;:hover&#123;</span><br><span class="line">  color:blue;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.footer h3 &#123;</span><br><span class="line">  @extend h1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>h1 新增一個 class:h1style</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">h1style &#123;</span><br><span class="line">  @extend .heading;</span><br><span class="line">  &amp;:hover&#123;</span><br><span class="line">  color:blue;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.footer h3 &#123;</span><br><span class="line">  @extend h1style;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="SASS-function"><a href="#SASS-function" class="headerlink" title="SASS function"></a>SASS function</h2><blockquote><p>Function 當我們做呼叫的動作的時候，不斷重複的跑一段程式碼</p></blockquote><h3 id="基本操作-自定-function"><a href="#基本操作-自定-function" class="headerlink" title="基本操作(自定 function)"></a>基本操作(自定 function)</h3><p>製作一個 functiond 可以讓輸入的 font-size * 2 並且呼叫函式放入參數($font-sm)或是輸入值也可以操作(放入 30px)使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">@function fontSize($size) &#123;</span><br><span class="line">  @return $size*2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.banner p &#123;</span><br><span class="line">  font-size: fontSize($font-sm);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>也可以放入預設的值，當呼叫函式並且沒有使用參數時就會使用預設值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">@function fontSize($size:25px) &#123;</span><br><span class="line">  @return $size*2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.footer p &#123;</span><br><span class="line">  font-size: fontSize();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="內建函式-build-in-function"><a href="#內建函式-build-in-function" class="headerlink" title="內建函式(build-in function)"></a>內建函式(build-in function)</h3><p><code>lighten()</code><br><code>darken()</code></p><p>前面放入顏色，後方填變淡、深的%數</p><p><code>transparentize()</code></p><p>後方填入 0-1 之間代表透明度 1 = 透明(跟 CSS 的 rgba 剛好相反)</p><p><code>mix()</code></p><p>混和顏色參數的內容(顏色 1,顏色 2,代表顏色 1:顏色 2 的趴數)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">.nav &#123;</span><br><span class="line">  background-color: lighten($color-primary, 20%);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> .nav &#123;</span><br><span class="line">  background-color: transparentize($color-primary, 20%);</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> .nav &#123;</span><br><span class="line">  background-color: mix(blue, green, 10%);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>變暗<br><img src="https://i.imgur.com/cHnlIjC.png"></p><p>變亮<br><img src="https://i.imgur.com/PoKol9j.png"></p><p>透明<br><img src="https://i.imgur.com/g6zrexM.png"></p><p>混和出來的藍綠色<br><img src="https://i.imgur.com/jJTA4X8.png"></p><h3 id="更多的-Built-In-function"><a href="#更多的-Built-In-function" class="headerlink" title="更多的 Built-In function"></a>更多的 Built-In function</h3><p><a href="https://sass-lang.com/documentation/modules">Built-In Modules</a></p><h2 id="SASS-Placeholder-Selectors"><a href="#SASS-Placeholder-Selectors" class="headerlink" title="SASS Placeholder Selectors"></a>SASS Placeholder Selectors</h2><ul><li>可以產生 selectors 在 CSS 檔案內看不到</li><li>使用%開頭</li><li>讓 CSS 檔案更加簡潔</li></ul><h3 id="基本操作-3"><a href="#基本操作-3" class="headerlink" title="基本操作"></a>基本操作</h3><p>把一些容易重複的 style 寫在一起並且使用%在名字前方:</p><p><code>%heading</code>不會出現在 css 檔案內可是 h1,h3 依舊可以使用他的 style</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">%heading &#123;</span><br><span class="line">  color: $color-primary;</span><br><span class="line">  font-size: $font-lg;</span><br><span class="line">  background-color: $color-secondary;</span><br><span class="line">  text-align: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">h1 &#123;</span><br><span class="line">  @extend %heading;</span><br><span class="line"></span><br><span class="line">  &amp;:hover &#123;</span><br><span class="line">    background-color: green;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.footer h3 &#123;</span><br><span class="line">  @extend h1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="SASS-Imports-and-Partials"><a href="#SASS-Imports-and-Partials" class="headerlink" title="SASS Imports and Partials"></a>SASS Imports and Partials</h2><ul><li><p>解構整個 SASS code 變成不同的檔案</p></li><li><p>讓專案更有結構</p></li><li><p>減少專案複雜度增加便利性</p></li><li><p>Partials<br>建立一個新的 scss 檔案並且名稱加上底線(_)<br><img src="https://i.imgur.com/PWii48j.png"></p></li></ul><p>輸入簡單的內容在 test.scss 內</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.footer h3 &#123;</span><br><span class="line">  font-style: italic;</span><br><span class="line">  border: 3px solid red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Imports<br>在 main.scss 輸入:</li></ul><p><code>@import &quot;test&quot;;</code></p><p>修改 package.json 的內容變成讀取整個 scss 檔案資料，並且重新執行一次<br><code>npm run watch</code><br><img src="https://i.imgur.com/acA7B86.png"></p><p>就可以引入這些 style 瞜!<br><img src="https://i.imgur.com/9dOXph2.png"></p><h1 id="SASS-進階"><a href="#SASS-進階" class="headerlink" title="SASS 進階"></a>SASS 進階</h1><h2 id="Data-Types-in-SASS"><a href="#Data-Types-in-SASS" class="headerlink" title="Data Types in SASS"></a>Data Types in SASS</h2><ul><li>Numbers</li><li>Strings</li><li>Colors</li><li>Lists</li><li>Maps</li><li>Booleans</li><li>Null</li></ul><p><strong>Numbers</strong></p><p>跟一般程式語言一樣有整數跟小數，數字也一樣有單位存在</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; Numbers</span><br><span class="line">.numbers &#123;</span><br><span class="line">    font-weight: 400;</span><br><span class="line">    line-height: 1.5;</span><br><span class="line">    font-size: 20px; &#x2F;&#x2F; rem, em, %</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Strings</strong></p><p>字串可以被<code>&#39;&#39;&quot;&quot;</code>包裹住或者是直接撰寫</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; Strings</span><br><span class="line">.strings &#123;</span><br><span class="line">    font-family: &#39;Helvetica&#39;, Arial, sans-serif;</span><br><span class="line">    font-weight: bold;</span><br><span class="line">    font-style: italic;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Colors</strong></p><p>有這幾種顏色表示方式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; Colors</span><br><span class="line">.colors &#123;</span><br><span class="line">    color: red;</span><br><span class="line">    background-color: #ff0000;</span><br><span class="line">    border-color: rgb(255, 0, 0); &#x2F;&#x2F; rgba(255, 0, 0, .5)</span><br><span class="line">    outline-color: hsl(0, 100%, 50%);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>HSL stands for hue, saturation, and lightness.<br>色調、飽和、亮度</p><p><strong>Lists</strong></p><p>可以是 Number, String, 也可以是混和甚至加入 Color 進去</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#x2F;&#x2F; Lists</span><br><span class="line">.lists &#123;</span><br><span class="line">    margin: 10px 15px 5px 20px;</span><br><span class="line">    font-family: &#39;Raleway&#39;, &#39;Dosis&#39;, &#39;Lato&#39;;</span><br><span class="line">    border: 1px solid red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Maps</strong></p><p>使用 <code>$命名:(key:value, key:value)</code> 的方式建立</p><p>使用 build-in function <code>map-get($命名, 要使用的key)</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; Maps</span><br><span class="line">$colors: (</span><br><span class="line">    &quot;primary&quot;: red,</span><br><span class="line">    2: green,</span><br><span class="line">    3: blue</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">h1 &#123;</span><br><span class="line">    color: map-get($colors, primary);</span><br><span class="line">    background-color: map-get($colors, 2);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Booleans,null</strong></p><p>Booleans 有兩個值 true,false</p><p>null 對於大小寫很敏感如果大小寫打錯就會變成單純的字串沒有效果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; Booleans</span><br><span class="line">&#x2F;&#x2F; true, false</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; null</span><br></pre></td></tr></table></figure><h2 id="SASS-Interpolation-類似-JS-的-template-literal-ES6-版本的"><a href="#SASS-Interpolation-類似-JS-的-template-literal-ES6-版本的" class="headerlink" title="SASS Interpolation(類似 JS 的 template literal,ES6 版本的)"></a>SASS Interpolation(類似 JS 的 template literal,ES6 版本的)</h2><p>可以使用變數在 selectors, properties, 或是其他 values 裡面</p><p>針對下圖這個寫法我們可以用類似 JS 的 template literal 的方式設定變數並且放入字串中<br><img src="https://i.imgur.com/ytHiMHB.png"></p><p>由下方程式碼可以看出:</p><p>使用<code>#&#123;&#125;</code><br>可以用在值、key 裡面都沒有問題會得到上圖的結果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$b: &quot;border&quot;;</span><br><span class="line">$c: &quot;color&quot;;</span><br><span class="line"></span><br><span class="line">h2 &#123;</span><br><span class="line">    box-sizing: #&#123;$b&#125;-box;</span><br><span class="line">    #&#123;$b&#125;: 1px solid blue;</span><br><span class="line">    #&#123;$c&#125;: red;</span><br><span class="line">    background-#&#123;$c&#125;: green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="SASS-For-Loop"><a href="#SASS-For-Loop" class="headerlink" title="SASS For Loop"></a>SASS For Loop</h2><blockquote><p>Loop</p><p>要不斷的跑一段相同的程式碼並且每一次使用不同的 value</p></blockquote><p>可以使用 for loop 達到這樣的效果:<br><img src="https://i.imgur.com/e2YctUB.png"></p><p>使用 through: 呈現 1<del>4<br>使用 to: 呈現 1</del>3(4 會被省略)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$colors: (</span><br><span class="line">    1: red,</span><br><span class="line">    2: green,</span><br><span class="line">    3: blue,</span><br><span class="line">    4: orange</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">@for $i from 1 through 4 &#123;</span><br><span class="line">    .paragraph-#&#123;$i&#125; &#123;</span><br><span class="line">        background-color: map-get($colors, $i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="SASS-Each-Loop"><a href="#SASS-Each-Loop" class="headerlink" title="SASS Each Loop"></a>SASS Each Loop</h2><p>可以使用 each loop 達到這樣的效果:<br><img src="https://i.imgur.com/AExqhlZ.png"></p><p>首先設置 list 也就是 paragraph 的名稱</p><p>接下來使用</p><p>@each 設置參數名稱 in list 名稱{<br>要修飾的屬性-#{設置參數名稱}{<br>屬性:設置參數名稱;</p><p>}</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$colors: red green blue orange;</span><br><span class="line"></span><br><span class="line">@each $color in $colors &#123;</span><br><span class="line">    .paragraph-#&#123;$color&#125; &#123;</span><br><span class="line">        background-color: $color;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="SASS-If-Directive"><a href="#SASS-If-Directive" class="headerlink" title="SASS If Directive"></a>SASS If Directive</h2><ul><li>if()內的結果會以 Boolean 的方式呈現也就是 true/false</li></ul><p>if()判斷市裡面的條件必須是 true 才會執行，所以下方的 h1 修飾 color:red 並不會執行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">h1 &#123;</span><br><span class="line">   @if(false) &#123;</span><br><span class="line">       color: red;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用判斷式判斷參數內容如果不是 large 或 medium 就呈現<code>font-size: 15px</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">@mixin headingSize($size) &#123;</span><br><span class="line">    @if($size &#x3D;&#x3D; large) &#123;</span><br><span class="line">        font-size: 45px;</span><br><span class="line">    &#125; @else if($size &#x3D;&#x3D; medium) &#123;</span><br><span class="line">        font-size: 30px;</span><br><span class="line">    &#125; @else &#123;</span><br><span class="line">        font-size: 15px;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">h1 &#123;</span><br><span class="line">    @include headingSize(small);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;SASS-The-Complete-SASS-Course-CSS-Preprocessor&quot;&gt;&lt;a href=&quot;#SASS-The-Complete-SASS-Course-CSS-Preprocessor&quot; class=&quot;headerlink&quot; title=&quot;</summary>
      
    
    
    
    <category term="SASS" scheme="http://example.com/categories/SASS/"/>
    
    
    <category term="SASS" scheme="http://example.com/tags/SASS/"/>
    
  </entry>
  
  <entry>
    <title>jQuery-JS 幼幼班 - jQuery 篇(一萬字)</title>
    <link href="http://example.com/2021/02/22/jQuery-for-beginner/"/>
    <id>http://example.com/2021/02/22/jQuery-for-beginner/</id>
    <published>2021-02-22T12:58:06.215Z</published>
    <updated>2021-03-21T18:27:27.719Z</updated>
    
    <content type="html"><![CDATA[<h1 id="JS-幼幼班-jQuery-篇"><a href="#JS-幼幼班-jQuery-篇" class="headerlink" title="JS 幼幼班 - jQuery 篇"></a>JS 幼幼班 - jQuery 篇</h1><hr><h2 id="tags-Javascript-relate"><a href="#tags-Javascript-relate" class="headerlink" title="tags: Javascript relate"></a>tags: Javascript relate</h2><h6 id="tags-Javascript-jQery"><a href="#tags-Javascript-jQery" class="headerlink" title="tags: Javascript, jQery"></a>tags: <code>Javascript, jQery</code></h6><h1 id="jQuery-簡介"><a href="#jQuery-簡介" class="headerlink" title="jQuery 簡介"></a>jQuery 簡介</h1><h2 id="01-為何還要繼續使用-jQuery-呢"><a href="#01-為何還要繼續使用-jQuery-呢" class="headerlink" title="01 為何還要繼續使用 jQuery 呢?"></a>01 為何還要繼續使用 jQuery 呢?</h2><p>1.台灣還是有高市佔率<br><img src="https://i.imgur.com/h05To2m.png"></p><p>2.支援套件仍然是最多</p><p>3.從 jQuery 了解 JS 在瀏覽器能做些什麼</p><ul><li>DOM 操作</li><li>事件觸發 (滑鼠點擊、鍵盤點擊)</li><li>表單送出</li></ul><h3 id="JQuery-就是把-JS-的內容”擷取”其精華，讓-JS-變得更具體更好操作"><a href="#JQuery-就是把-JS-的內容”擷取”其精華，讓-JS-變得更具體更好操作" class="headerlink" title="JQuery 就是把 JS 的內容”擷取”其精華，讓 JS 變得更具體更好操作"></a>JQuery 就是把 JS 的內容”擷取”其精華，讓 JS 變得更具體更好操作</h3><p>jQuery 的寫法<br><img src="https://i.imgur.com/qfAiSTZ.png"></p><p>JS 的寫法<br><img src="https://i.imgur.com/e19NOf4.png"></p><p>很明顯可以比較出 jQuery 的寫法是比較精簡好讀的</p><h2 id="02-如何使用-jQuery-並實現第一個範例"><a href="#02-如何使用-jQuery-並實現第一個範例" class="headerlink" title="02 如何使用 jQuery 並實現第一個範例"></a>02 如何使用 jQuery 並實現第一個範例</h2><p>步驟一到官網下載檔案<br><a href="https://jquery.com/">jQuery 官網</a></p><p><img src="https://i.imgur.com/doCOYon.png"></p><p>步驟二創建資料夾並把剛剛下載的檔案以及要使用 jQuery 的檔案擺在一起<br><img src="https://i.imgur.com/4taZYsp.png"></p><p>步驟三在 head 內引入 link(跟引入 CSS 很像)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">    &lt;script src=<span class="string">&quot;jquery-3.5.1.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br></pre></td></tr></table></figure><p>步驟四撰寫小範例:</p><p>點擊按鈕修改顏色</p><ul><li><code>$()</code>選擇器</li><li><code>.click</code> 點擊事件</li><li><code>.css</code> 修改 CSS</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h1 id=<span class="string">&quot;hello world&quot;</span>&gt;hello world&lt;/h1&gt;</span><br><span class="line">    &lt;button id=<span class="string">&quot;btnred&quot;</span>&gt;red&lt;/button&gt;</span><br><span class="line">    &lt;button id=<span class="string">&quot;btnblue&quot;</span>&gt;blue&lt;/button&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        $(<span class="string">&quot;#btnred&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            $(<span class="string">&quot;#btnred&quot;</span>).css(<span class="string">&#x27;color&#x27;</span>, <span class="string">&#x27;red&#x27;</span>);</span><br><span class="line">        &#125;)</span><br><span class="line">        $(<span class="string">&quot;#btnblue&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            $(<span class="string">&quot;#btnblue&quot;</span>).css(<span class="string">&#x27;color&#x27;</span>, <span class="string">&#x27;blue&#x27;</span>);</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/L1kNdgS.png"></p><h2 id="03-jQuery-到底在做些什麼"><a href="#03-jQuery-到底在做些什麼" class="headerlink" title="03 jQuery 到底在做些什麼 ?"></a>03 jQuery 到底在做些什麼 ?</h2><p>JS 可以在瀏覽器做的事情以及讓它更精簡且易讀</p><ul><li>當 按下按鈕 =&gt; 跳出視窗</li><li>當 送出表單 =&gt; 跳轉頁面</li><li>當 上傳檔案 =&gt; 通知完成</li></ul><h2 id="04-jQuery-的三大重點"><a href="#04-jQuery-的三大重點" class="headerlink" title="04 jQuery 的三大重點"></a>04 jQuery 的三大重點</h2><h3 id="1-選擇器"><a href="#1-選擇器" class="headerlink" title="1. 選擇器:"></a>1. 選擇器:</h3><p><code>$()</code></p><p>選取要觸發的元素</p><p>例如: <code>$(&quot;body&quot;)</code> 選取整個<code>&lt;body&gt;</code></p><h3 id="2-事件觸發"><a href="#2-事件觸發" class="headerlink" title="2. 事件觸發:"></a>2. 事件觸發:</h3><p>決定那些事件可以觸發 callback 函式</p><p>例如: <code>.click</code> 點擊觸發事件</p><h3 id="3-callback-函式"><a href="#3-callback-函式" class="headerlink" title="3. callback 函式:"></a>3. callback 函式:</h3><p>事件觸發後會執行甚麼動作</p><ul><li>顯示、隱藏元素</li><li>改變 CSS 效果</li><li>DOM 操作</li></ul><p>而上面的小範例就是點擊後執行修改按鈕顏色</p><p><img src="https://i.imgur.com/L1kNdgS.png"></p><h1 id="第一章-選擇器"><a href="#第一章-選擇器" class="headerlink" title="第一章 選擇器"></a>第一章 選擇器</h1><h2 id="id-選擇器"><a href="#id-選擇器" class="headerlink" title="id 選擇器"></a>id 選擇器</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h1 id=<span class="string">&quot;hello world&quot;</span>&gt;hello world&lt;/h1&gt;</span><br><span class="line">    &lt;button id=<span class="string">&quot;btnred&quot;</span>&gt;red&lt;/button&gt;</span><br><span class="line">    &lt;button id=<span class="string">&quot;btnblue&quot;</span>&gt;blue&lt;/button&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        $(<span class="string">&quot;#btnred&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            $(<span class="string">&quot;#btnred&quot;</span>).css(<span class="string">&#x27;color&#x27;</span>, <span class="string">&#x27;red&#x27;</span>);</span><br><span class="line">        &#125;)</span><br><span class="line">        $(<span class="string">&quot;#btnblue&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            $(<span class="string">&quot;#btnblue&quot;</span>).css(<span class="string">&#x27;color&#x27;</span>, <span class="string">&#x27;blue&#x27;</span>);</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p>一樣以上面的範例舉例:</p><p><code>$(&quot;#btnred&quot;)</code> - 抓取要操作的 id 加上#並用雙引號包起來就完成瞜!</p><h2 id="class-選擇器"><a href="#class-選擇器" class="headerlink" title="class 選擇器"></a>class 選擇器</h2><p>跟 id 抓法不同會抓取一樣 class 的全部內容</p><p><code>$(&quot;.btnred&quot;)</code> - 抓取要操作的 class 加上(.)並用雙引號包起來就完成瞜!</p><h3 id="元素選擇器"><a href="#元素選擇器" class="headerlink" title="元素選擇器"></a>元素選擇器</h3><p>一樣會選取全部的該名稱的元素</p><p>直接輸入名稱就可以抓取他們瞜</p><p><code>$(&quot;p&quot;)</code>抓去段落<code>&lt;p&gt;</code></p><h1 id="第二章-事件"><a href="#第二章-事件" class="headerlink" title="第二章 事件"></a>第二章 事件</h1><h2 id="01-滑鼠事件，點擊-click-與連續兩次點擊-dblclick"><a href="#01-滑鼠事件，點擊-click-與連續兩次點擊-dblclick" class="headerlink" title="01 滑鼠事件，點擊(click) 與連續兩次點擊(dblclick)"></a>01 滑鼠事件，點擊(click) 與連續兩次點擊(dblclick)</h2><p>我繼續沿用上面的範例做操作</p><ul><li>點擊一次改變紅色按鈕(click)</li><li>點擊兩次改變藍色按鈕(dblclick)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">        $(<span class="string">&quot;#btnred&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            $(<span class="string">&quot;#btnred&quot;</span>).css(<span class="string">&#x27;color&#x27;</span>, <span class="string">&#x27;red&#x27;</span>);</span><br><span class="line">        &#125;)</span><br><span class="line">        $(<span class="string">&quot;#btnblue&quot;</span>).dblclick(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            $(<span class="string">&quot;#btnblue&quot;</span>).css(<span class="string">&#x27;color&#x27;</span>, <span class="string">&#x27;blue&#x27;</span>);</span><br><span class="line">        &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>印出結果:<br><img src="https://i.imgur.com/L1kNdgS.png"></p><h2 id="02-滑鼠事件，移入-mouseenter-與移出-mouseout"><a href="#02-滑鼠事件，移入-mouseenter-與移出-mouseout" class="headerlink" title="02 滑鼠事件，移入(mouseenter)與移出(mouseout)"></a>02 滑鼠事件，移入(mouseenter)與移出(mouseout)</h2><ul><li>當滑鼠移入目標觸發事件</li><li>當滑鼠移出目標觸發事件</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">        $(<span class="string">&quot;#btnred&quot;</span>).mouseenter(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            $(<span class="string">&quot;#btnred&quot;</span>).css(<span class="string">&#x27;color&#x27;</span>, <span class="string">&#x27;red&#x27;</span>);</span><br><span class="line">        &#125;)</span><br><span class="line">        $(<span class="string">&quot;#btnblue&quot;</span>).mouseout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            $(<span class="string">&quot;#btnblue&quot;</span>).css(<span class="string">&#x27;color&#x27;</span>, <span class="string">&#x27;blue&#x27;</span>);</span><br><span class="line">        &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li>red 是進入觸發顏色</li><li>blue 是出去觸發顏色<br><img src="https://i.imgur.com/aMizEwl.gif"></li></ul><h2 id="03-滑鼠的-hover-事件"><a href="#03-滑鼠的-hover-事件" class="headerlink" title="03 滑鼠的 hover 事件"></a>03 滑鼠的 hover 事件</h2><p>當取得焦點時觸發事件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">        $(<span class="string">&quot;#btnred&quot;</span>).hover(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            $(<span class="string">&quot;#btnred&quot;</span>).css(<span class="string">&#x27;color&#x27;</span>, <span class="string">&#x27;red&#x27;</span>);</span><br><span class="line">        &#125;)</span><br><span class="line">        $(<span class="string">&quot;#btnblue&quot;</span>).hover(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            $(<span class="string">&quot;#btnblue&quot;</span>).css(<span class="string">&#x27;color&#x27;</span>, <span class="string">&#x27;blue&#x27;</span>);</span><br><span class="line">        &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>當取得焦點時觸發事件<br><img src="https://i.imgur.com/bVL8M6l.gif"></p><h2 id="04-如果遇到沒看過的滑鼠事件該怎麼辦"><a href="#04-如果遇到沒看過的滑鼠事件該怎麼辦" class="headerlink" title="04 如果遇到沒看過的滑鼠事件該怎麼辦?"></a>04 如果遇到沒看過的滑鼠事件該怎麼辦?</h2><p><a href="https://api.jquery.com/">閱讀官方文件</a></p><p><a href="https://www.w3schools.com/jquery/">w3cschool</a></p><h2 id="05-遇到-jQuery-文件中不懂得地方該怎麼辦"><a href="#05-遇到-jQuery-文件中不懂得地方該怎麼辦" class="headerlink" title="05 遇到 jQuery 文件中不懂得地方該怎麼辦 ?"></a>05 遇到 jQuery 文件中不懂得地方該怎麼辦 ?</h2><p>知道大方向在處理什麼內容<br>並從文件中去搜尋</p><h2 id="06-on-‘click’-與-click-是等價的"><a href="#06-on-‘click’-與-click-是等價的" class="headerlink" title="06 on(‘click’, ..) 與 click()是等價的"></a>06 on(‘click’, ..) 與 click()是等價的</h2><p>click 事件其實是個縮寫:</p><p>後面的 handler 是 callback 函式</p><p><code>.on(&quot;click&quot;, handler)</code></p><p>其實跟原生的 JS 的寫法很像</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">clickHandler</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">123</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">addEventListener(<span class="string">&#x27;click&#x27;</span>, clickHandler)</span><br></pre></td></tr></table></figure><h2 id="07-我們怎麼知道-DOM-是否已經就緒-使用-ready"><a href="#07-我們怎麼知道-DOM-是否已經就緒-使用-ready" class="headerlink" title="07 我們怎麼知道 DOM 是否已經就緒 ? 使用 ready()"></a>07 我們怎麼知道 DOM 是否已經就緒 ? 使用 ready()</h2><p>ready()這個方法提供了我們一個方式讓我們去跑 JS 並且在網頁的 DOM 載入完全的情況下去操作</p><p>下列方法都是等價的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">* $( handler )</span><br><span class="line">* $( document ).ready( handler )</span><br><span class="line">* $( &quot;document&quot; ).ready( handler )</span><br><span class="line">* $( &quot;img&quot; ).ready( handler )</span><br><span class="line">* $().ready( handler )</span><br></pre></td></tr></table></figure><h2 id="08-如何在-vscode-中快速產生-ready-code-snippet"><a href="#08-如何在-vscode-中快速產生-ready-code-snippet" class="headerlink" title="08 如何在 vscode 中快速產生 ready() code snippet"></a>08 如何在 vscode 中快速產生 ready() code snippet</h2><p>尋找這個套件<br><img src="https://i.imgur.com/PgDTgY7.png"></p><p>使用 jq 前墜去尋找就可以找到搂!<br><img src="https://i.imgur.com/3toG4kv.png"></p><h1 id="第三章-選擇器的進階"><a href="#第三章-選擇器的進階" class="headerlink" title="第三章 選擇器的進階"></a>第三章 選擇器的進階</h1><h2 id="選擇器的進階-Traversal-鄰居、爸爸與小孩-鄰居篇"><a href="#選擇器的進階-Traversal-鄰居、爸爸與小孩-鄰居篇" class="headerlink" title="選擇器的進階 Traversal 鄰居、爸爸與小孩 - 鄰居篇"></a>選擇器的進階 Traversal 鄰居、爸爸與小孩 - 鄰居篇</h2><p>使用<code>.siblings()</code>印出 id:1 以外其他同一層的鄰居</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h1 id=<span class="string">&quot;hello world&quot;</span>&gt;hello world&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">    &lt;p id=<span class="string">&quot;1&quot;</span>&gt;<span class="number">1</span>&lt;/p&gt;</span><br><span class="line">    &lt;p id=<span class="string">&quot;2&quot;</span>&gt;<span class="number">2</span>&lt;/p&gt;</span><br><span class="line">    &lt;p id=<span class="string">&quot;3&quot;</span>&gt;<span class="number">3</span>&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">        $(<span class="string">&#x27;#1&#x27;</span>).siblings().css(<span class="string">&#x27;color&#x27;</span>,<span class="string">&#x27;red&#x27;</span>);</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>讓其他同一層的鄰居呈現紅色<br>h1 以及 p 都在同一階層</p><p><img src="https://i.imgur.com/sShTlwU.png"></p><h3 id="搭配使用"><a href="#搭配使用" class="headerlink" title="搭配使用"></a>搭配使用</h3><p>使用<code>first()</code>去找到鄰居的第一個也就是 h1</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;#1&quot;</span>).siblings().first().css(<span class="string">&quot;color&quot;</span>, <span class="string">&quot;red&quot;</span>);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>印出結果<br><img src="https://i.imgur.com/6UhZ47W.png"></p><p>也可以搭配[]中括號使用 index 抓取內容去操作</p><p>不過要注意整段 sinbings 加上中括號的部分需要再用選擇器包裹住一次才有辦法使用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">      $($(<span class="string">&quot;#1&quot;</span>).siblings()[<span class="number">2</span>]).first().css(<span class="string">&quot;color&quot;</span>, <span class="string">&quot;red&quot;</span>);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>印出 index 為 2 的物件呈現紅色<br><img src="https://i.imgur.com/n6DvYyU.png"></p><h2 id="選擇器的進階-Traversal-鄰居、爸爸與小孩-父母篇"><a href="#選擇器的進階-Traversal-鄰居、爸爸與小孩-父母篇" class="headerlink" title="選擇器的進階 Traversal 鄰居、爸爸與小孩 - 父母篇"></a>選擇器的進階 Traversal 鄰居、爸爸與小孩 - 父母篇</h2><p>尋找元素本身的上一層就是找父母的意思</p><p>使用<code>parent()</code>這個方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;p id=<span class="string">&quot;1&quot;</span>&gt;<span class="number">1</span>&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;p id=<span class="string">&quot;2&quot;</span>&gt;<span class="number">2</span>&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;p id=<span class="string">&quot;3&quot;</span>&gt;<span class="number">3</span>&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;#1&quot;</span>).parent().css(<span class="string">&quot;background-color&quot;</span>, <span class="string">&quot;red&quot;</span>);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p>尋找段落 p 的 parent 也就是它外層的 div 並讓他上紅色</p><p><img src="https://i.imgur.com/tvhQf2P.png"></p><p><img src="https://i.imgur.com/G9ftHQM.png"></p><h3 id="搭配使用-1"><a href="#搭配使用-1" class="headerlink" title="搭配使用"></a>搭配使用</h3><p>一樣可以使用<code>siblings()</code>去尋找父母的鄰居</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;#1&quot;</span>).parent().siblings().css(<span class="string">&quot;background-color&quot;</span>, <span class="string">&quot;red&quot;</span>);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>會得到這個結果</p><p><img src="https://i.imgur.com/ZFk2NEP.png"></p><p><img src="https://i.imgur.com/gZL8ley.png"></p><h2 id="選擇器的進階-Traversal-鄰居、爸爸與小孩-小孩篇"><a href="#選擇器的進階-Traversal-鄰居、爸爸與小孩-小孩篇" class="headerlink" title="選擇器的進階 Traversal 鄰居、爸爸與小孩 - 小孩篇"></a>選擇器的進階 Traversal 鄰居、爸爸與小孩 - 小孩篇</h2><p>去尋找子層的元素做操作</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;p id=<span class="string">&quot;1&quot;</span>&gt;</span><br><span class="line">        &lt;l1&gt;<span class="number">1</span>&lt;/l1&gt;</span><br><span class="line">        &lt;l1&gt;<span class="number">1</span>&lt;/l1&gt;</span><br><span class="line">        &lt;l1&gt;<span class="number">1</span>&lt;/l1&gt;</span><br><span class="line">      &lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;p id=<span class="string">&quot;2&quot;</span>&gt;<span class="number">2</span>&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;p id=<span class="string">&quot;3&quot;</span>&gt;<span class="number">3</span>&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;#1&quot;</span>).children().css(<span class="string">&quot;background-color&quot;</span>, <span class="string">&quot;red&quot;</span>);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">  &lt;/body&gt;</span><br></pre></td></tr></table></figure><p>這三個 li 就是 id:1 元素的子層<br><img src="https://i.imgur.com/fBlSOuN.png"></p><p>印出結果<br><img src="https://i.imgur.com/ZQabatx.png"></p><h3 id="搭配使用-2"><a href="#搭配使用-2" class="headerlink" title="搭配使用"></a>搭配使用</h3><p>使用<code>.last()</code>抓取子層的最後一個元素做操作</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;#1&quot;</span>).children().last().css(<span class="string">&quot;background-color&quot;</span>, <span class="string">&quot;red&quot;</span>);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>抓取最後一個元素做操作<br><img src="https://i.imgur.com/xMJVkez.png"></p><p>印出結果<br><img src="https://i.imgur.com/e3112f8.png"></p><h2 id="chain-method"><a href="#chain-method" class="headerlink" title="chain method"></a>chain method</h2><p>如果要操作的元素外面有很多層也可以把<code>children()</code>疊很多層做操作</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=<span class="string">&quot;divgrand&quot;</span>&gt;</span><br><span class="line">      &lt;div id=<span class="string">&quot;divparent&quot;</span>&gt;</span><br><span class="line">        &lt;p id=<span class="string">&quot;1&quot;</span>&gt;</span><br><span class="line">          &lt;l1&gt;<span class="number">1</span>&lt;/l1&gt;</span><br><span class="line">          &lt;l1&gt;<span class="number">2</span>&lt;/l1&gt;</span><br><span class="line">          &lt;l1&gt;<span class="number">3</span>&lt;/l1&gt;</span><br><span class="line">        &lt;/p&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;p id=<span class="string">&quot;2&quot;</span>&gt;<span class="number">2</span>&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;p id=<span class="string">&quot;3&quot;</span>&gt;<span class="number">3</span>&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;#divgrand&quot;</span>)</span><br><span class="line">        .children()</span><br><span class="line">        .children()</span><br><span class="line">        .children()</span><br><span class="line">        .last()</span><br><span class="line">        .css(<span class="string">&quot;background-color&quot;</span>, <span class="string">&quot;red&quot;</span>);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">  &lt;/body&gt;</span><br></pre></td></tr></table></figure><p>找了三層進去並且使用 last()設定最後一個元素<br><img src="https://i.imgur.com/3zcBPSI.png"></p><p>印出結果<br><img src="https://i.imgur.com/B5rnI3K.png"></p><h2 id="parant-parants-parentsUntil-的差異"><a href="#parant-parants-parentsUntil-的差異" class="headerlink" title="parant(), parants(), parentsUntil()的差異"></a>parant(), parants(), parentsUntil()的差異</h2><p>比較上面三者的不同</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=<span class="string">&quot;divgrand&quot;</span>&gt;</span><br><span class="line">      &lt;div id=<span class="string">&quot;divparent&quot;</span>&gt;</span><br><span class="line">        &lt;p id=<span class="string">&quot;1&quot;</span>&gt;</span><br><span class="line">          &lt;l1&gt;<span class="number">1</span>&lt;/l1&gt;</span><br><span class="line">          &lt;l1&gt;<span class="number">2</span>&lt;/l1&gt;</span><br><span class="line">          &lt;l1&gt;<span class="number">3</span>&lt;/l1&gt;</span><br><span class="line">        &lt;/p&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;p id=<span class="string">&quot;2&quot;</span>&gt;<span class="number">2</span>&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;p id=<span class="string">&quot;3&quot;</span>&gt;<span class="number">3</span>&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;#1&quot;</span>).parent().css(<span class="string">&quot;border&quot;</span>, <span class="string">&quot; 5px solid red&quot;</span>);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><h3 id="parant"><a href="#parant" class="headerlink" title="parant()"></a><code>parant()</code></h3><p>只取其上層一個 parent</p><p><img src="https://i.imgur.com/78XdUAR.png"></p><p>也就是外面的這層 divparent<br><img src="https://i.imgur.com/pAfCSeV.png"></p><h3 id="parants"><a href="#parants" class="headerlink" title="parants()"></a><code>parants()</code></h3><p>取全部的 parent<br><img src="https://i.imgur.com/FbdAjTU.png"></p><p><img src="https://i.imgur.com/vF99WZn.png"></p><h3 id="parentsUntil"><a href="#parentsUntil" class="headerlink" title="parentsUntil()"></a><code>parentsUntil()</code></h3><p>取到哪個 parent 為止</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;#1&quot;</span>).parentsUntil(<span class="string">&quot;#divgrand&quot;</span>).css(<span class="string">&quot;border&quot;</span>, <span class="string">&quot; 5px solid red&quot;</span>);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>取到 parent - divgrand 為止所以只會給他的上一層 divparent 上外框<br><img src="https://i.imgur.com/kY1UIFW.png"></p><p>印出結果<br><img src="https://i.imgur.com/Yos10bF.png"></p><h2 id="Traversal-Traversing-中的-first-last-find"><a href="#Traversal-Traversing-中的-first-last-find" class="headerlink" title="Traversal : Traversing 中的 first(), last(), find()"></a>Traversal : Traversing 中的 first(), last(), find()</h2><h3 id="first"><a href="#first" class="headerlink" title="first()"></a><code>first()</code></h3><p>使用<code>first()</code>去找到鄰居的第一個也就是 h1</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;#1&quot;</span>).siblings().first().css(<span class="string">&quot;color&quot;</span>, <span class="string">&quot;red&quot;</span>);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>印出結果<br><img src="https://i.imgur.com/6UhZ47W.png"></p><h3 id="last"><a href="#last" class="headerlink" title="last()"></a><code>last()</code></h3><p>使用<code>.last()</code>抓取子層的最後一個元素做操作</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;#1&quot;</span>).children().last().css(<span class="string">&quot;background-color&quot;</span>, <span class="string">&quot;red&quot;</span>);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>抓取最後一個元素做操作<br><img src="https://i.imgur.com/xMJVkez.png"></p><p>印出結果<br><img src="https://i.imgur.com/e3112f8.png"></p><h3 id="find"><a href="#find" class="headerlink" title="find()"></a><code>find()</code></h3><p>尋找特定 id 底下的元素(任何都可以 div, p, li 等等)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=<span class="string">&quot;divgrand&quot;</span>&gt;</span><br><span class="line">      &lt;div id=<span class="string">&quot;divparent&quot;</span>&gt;</span><br><span class="line">        &lt;p id=<span class="string">&quot;1&quot;</span>&gt;</span><br><span class="line">          &lt;l1&gt;<span class="number">1</span>&lt;/l1&gt;</span><br><span class="line">          &lt;l1&gt;<span class="number">2</span>&lt;/l1&gt;</span><br><span class="line">          &lt;l1&gt;<span class="number">3</span>&lt;/l1&gt;</span><br><span class="line">        &lt;/p&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;p id=<span class="string">&quot;2&quot;</span>&gt;<span class="number">2</span>&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;p id=<span class="string">&quot;3&quot;</span>&gt;<span class="number">3</span>&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;#divgrand&quot;</span>).find(<span class="string">&quot;p&quot;</span>).css(<span class="string">&quot;border&quot;</span>, <span class="string">&quot; 5px solid red&quot;</span>);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">  &lt;/body&gt;</span><br></pre></td></tr></table></figure><p>尋找 divgrand 底下的 p 段落並且全部加上邊框</p><p>印出結果<br><img src="https://i.imgur.com/HrNk2Py.png"></p><h2 id="Traversal-中的-eq-filter-與-not"><a href="#Traversal-中的-eq-filter-與-not" class="headerlink" title="Traversal 中的 eq(), filter() 與 not()"></a>Traversal 中的 eq(), filter() 與 not()</h2><h3 id="eq"><a href="#eq" class="headerlink" title="eq()"></a>eq()</h3><p>可以選取指定的位置的元素</p><p>注意:ndex 得部分不一定從 0 開始 是可以自訂成從 1 或是從 0 開始</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=<span class="string">&quot;divgrand&quot;</span>&gt;</span><br><span class="line">      &lt;div id=<span class="string">&quot;divparent&quot;</span>&gt;</span><br><span class="line">        &lt;p id=<span class="string">&quot;1&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;1&quot;</span>&gt;</span><br><span class="line">          &lt;l1&gt;<span class="number">1</span>&lt;/l1&gt;</span><br><span class="line">          &lt;l1&gt;<span class="number">2</span>&lt;/l1&gt;</span><br><span class="line">          &lt;l1&gt;<span class="number">3</span>&lt;/l1&gt;</span><br><span class="line">        &lt;/p&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;p id=<span class="string">&quot;1&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;1&quot;</span>&gt;</span><br><span class="line">        &lt;l1&gt;a&lt;/l1&gt;</span><br><span class="line">        &lt;l1&gt;b&lt;/l1&gt;</span><br><span class="line">        &lt;l1&gt;c&lt;/l1&gt;</span><br><span class="line">      &lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;p id=<span class="string">&quot;1&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;1&quot;</span>&gt;</span><br><span class="line">        &lt;l1&gt;A&lt;/l1&gt;</span><br><span class="line">        &lt;l1&gt;B&lt;/l1&gt;</span><br><span class="line">        &lt;l1&gt;C&lt;/l1&gt;</span><br><span class="line">      &lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;.1&quot;</span>).eq(<span class="string">&quot;2&quot;</span>).css(<span class="string">&quot;border&quot;</span>, <span class="string">&quot;5px solid red&quot;</span>);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p>選取 index2 為 ABC<br><img src="https://i.imgur.com/jxnaNhR.png"></p><h3 id="filter"><a href="#filter" class="headerlink" title="filter()"></a>filter()</h3><p>可以篩選內容</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=<span class="string">&quot;divgrand&quot;</span>&gt;</span><br><span class="line">      &lt;div id=<span class="string">&quot;divparent&quot;</span>&gt;</span><br><span class="line">        &lt;p id=<span class="string">&quot;1&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;1&quot;</span>&gt;</span><br><span class="line">          &lt;l1&gt;<span class="number">1</span>&lt;/l1&gt;</span><br><span class="line">          &lt;l1&gt;<span class="number">2</span>&lt;/l1&gt;</span><br><span class="line">          &lt;l1&gt;<span class="number">3</span>&lt;/l1&gt;</span><br><span class="line">        &lt;/p&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;p id=<span class="string">&quot;1&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;1&quot;</span>&gt;</span><br><span class="line">        &lt;l1&gt;a&lt;/l1&gt;</span><br><span class="line">        &lt;l1&gt;b&lt;/l1&gt;</span><br><span class="line">        &lt;l1&gt;c&lt;/l1&gt;</span><br><span class="line">      &lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;p id=<span class="string">&quot;1&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;1&quot;</span>&gt;</span><br><span class="line">        &lt;l1&gt;A&lt;/l1&gt;</span><br><span class="line">        &lt;l1&gt;B&lt;/l1&gt;</span><br><span class="line">        &lt;l1&gt;C&lt;/l1&gt;</span><br><span class="line">      &lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;1&quot;</span>&gt;span&lt;/span&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;span&quot;</span>).filter(<span class="string">&quot;.1&quot;</span>).css(<span class="string">&quot;border&quot;</span>, <span class="string">&quot;5px solid red&quot;</span>);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p>使用 filter 篩選 span 裡面有 id = 1 元素加上紅框框就不會抓到 div 去搂!</p><p><img src="https://i.imgur.com/wglnP0T.png"></p><h3 id="not"><a href="#not" class="headerlink" title="not()"></a>not()</h3><p>篩選”不是的”內容做操作</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=<span class="string">&quot;divgrand&quot;</span>&gt;</span><br><span class="line">      &lt;div id=<span class="string">&quot;divparent&quot;</span>&gt;</span><br><span class="line">        &lt;p id=<span class="string">&quot;1&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;1&quot;</span>&gt;</span><br><span class="line">          &lt;l1&gt;<span class="number">1</span>&lt;/l1&gt;</span><br><span class="line">          &lt;l1&gt;<span class="number">2</span>&lt;/l1&gt;</span><br><span class="line">          &lt;l1&gt;<span class="number">3</span>&lt;/l1&gt;</span><br><span class="line">        &lt;/p&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;p id=<span class="string">&quot;1&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;2&quot;</span>&gt;</span><br><span class="line">        &lt;l1&gt;a&lt;/l1&gt;</span><br><span class="line">        &lt;l1&gt;b&lt;/l1&gt;</span><br><span class="line">        &lt;l1&gt;c&lt;/l1&gt;</span><br><span class="line">      &lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;p id=<span class="string">&quot;1&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;1&quot;</span>&gt;</span><br><span class="line">        &lt;l1&gt;A&lt;/l1&gt;</span><br><span class="line">        &lt;l1&gt;B&lt;/l1&gt;</span><br><span class="line">        &lt;l1&gt;C&lt;/l1&gt;</span><br><span class="line">      &lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;2&quot;</span>&gt;span&lt;/span&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;p&quot;</span>).not(<span class="string">&quot;.1&quot;</span>).css(<span class="string">&quot;border&quot;</span>, <span class="string">&quot;5px solid red&quot;</span>);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p>這邊我做篩選段落中的 P 不是 class = 1 的會產紅框框</p><p>由上面可以理解小寫的 abc 不符合所以上色<br><img src="https://i.imgur.com/R1lYusp.png"></p><h1 id="第四章：快速理解-jQuery-API-一-特效類"><a href="#第四章：快速理解-jQuery-API-一-特效類" class="headerlink" title="第四章：快速理解 jQuery API (一) 特效類"></a>第四章：快速理解 jQuery API (一) 特效類</h1><h2 id="顯示或隱藏元素-hide-與-show"><a href="#顯示或隱藏元素-hide-與-show" class="headerlink" title="顯示或隱藏元素 hide() 與 show()"></a>顯示或隱藏元素 hide() 與 show()</h2><p>這邊我設置點擊事件作範例</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button id=<span class="string">&quot;show&quot;</span>&gt;show&lt;/button&gt;</span><br><span class="line">    &lt;button id=<span class="string">&quot;hide&quot;</span>&gt;hide&lt;/button&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div&gt;div&lt;/div&gt;</span><br><span class="line">    &lt;div&gt;div&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;#hide&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="string">&quot;div&quot;</span>).hide();</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      $(<span class="string">&quot;#show&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="string">&quot;div&quot;</span>).show();</span><br><span class="line">      &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">  &lt;/body&gt;</span><br></pre></td></tr></table></figure><p>show,hide 的效果<br><img src="https://i.imgur.com/7OR5I3T.gif"></p><h2 id="淡入與淡出-fadeIn-fadeOut"><a href="#淡入與淡出-fadeIn-fadeOut" class="headerlink" title="淡入與淡出 fadeIn() fadeOut()"></a>淡入與淡出 fadeIn() fadeOut()</h2><p>這邊我設置個持續一秒效果如下:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;#hide&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="string">&quot;div&quot;</span>).fadeOut(<span class="number">1000</span>);</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      $(<span class="string">&quot;#show&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="string">&quot;div&quot;</span>).fadeIn(<span class="number">1000</span>);</span><br><span class="line">      &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/CgLEUwH.gif"></p><h2 id="特效類-animate-實現簡單動畫"><a href="#特效類-animate-實現簡單動畫" class="headerlink" title="特效類 animate() 實現簡單動畫"></a>特效類 animate() 實現簡單動畫</h2><p>一般不會這樣使用，會放到 CSS 裡面操作</p><p>不過使用起來長這樣:</p><ul><li>設定了變長</li><li>設定了透明</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;#hide&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="string">&quot;div&quot;</span>).animate(&#123; <span class="attr">opacity</span>: <span class="number">0.3</span> &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      $(<span class="string">&quot;#show&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="string">&quot;div&quot;</span>).animate(&#123; <span class="attr">width</span>: <span class="string">&quot;400px&quot;</span> &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/wzj5FRd.gif"></p><h2 id="jQuery-中的-Callback-回調-函式"><a href="#jQuery-中的-Callback-回調-函式" class="headerlink" title="jQuery 中的 Callback 回調(函式)"></a>jQuery 中的 Callback 回調(函式)</h2><p>當事件觸發後執行的函式就是回調函式</p><p>這裡的 animate 就是一種:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">     $(<span class="string">&quot;#hide&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">       $(<span class="string">&quot;div&quot;</span>).animate(&#123; <span class="attr">opacity</span>: <span class="number">0.3</span> &#125;);</span><br><span class="line">     &#125;);</span><br><span class="line"></span><br><span class="line">     $(<span class="string">&quot;#show&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">       $(<span class="string">&quot;div&quot;</span>).animate(&#123; <span class="attr">width</span>: <span class="string">&quot;400px&quot;</span> &#125;);</span><br><span class="line">     &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h1 id="第五章：快速理解-jQuery-API-二-「取得」與「覆寫」值"><a href="#第五章：快速理解-jQuery-API-二-「取得」與「覆寫」值" class="headerlink" title="第五章：快速理解 jQuery API (二) 「取得」與「覆寫」值"></a>第五章：快速理解 jQuery API (二) 「取得」與「覆寫」值</h1><h2 id="text-取得元素標籤中的文字-修改文字也可以的"><a href="#text-取得元素標籤中的文字-修改文字也可以的" class="headerlink" title="text()取得元素標籤中的文字 / 修改文字也可以的"></a>text()取得元素標籤中的文字 / 修改文字也可以的</h2><p><code>text()</code>不加內容的用法可以取得選取元素的文字內容</p><p>在這邊同時利用 alert 彈出選取元素的文字內容</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">    &lt;button <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;btnone&quot;</span>&gt;getstr&lt;/button&gt;</span><br><span class="line">    &lt;button <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;btntwo&quot;</span>&gt;getsecstr&lt;/button&gt;</span><br><span class="line"></span><br><span class="line">    &lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;1&quot;</span>&gt;<span class="number">123</span>&lt;/p&gt;</span><br><span class="line">    &lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;2&quot;</span>&gt;<span class="number">123</span>&lt;/p&gt;</span><br><span class="line">    &lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;3&quot;</span>&gt;<span class="number">123</span>&lt;/p&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;.btnone&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> str = $(<span class="string">&quot;.1&quot;</span>).text();</span><br><span class="line">        alert(str);</span><br><span class="line">      &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>點擊 getstr 後跳出 class = 1 那段落的文字內容<br><img src="https://i.imgur.com/rCpcu42.png"></p><h3 id="並且可以針對選取的-class-去選擇-first-last"><a href="#並且可以針對選取的-class-去選擇-first-last" class="headerlink" title="並且可以針對選取的 class 去選擇 first, last"></a>並且可以針對選取的 class 去選擇 first, last</h3><p>抓取元素第一個最後一個等等</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;btnone&quot;</span>&gt;getstr&lt;/button&gt;</span><br><span class="line">    &lt;button <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;btntwo&quot;</span>&gt;getsecstr&lt;/button&gt;</span><br><span class="line"></span><br><span class="line">    &lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;1&quot;</span>&gt;<span class="number">123456</span>&lt;/p&gt;</span><br><span class="line">    &lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;2&quot;</span>&gt;<span class="number">123</span>&lt;/p&gt;</span><br><span class="line">    &lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;3&quot;</span>&gt;<span class="number">123</span>&lt;/p&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;.btnone&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> str = $(<span class="string">&quot;p:first&quot;</span>).text();</span><br><span class="line">        alert(str);</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      $(<span class="string">&quot;#show&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;&#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">  &lt;/body&gt;</span><br></pre></td></tr></table></figure><p>點擊 getstr 的印出結果<br><img src="https://i.imgur.com/wNqYzHQ.png"></p><h3 id="針對抓取的元素可以做指定"><a href="#針對抓取的元素可以做指定" class="headerlink" title="針對抓取的元素可以做指定"></a>針對抓取的元素可以做指定</h3><p>這樣選取就可以針對修飾段落 p 中的 class = 3 的部分</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;btnone&quot;</span>&gt;getstr&lt;/button&gt;</span><br><span class="line">    &lt;button <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;btntwo&quot;</span>&gt;getsecstr&lt;/button&gt;</span><br><span class="line"></span><br><span class="line">    &lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;1&quot;</span>&gt;<span class="number">123456</span>&lt;/p&gt;</span><br><span class="line">    &lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;2&quot;</span>&gt;<span class="number">123</span>&lt;/p&gt;</span><br><span class="line">    &lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;3&quot;</span>&gt;<span class="number">12348</span>&lt;/p&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;.btnone&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> str = $(<span class="string">&quot;p.3&quot;</span>).text();</span><br><span class="line">        alert(str);</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      $(<span class="string">&quot;#show&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;&#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">  &lt;/body&gt;</span><br></pre></td></tr></table></figure><p>點擊 getstr 的印出結果<br><img src="https://i.imgur.com/t3YYetM.png"></p><h3 id="text-，把值放進去設定會修改文字內容"><a href="#text-，把值放進去設定會修改文字內容" class="headerlink" title="text()，把值放進去設定會修改文字內容"></a>text()，把值放進去設定會修改文字內容</h3><p>如果在 text()內部填入值的話會修改文字內容</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;btnone&quot;</span>&gt;getstr&lt;/button&gt;</span><br><span class="line">    &lt;button <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;btntwo&quot;</span>&gt;getsecstr&lt;/button&gt;</span><br><span class="line"></span><br><span class="line">    &lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;1&quot;</span>&gt;<span class="number">123456</span>&lt;/p&gt;</span><br><span class="line">    &lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;2&quot;</span>&gt;<span class="number">123</span>&lt;/p&gt;</span><br><span class="line">    &lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;3&quot;</span>&gt;<span class="number">12348</span>&lt;/p&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;.btnone&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="string">&quot;p.3&quot;</span>).text(<span class="string">&quot;hello world&quot;</span>);</span><br><span class="line">      &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p>在這邊操作的話會是點擊後改變文字內容成()內部的文字</p><p><img src="https://i.imgur.com/ZkBBG9u.png"></p><h2 id="html-取得或是修改-DOM"><a href="#html-取得或是修改-DOM" class="headerlink" title="html() 取得或是修改 DOM"></a>html() 取得或是修改 DOM</h2><h3 id="html-內不填入值"><a href="#html-內不填入值" class="headerlink" title="html()內不填入值"></a>html()內不填入值</h3><p>取得 html 內部的值:<br>html()內不填入值，一樣會取得元素的值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;btnone&quot;</span>&gt;change&lt;/button&gt;</span><br><span class="line">    &lt;button <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;btntwo&quot;</span>&gt;reverse&lt;/button&gt;</span><br><span class="line"></span><br><span class="line">    &lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;1&quot;</span>&gt;I will change&lt;/p&gt;</span><br><span class="line">    &lt;div&gt;&lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;.btnone&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> str = $(<span class="string">&quot;.1&quot;</span>).html();</span><br><span class="line">        alert(str);</span><br><span class="line">      &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p>按下 change 後顯示這個段落 p 內部的值<br><img src="https://i.imgur.com/3ZtIw43.png"></p><p>取得 html tag:<br>html()內不填入值，但是抓取 parent 的話會直接印出 children 的 html tag+內容</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;btnone&quot;</span>&gt;change&lt;/button&gt;</span><br><span class="line">    &lt;button <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;btntwo&quot;</span>&gt;reverse&lt;/button&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;p id=<span class="string">&quot;1&quot;</span>&gt;I will change&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;.btnone&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> str = $(<span class="string">&quot;div&quot;</span>).html();</span><br><span class="line">        alert(str);</span><br><span class="line">      &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">  &lt;/body&gt;</span><br></pre></td></tr></table></figure><p>點擊 change 後印出結果會包含子層的 html tag+內容<br><img src="https://i.imgur.com/PPIeixT.png"></p><h3 id="html-內部填入值"><a href="#html-內部填入值" class="headerlink" title="html()內部填入值"></a>html()內部填入值</h3><p>會取代掉原本的內容</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;btnone&quot;</span>&gt;change&lt;/button&gt;</span><br><span class="line">    &lt;button <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;btntwo&quot;</span>&gt;reverse&lt;/button&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div&gt;&lt;/div&gt;</span><br><span class="line">    &lt;p id=<span class="string">&quot;1&quot;</span>&gt;I will change&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;.btnone&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="string">&quot;.btntwo&quot;</span>).html(<span class="string">&quot;&lt;p&gt;hello world&lt;/p&gt;&quot;</span>);</span><br><span class="line">      &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">  &lt;/body&gt;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/SvvmhJg.png"></p><p>點下 change 後 reverse 會轉變成 hello world<br><img src="https://i.imgur.com/noiha7A.png"></p><h4 id="比較奇怪的情況是"><a href="#比較奇怪的情況是" class="headerlink" title="比較奇怪的情況是"></a>比較奇怪的情況是</h4><p>如果把內容換成 div 就不會被取代而是增加一個 children 進去如下圖</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;.btnone&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="string">&quot;div&quot;</span>).html(<span class="string">&quot;&lt;p&gt;hello world&lt;/p&gt;&quot;</span>);</span><br><span class="line">      &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br></pre></td></tr></table></figure><p>點擊 change 後 hello world 加入 div 內部<br><img src="https://i.imgur.com/VPothxj.png"></p><h2 id="attr-取得或改變元素的屬性"><a href="#attr-取得或改變元素的屬性" class="headerlink" title="attr() 取得或改變元素的屬性"></a>attr() 取得或改變元素的屬性</h2><h3 id="取得元素的屬性"><a href="#取得元素的屬性" class="headerlink" title="取得元素的屬性"></a>取得元素的屬性</h3><p>取得 href,alt 的值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button id=<span class="string">&quot;btn1&quot;</span>&gt;getHREF&lt;/button&gt;</span><br><span class="line">    &lt;button id=<span class="string">&quot;btn2&quot;</span>&gt;getImagealt&lt;/button&gt;</span><br><span class="line"></span><br><span class="line">    &lt;p&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://123123123.com&quot;</span>&gt;</span>123123123<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span>&lt;/p&gt;</span><br><span class="line">    &lt;img src=<span class="string">&quot;123.jpg&quot;</span> alt=<span class="string">&quot;cloudy sky&quot;</span> /&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;#btn1&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> str = $(<span class="string">&quot;a&quot;</span>).attr(<span class="string">&quot;href&quot;</span>);</span><br><span class="line">        alert(str);</span><br><span class="line">      &#125;);</span><br><span class="line">      $(<span class="string">&quot;#btn2&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> str = $(<span class="string">&quot;img&quot;</span>).attr(<span class="string">&quot;alt&quot;</span>);</span><br><span class="line">        alert(str);</span><br><span class="line">      &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p>點擊 getHREF<br><img src="https://i.imgur.com/hSXgj0A.png"></p><p>點擊 getimagealt<br><img src="https://i.imgur.com/Ug7xGVE.png"></p><h3 id="複寫值"><a href="#複寫值" class="headerlink" title="複寫值"></a>複寫值</h3><h4 id="複寫單一屬性"><a href="#複寫單一屬性" class="headerlink" title="複寫單一屬性"></a>複寫單一屬性</h4><p><code>attr(&quot;要被複寫的屬性名稱&quot;, &quot;改寫的內容&quot;)</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button id=<span class="string">&quot;btn1&quot;</span>&gt;getHREF&lt;/button&gt;</span><br><span class="line">    &lt;button id=<span class="string">&quot;btn2&quot;</span>&gt;getImagealt&lt;/button&gt;</span><br><span class="line"></span><br><span class="line">    &lt;p&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://123123123.com&quot;</span>&gt;</span>123123123<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span>&lt;/p&gt;</span><br><span class="line">    &lt;img src=<span class="string">&quot;123.jpg&quot;</span> alt=<span class="string">&quot;cloudy sky&quot;</span> /&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;#btn2&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="string">&quot;img&quot;</span>).attr(<span class="string">&quot;alt&quot;</span>, <span class="string">&quot;123&quot;</span>);</span><br><span class="line">      &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><h4 id="一次複寫多種屬性需要加入中括號並且要修改的屬性鍵值配對"><a href="#一次複寫多種屬性需要加入中括號並且要修改的屬性鍵值配對" class="headerlink" title="一次複寫多種屬性需要加入中括號並且要修改的屬性鍵值配對"></a>一次複寫多種屬性需要加入中括號並且要修改的屬性鍵值配對</h4><p>ex.(title: “jQuery”)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button id=<span class="string">&quot;btn1&quot;</span>&gt;getHREF&lt;/button&gt;</span><br><span class="line">    &lt;button id=<span class="string">&quot;btn2&quot;</span>&gt;getImagealt&lt;/button&gt;</span><br><span class="line"></span><br><span class="line">    &lt;p&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://123123123.com&quot;</span>&gt;</span>123123123<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span>&lt;/p&gt;</span><br><span class="line">    &lt;img src=<span class="string">&quot;123.jpg&quot;</span> alt=<span class="string">&quot;cloudy sky&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">      $(<span class="string">&quot;#btn2&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> str = $(<span class="string">&quot;img&quot;</span>).attr(&#123;</span><br><span class="line">          title: <span class="string">&quot;jQuery&quot;</span>,</span><br><span class="line">          alt: <span class="string">&quot;jQuery Logo&quot;</span>,</span><br><span class="line">        &#125;);</span><br><span class="line">        alert(str);</span><br><span class="line">      &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>image 就會被複寫新的值進去(修改 alt 以及增加 title 進去)<br><img src="https://i.imgur.com/AmoHfW7.png"></p><h2 id="val-取得或修改-form-表單的值"><a href="#val-取得或修改-form-表單的值" class="headerlink" title="val() 取得或修改 form 表單的值"></a>val() 取得或修改 form 表單的值</h2><h3 id="val-取得值"><a href="#val-取得值" class="headerlink" title="val()取得值"></a>val()取得值</h3><p>針對輸入在#name, #comment, #city 這三個區域的值並且使用 alert 把它們抓出來</p><p><img src="https://i.imgur.com/BQnlJwV.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;label <span class="keyword">for</span>=<span class="string">&quot;&quot;</span>&gt;姓名&lt;/label&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;text&quot;</span> id=<span class="string">&quot;name&quot;</span> /&gt;<span class="xml"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span></span><br><span class="line">    &lt;label <span class="keyword">for</span>=<span class="string">&quot;&quot;</span>&gt;comments&lt;/label&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;text&quot;</span> id=<span class="string">&quot;comment&quot;</span> /&gt;<span class="xml"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span></span><br><span class="line">    &lt;label&gt;city&lt;/label&gt;</span><br><span class="line">    &lt;select id=<span class="string">&quot;city&quot;</span>&gt;</span><br><span class="line">      &lt;option value=<span class="string">&quot;JP&quot;</span>&gt;JP&lt;/option&gt;</span><br><span class="line">      &lt;option value=<span class="string">&quot;USA&quot;</span>&gt;USA&lt;/option&gt;</span><br><span class="line">      &lt;option value=<span class="string">&quot;UK&quot;</span>&gt;UK&lt;/option&gt;</span><br><span class="line">    &lt;/select&gt;</span><br><span class="line">    &lt;br /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;button id=<span class="string">&quot;getname&quot;</span>&gt;getname&lt;/button&gt;</span><br><span class="line">    &lt;button id=<span class="string">&quot;getcomment&quot;</span>&gt;getcomment&lt;/button&gt;</span><br><span class="line">    &lt;button id=<span class="string">&quot;getcity&quot;</span>&gt;getcity&lt;/button&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;#getname&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> name = $(<span class="string">&quot;#name&quot;</span>).val();</span><br><span class="line">        alert(name);</span><br><span class="line">      &#125;);</span><br><span class="line">      $(<span class="string">&quot;#getcomment&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> comment = $(<span class="string">&quot;#comment&quot;</span>).val();</span><br><span class="line">        alert(comment);</span><br><span class="line">      &#125;);</span><br><span class="line">      $(<span class="string">&quot;#getcity&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> city = $(<span class="string">&quot;#city&quot;</span>).val();</span><br><span class="line">        alert(city);</span><br><span class="line">      &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">  &lt;/body&gt;</span><br></pre></td></tr></table></figure><p>輸出結果:<br><img src="https://i.imgur.com/Fl99mpu.png"></p><h3 id="val-修改內容"><a href="#val-修改內容" class="headerlink" title="val()修改內容"></a>val()修改內容</h3><p>這邊使用$(“#getname”).text()取得要修改的內容後指派給變數 name</p><p>在使用 val(name)直接更換裡面的內容</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;label <span class="keyword">for</span>=<span class="string">&quot;&quot;</span>&gt;國家&lt;/label&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;text&quot;</span> id=<span class="string">&quot;name&quot;</span> /&gt;<span class="xml"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span></span><br><span class="line"></span><br><span class="line">    &lt;button id=<span class="string">&quot;getname&quot;</span>&gt;TW&lt;/button&gt;</span><br><span class="line">    &lt;button id=<span class="string">&quot;getcomment&quot;</span>&gt;UK&lt;/button&gt;</span><br><span class="line">    &lt;button id=<span class="string">&quot;getcity&quot;</span>&gt;USA&lt;/button&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;#getname&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> name = $(<span class="string">&quot;#getname&quot;</span>).text();</span><br><span class="line">        $(<span class="string">&quot;#name&quot;</span>).val(name);</span><br><span class="line">      &#125;);</span><br><span class="line">      $(<span class="string">&quot;#getcomment&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> name = $(<span class="string">&quot;#getcomment&quot;</span>).text();</span><br><span class="line">        $(<span class="string">&quot;#name&quot;</span>).val(name);</span><br><span class="line">      &#125;);</span><br><span class="line">      $(<span class="string">&quot;#getcity&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> name = $(<span class="string">&quot;#getcity&quot;</span>).text();</span><br><span class="line">        $(<span class="string">&quot;#name&quot;</span>).val(name);</span><br><span class="line">      &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p>點擊事件觸發修改 value</p><p><img src="https://i.imgur.com/6noHN7z.gif"></p><h1 id="第六章-快速理解-jQuery-API-三-DOM-的操作"><a href="#第六章-快速理解-jQuery-API-三-DOM-的操作" class="headerlink" title="第六章 快速理解 jQuery API (三) DOM 的操作"></a>第六章 快速理解 jQuery API (三) DOM 的操作</h1><h2 id="append-選取元素內部最後加入內容"><a href="#append-選取元素內部最後加入內容" class="headerlink" title="append()選取元素內部最後加入內容"></a>append()選取元素內部最後加入內容</h2><p>在所選取的元素內部的最後方加入內容</p><p>可以是純文字或是<code>&lt;p&gt;&lt;div&gt;&lt;h1&gt;</code></p><p>範例處我做<code>&lt;h1&gt;</code>示範<br><img src="https://i.imgur.com/dXMUKkz.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h1&gt;append&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div id=<span class="string">&quot;div&quot;</span>&gt;</span><br><span class="line">      &lt;p&gt;</span><br><span class="line">        Lorem ipsum dolor sit amet consectetur adipisicing elit. Consectetur,</span><br><span class="line">        quasi?</span><br><span class="line">      &lt;/p&gt;</span><br><span class="line">      &lt;p&gt;</span><br><span class="line">        Lorem ipsum dolor, sit amet consectetur adipisicing elit. In,</span><br><span class="line">        voluptatem?</span><br><span class="line">      &lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;#div&quot;</span>).append(<span class="string">&quot;&lt;div&gt;this is how append work&lt;/div&gt;&quot;</span>);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><h2 id="prepend-選取元素內部最前加入內容"><a href="#prepend-選取元素內部最前加入內容" class="headerlink" title="prepend()選取元素內部最前加入內容"></a>prepend()選取元素內部最前加入內容</h2><p>在所選取的元素內部的最前方加入內容</p><p>可以是純文字或是<code>&lt;p&gt;&lt;div&gt;&lt;h1&gt;</code></p><p>範例處我做<code>&lt;h1&gt;</code>示範</p><p><img src="https://i.imgur.com/3atIvqO.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;h1&gt;prepend&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">  &lt;div id=<span class="string">&quot;div&quot;</span>&gt;</span><br><span class="line">    &lt;p&gt;</span><br><span class="line">      Lorem ipsum dolor sit amet consectetur adipisicing elit. Consectetur,</span><br><span class="line">      quasi?</span><br><span class="line">    &lt;/p&gt;</span><br><span class="line">    &lt;p&gt;</span><br><span class="line">      Lorem ipsum dolor, sit amet consectetur adipisicing elit. In,</span><br><span class="line">      voluptatem?</span><br><span class="line">    &lt;/p&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    $(<span class="string">&quot;#div&quot;</span>).prepend(<span class="string">&quot;&lt;h1&gt;this is how prepend work&lt;/h1&gt;&quot;</span>);</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><h2 id="before-選取元素同一層最前加入內容"><a href="#before-選取元素同一層最前加入內容" class="headerlink" title="before() 選取元素同一層最前加入內容"></a>before() 選取元素同一層最前加入內容</h2><p>在所選取的元素同一層(sibling)的前方加入內容</p><p>可以在圖中觀察到我加進去的 h1 跟我選取的 div 是 sibling 也就是它們是同一層的最前方<br><img src="https://i.imgur.com/XeFnrHE.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;h1&gt;before&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">  &lt;div id=<span class="string">&quot;div&quot;</span>&gt;</span><br><span class="line">    &lt;p&gt;</span><br><span class="line">      Lorem ipsum dolor sit amet consectetur adipisicing elit. Consectetur,</span><br><span class="line">      quasi?</span><br><span class="line">    &lt;/p&gt;</span><br><span class="line">    &lt;p&gt;</span><br><span class="line">      Lorem ipsum dolor, sit amet consectetur adipisicing elit. In,</span><br><span class="line">      voluptatem?</span><br><span class="line">    &lt;/p&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    $(<span class="string">&quot;#div&quot;</span>).before(<span class="string">&quot;&lt;h1&gt;this is how before work&lt;/h1&gt;&quot;</span>);</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><h2 id="after-選取元素同一層最後加入內容"><a href="#after-選取元素同一層最後加入內容" class="headerlink" title="after()選取元素同一層最後加入內容"></a>after()選取元素同一層最後加入內容</h2><p>在所選取的元素同一層(sibling)的後方加入內容</p><p>可以在圖中觀察到我加進去的 h1 跟我選取的 div 是 sibling 也就是它們是同一層的後方<br><img src="https://i.imgur.com/ttQq8hP.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h1&gt;after&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div id=<span class="string">&quot;div&quot;</span>&gt;</span><br><span class="line">      &lt;p&gt;</span><br><span class="line">        Lorem ipsum dolor sit amet consectetur adipisicing elit. Consectetur,</span><br><span class="line">        quasi?</span><br><span class="line">      &lt;/p&gt;</span><br><span class="line">      &lt;p&gt;</span><br><span class="line">        Lorem ipsum dolor, sit amet consectetur adipisicing elit. In,</span><br><span class="line">        voluptatem?</span><br><span class="line">      &lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;#div&quot;</span>).after(<span class="string">&quot;&lt;h1&gt;this is how after work&lt;/h1&gt;&quot;</span>);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">  &lt;/body&gt;</span><br></pre></td></tr></table></figure><h2 id="empty-清空內容-留下-tag"><a href="#empty-清空內容-留下-tag" class="headerlink" title="empty()清空內容(留下 tag)"></a>empty()清空內容(留下 tag)</h2><p>清空指定元素</p><p>像我這邊移除了內容，但是 div 的部分會繼續存在<br><img src="https://i.imgur.com/YHj4NQw.gif"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">   &lt;h1&gt;empety&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">   &lt;div id=<span class="string">&quot;div&quot;</span>&gt;</span><br><span class="line">     &lt;p&gt;Lorem ipsum dolor sit amet consec&lt;/p&gt;</span><br><span class="line">     &lt;p&gt;&lt;/p&gt;</span><br><span class="line">   &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">   &lt;button id=<span class="string">&quot;btn&quot;</span>&gt;empty&lt;/button&gt;</span><br><span class="line">   &lt;script&gt;</span><br><span class="line">     $(<span class="string">&quot;#btn&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">       $(<span class="string">&quot;#div&quot;</span>).empty();</span><br><span class="line">     &#125;);</span><br><span class="line">   &lt;/script&gt;</span><br><span class="line"> &lt;/body&gt;</span><br></pre></td></tr></table></figure><h2 id="remove-移除元素-移除-tag"><a href="#remove-移除元素-移除-tag" class="headerlink" title="remove() 移除元素(移除 tag)"></a>remove() 移除元素(移除 tag)</h2><p>移除指定元素</p><p>像我這邊移除了 div，他會 div 連同內容全部移除<br><img src="https://i.imgur.com/fGuqoW9.gif"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h1&gt;after&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div id=<span class="string">&quot;div&quot;</span>&gt;</span><br><span class="line">      &lt;p&gt;</span><br><span class="line">        Lorem ipsum dolor sit amet consectetur adipisicing elit. Consectetur,</span><br><span class="line">        quasi?</span><br><span class="line">      &lt;/p&gt;</span><br><span class="line">      &lt;p&gt;</span><br><span class="line">        Lorem ipsum dolor, sit amet consectetur adipisicing elit. In,</span><br><span class="line">        voluptatem?</span><br><span class="line">      &lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;button id=<span class="string">&quot;btn&quot;</span>&gt;remove&lt;/button&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;#btn&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="string">&quot;#div&quot;</span>).remove();</span><br><span class="line">      &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">  &lt;/body&gt;</span><br></pre></td></tr></table></figure><h2 id="remoteAttr-刪除元素的屬性"><a href="#remoteAttr-刪除元素的屬性" class="headerlink" title="remoteAttr() 刪除元素的屬性"></a>remoteAttr() 刪除元素的屬性</h2><p>刪除元素的屬性</p><p><img src="https://i.imgur.com/0Q04FIJ.gif"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h1&gt;removeAttr&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div id=<span class="string">&quot;div&quot;</span>&gt;</span><br><span class="line">      &lt;a id=<span class="string">&quot;a&quot;</span> href=<span class="string">&quot;http://123123.com&quot;</span>&gt;&lt;/a&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;button id=<span class="string">&quot;btn&quot;</span>&gt;removeAttr&lt;/button&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">      $(<span class="string">&quot;#btn&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="string">&quot;#a&quot;</span>).removeAttr(<span class="string">&quot;href&quot;</span>);</span><br><span class="line">      &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">  &lt;/body&gt;</span><br></pre></td></tr></table></figure><h2 id="wrap-可以保裹住元素"><a href="#wrap-可以保裹住元素" class="headerlink" title="wrap() 可以保裹住元素"></a>wrap() 可以保裹住元素</h2><p>影片範例中使用了 div 以及 b,em 等 tag 去包裹元素</p><p>但是可以使用 append 相關的 API 就好這個比較不常使用</p><p><img src="https://i.imgur.com/H7aeaiF.png"></p><p><img src="https://i.imgur.com/kELnK6C.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;JS-幼幼班-jQuery-篇&quot;&gt;&lt;a href=&quot;#JS-幼幼班-jQuery-篇&quot; class=&quot;headerlink&quot; title=&quot;JS 幼幼班 - jQuery 篇&quot;&gt;&lt;/a&gt;JS 幼幼班 - jQuery 篇&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&quot;tags</summary>
      
    
    
    
    <category term="jQuery" scheme="http://example.com/categories/jQuery/"/>
    
    
    <category term="jQuery" scheme="http://example.com/tags/jQuery/"/>
    
  </entry>
  
  <entry>
    <title>Hexo-部落格架設</title>
    <link href="http://example.com/2021/02/22/[%E7%AD%86%E8%A8%98]Hexo-intro/"/>
    <id>http://example.com/2021/02/22/[%E7%AD%86%E8%A8%98]Hexo-intro/</id>
    <published>2021-02-22T11:25:12.764Z</published>
    <updated>2021-03-21T18:21:24.748Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hexo-部落格架設"><a href="#Hexo-部落格架設" class="headerlink" title="Hexo 部落格架設"></a>Hexo 部落格架設</h1><p>環境配置</p><ul><li>安裝<a href="https://github.com/nvm-sh/nvm">NVM</a></li><li>安裝 <a href="https://nodejs.org/en/">Node.js</a></li><li>安裝 <a href="https://git-scm.com/">Git</a></li></ul><h1 id="NVM-Node-js"><a href="#NVM-Node-js" class="headerlink" title="NVM,Node.js"></a>NVM,Node.js</h1><blockquote><p>Node Version Manager</p></blockquote><p>Node 的版本控制器，因應各種不同需求所有有辦法下載不同版本的 node.js 是很重要的!</p><p>記得要在 WSL 的環境下安裝喔!<br><a href="https://hackmd.io/csXtjcARRWmb9AS3mKC1oQ">在 windows 安裝 WSL</a></p><p>並且使用 VScode 開啟</p><h2 id="Installing-and-Updating"><a href="#Installing-and-Updating" class="headerlink" title="Installing and Updating"></a>Installing and Updating</h2><ul><li><p>記得終端機環境要選 WSL</p></li><li><p>安裝 NVM<br><code>curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.2/install.sh | bash</code></p></li><li><p>更新 Node.js 到最新版本</p><p><code>nvm install --lts</code></p></li></ul><h1 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h1><p><a href="https://hexo.io/zh-tw/">Hexo</a></p><h2 id="Installing-and-Updating-1"><a href="#Installing-and-Updating-1" class="headerlink" title="Installing and Updating"></a>Installing and Updating</h2><p><code>$npm install hexo-cli -g</code></p><p><code>$hexo init blog</code></p><p><code>$cd blog</code> 一定要找到資料夾裝在哪邊!不然之後推不上去 Github</p><p><code>$npm install</code></p><p><code>$hexo server</code></p><p>最後一部完成之後基本上就可以得到本地端的 Blog 雛形</p><p><img src="https://i.imgur.com/XSOHz0O.png"></p><h2 id="使用-Hexo"><a href="#使用-Hexo" class="headerlink" title="使用 Hexo"></a>使用 Hexo</h2><p>這邊必須先把 Hexo 的資料夾 init 才能跟 Github 作部署</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line">$ cd &lt;folder&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure><p>使用 Vscode 的資料夾會長這樣</p><p><img src="https://i.imgur.com/zjxzycC.png"></p><ul><li>_config.yml：網站 配置 檔案，可以在此配置大部分的設定。</li><li>themes：主題 資料夾。Hexo 會根據主題來產生靜態檔案。</li></ul><h2 id="常用指令"><a href="#常用指令" class="headerlink" title="常用指令"></a>常用指令</h2><p><code>$ hexo generate</code> (hexo g) 產生靜態檔案，會在目錄下產生 public 資料夾。<br><code>$ hexo server</code> (hexo s) 啟動伺服器，預設是 <a href="http://localhost:4000/%E3%80%82">http://localhost:4000/。</a><br><code>$ hexo deploy</code> (hexo d) 部署網站。（ 比如 github, heroku 等平台 ）</p><p><code>$ hexo new [layout] &lt;title&gt;</code> 如果沒有設定 layout 的話，則會使用 _config.yml 中的 default_layout 設定代替。</p><p><code>$ hexo new “postName”</code> 新建文章<br><code>$ hexo new page “pageName”</code> 新建頁面</p><p>所有的文章都會在 source/_posts 裡面。一開始裡面就已經有一篇範例文章 hello-world.md 了。</p><p>常用组合</p><p><code>$ hexo d -g</code> 產生靜態檔後部署<br><code>$ hexo s -g</code> 產生靜態檔後預覽</p><h2 id="更換主題"><a href="#更換主題" class="headerlink" title="更換主題"></a>更換主題</h2><p><a href="https://hexo.io/themes/">Hexo 主題</a></p><p>Element</p><p>是我選取的主題內容</p><ul><li>必須先使用<code>git clone</code><br>抓到本地端的資料夾內，後方的 themes/element 是你要存放的資料夾位置跟名稱</li></ul><p><code>git clone https://github.com/artchen/hexo-theme-element.git themes/element</code></p><ul><li>詳讀主題作者的 Github 內容<br>會有很多安裝資訊以及客製化的方法每一個主題都不太一樣，我這邊有很多必須先預裝的 plugins(插件)</li></ul><p>This theme depends on the following Hexo plugins:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">hexo-generator-tag</span><br><span class="line">hexo-generator-feed</span><br><span class="line">hexo-renderer-ejs</span><br><span class="line">hexo-renderer-scss</span><br><span class="line">hexo-renderer-marked</span><br><span class="line">hexo-pagination</span><br><span class="line">hexo-all-minifier</span><br><span class="line">hexo-autoprefixer</span><br><span class="line">hexo-front-matter</span><br></pre></td></tr></table></figure><ul><li>接著修改網站設定_config.yml<br>他原本預設是 landscape</li></ul><p><img src="https://i.imgur.com/p8oEqjl.png"></p><ul><li>重新啟動 server</li></ul><p><code>$ hexo server</code></p><ul><li>就可以使用主題摟!<br><img src="https://i.imgur.com/L3WEgGZ.png"></li></ul><h2 id="在-GitHub-上新增-GitHub-Pages"><a href="#在-GitHub-上新增-GitHub-Pages" class="headerlink" title="在 GitHub 上新增 GitHub Pages"></a>在 GitHub 上新增 GitHub Pages</h2><p>重點來了，讓 Blog 上線!</p><ol><li>在 GitHub 創建一個名稱為<code>&lt;username&gt;.github.io</code> 的專案</li></ol><p><img src="https://i.imgur.com/JRF24hO.png"></p><ol><li>安装 deploy git 插件</li></ol><p><code>npm install hexo-deployer-git --save</code></p><ol start="3"><li>在主題配置文件 _config.yml 中修改 repository 名稱</li></ol><p><img src="https://i.imgur.com/Yf9M7VM.png"></p><ol start="4"><li>執行 hexo d 即可發佈到 GitHub 上</li></ol><p><username>.github.io 到真實的網頁上面輸入就可以看到剛剛推上去的 Blog 搂!</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Hexo-部落格架設&quot;&gt;&lt;a href=&quot;#Hexo-部落格架設&quot; class=&quot;headerlink&quot; title=&quot;Hexo 部落格架設&quot;&gt;&lt;/a&gt;Hexo 部落格架設&lt;/h1&gt;&lt;p&gt;環境配置&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;安裝&lt;a href=&quot;https://g</summary>
      
    
    
    
    <category term="Hexo" scheme="http://example.com/categories/Hexo/"/>
    
    
    <category term="Hexo" scheme="http://example.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>實作練習-JavaScript BookList App</title>
    <link href="http://example.com/2020/11/27/JavaScript%20BookList%20App/"/>
    <id>http://example.com/2020/11/27/JavaScript%20BookList%20App/</id>
    <published>2020-11-27T12:27:12.000Z</published>
    <updated>2021-04-04T14:14:25.235Z</updated>
    
    <content type="html"><![CDATA[<h1 id="JavaScript-BookList-App-可以加入或刪去物件的清單"><a href="#JavaScript-BookList-App-可以加入或刪去物件的清單" class="headerlink" title="JavaScript BookList App (可以加入或刪去物件的清單)"></a>JavaScript BookList App (可以加入或刪去物件的清單)</h1><hr><h2 id="tags-Javascript-relate"><a href="#tags-Javascript-relate" class="headerlink" title="tags: Javascript relate"></a>tags: Javascript relate</h2><h6 id="tags-Javascript"><a href="#tags-Javascript" class="headerlink" title="tags: Javascript"></a>tags: <code>Javascript</code></h6><p><a href="https://chiehliu.github.io/git-projects/MYBOOKLIST/index.html#">跟著做出來的範例</a></p><p>成本圖:</p><p><img src="https://i.imgur.com/jMC7v71.png"></p><h2 id="內容概要"><a href="#內容概要" class="headerlink" title="內容概要"></a>內容概要</h2><ul><li>三個 input 來做加入書本的動作，輸入內容後會在下方存入它們的資料，並且有刪除的功能，資料可以儲存在網頁上不會被重新整理刷掉</li><li>會跑出視窗當填寫不完整或是成功執行動作的時候</li><li>頁面使用簡單的 Bootrap 框架製作</li><li>有帶入一些 JSON,ES6-class 的元素</li></ul><h2 id="HTML-boostrap"><a href="#HTML-boostrap" class="headerlink" title="HTML+boostrap:"></a>HTML+boostrap:</h2><h3 id="前置作業"><a href="#前置作業" class="headerlink" title="前置作業"></a>前置作業</h3><p>使用<a href="https://fontawesome.com/">fontawesome</a>來做 icon</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://kit.fontawesome.com/2ae9e2b502.js&quot;</span> <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>使用<a href="https://bootswatch.com/yeti/">bootswatch</a>來做框架這樣就不用處理 CSS 瞜</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;linkrel=&quot;stylesheet&quot;href=&quot;https://bootswatch.com/4/ye``ti/bootstrap.min.css&quot;&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>使用範例:</p><ul><li>h1 裏面包含了 icon 的使用 fa 的部分還有<code>&lt;i&gt;</code>tag</li><li>text-primary 是 bootstrap</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;display-4&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-book-open text-center text-primary&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> My<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;text-primary&quot;</span>&gt;</span>Book<span class="tag">&lt;/<span class="name">span</span>&gt;<span class="name">List</span></span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="JS"><a href="#JS" class="headerlink" title="JS"></a>JS</h2><p>使用 class 建構 Book 這個物件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Book</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">title, author, isbn</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.title = title;</span><br><span class="line">        <span class="built_in">this</span>.author = author;</span><br><span class="line">        <span class="built_in">this</span>.isbn = isbn;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下來會分成數個部分來解釋這整份 JS 內容:</p><ul><li>UI class:處理有關 UI 的任務(使用者會看到並且操作的地方)</li><li>Store class:處理 storage 相關任務</li><li>Event:在 list 裡面展示書本</li><li>Event:加入書本</li><li>Event:移除書本</li></ul><hr><h3 id="UI-class"><a href="#UI-class" class="headerlink" title="UI class"></a>UI class</h3><p>有關於 UI 的內容會有五個相關的 method 來處理:</p><h4 id="displayBooks"><a href="#displayBooks" class="headerlink" title="displayBooks"></a>displayBooks</h4><p>新增的書本會放在這個區域下方</p><p><img src="https://i.imgur.com/SY6qf0A.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="function"><span class="title">displayBooKs</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//這邊註解的內容是作者用來一開始當作資料庫使用並且呈現在display區域</span></span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        <span class="comment">// const StoredBooks = [&#123;</span></span><br><span class="line">        <span class="comment">//         title: &#x27;Book One&#x27;,</span></span><br><span class="line">        <span class="comment">//         author: &#x27;John Doe&#x27;,</span></span><br><span class="line">        <span class="comment">//         isbn: &#x27;3434434&#x27;,</span></span><br><span class="line">        <span class="comment">//     &#125;,</span></span><br><span class="line">        <span class="comment">//     &#123;</span></span><br><span class="line">        <span class="comment">//         title: &#x27;Book Two&#x27;,</span></span><br><span class="line">        <span class="comment">//         author: &#x27;Jane Doe&#x27;,</span></span><br><span class="line">        <span class="comment">//         isbn: &#x27;45545&#x27;,</span></span><br><span class="line">        <span class="comment">//     &#125;</span></span><br><span class="line">        <span class="comment">// ];</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//const books = StoredBooks;</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> books = Store.getBooks();</span><br><span class="line">        <span class="comment">// 這個部分是Store部分建立好之後直接引用進來的函式呼叫</span></span><br><span class="line"></span><br><span class="line">        books.forEach(<span class="function">(<span class="params">book</span>) =&gt;</span> UI.addBookToList(book));</span><br><span class="line">    &#125;   <span class="comment">//books的部分會出來陣列(array)所以可以使用forEach逐個去使用addBookTodoList這個方法，來呈現被加進來的書本資料</span></span><br></pre></td></tr></table></figure><h4 id="addBookToList"><a href="#addBookToList" class="headerlink" title="addBookToList"></a>addBookToList</h4><p>書本加入 display 區域的”方法”呈現在這部分:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="function"><span class="title">addBookToList</span>(<span class="params">book</span>)</span> &#123;</span><br><span class="line">        <span class="comment">// 在#book-list區域下方新增元素&lt;tr&gt;</span></span><br><span class="line">        <span class="keyword">const</span> list = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#book-list&#x27;</span>);</span><br><span class="line">        <span class="keyword">const</span> row = <span class="built_in">document</span>.createElement(<span class="string">&#x27;tr&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//新增的內容如下</span></span><br><span class="line">        row.innerHTML = <span class="string">`</span></span><br><span class="line"><span class="string">            &lt;td&gt;<span class="subst">$&#123;book.title&#125;</span>&lt;/td&gt;</span></span><br><span class="line"><span class="string">            &lt;td&gt;<span class="subst">$&#123;book.author&#125;</span>&lt;/td&gt;</span></span><br><span class="line"><span class="string">            &lt;td&gt;<span class="subst">$&#123;book.isbn&#125;</span>&lt;/td&gt;</span></span><br><span class="line"><span class="string">            &lt;td&gt;&lt;a href=&quot;#&quot; class=&quot;btn btn-danger btn-sm delete&quot;&gt;X&lt;/a&gt;&lt;/td&gt;</span></span><br><span class="line"><span class="string">        `</span></span><br><span class="line"></span><br><span class="line">        list.appendChild(row);</span><br><span class="line">        <span class="comment">// 讓row黏到list下方就是靠這行，appendChild功能是在在列表中添加項目</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="clearFields"><a href="#clearFields" class="headerlink" title="clearFields"></a>clearFields</h4><p>設定好這個清空功能後在兩個狀態下會清空欄位</p><ul><li>加入書本成功後會呼叫這個函式動作就會清空欄位詳見(Event: 加入書本)區域</li><li>重新整理頁面因為預設值為空(“”)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="function"><span class="title">clearFields</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#title&#x27;</span>).value = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#author&#x27;</span>).value = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#isbn&#x27;</span>).value = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="showAlert"><a href="#showAlert" class="headerlink" title="showAlert"></a>showAlert</h4><p>一些不熟的方法</p><p><a href="https://developer.mozilla.org/zh-TW/docs/Web/API/Document/createElement">createElement - MDN</a></p><p><a href="https://developer.mozilla.org/en-US/docs/Web/API/Document/createTextNode">createTextNode - MDN</a></p><p><a href="https://www.w3schools.com/jsref/met_node_appendchild.asp">appendChild - w3cschool</a></p><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Window/setTimeout">setTimeout - MDN</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="function"><span class="title">showAlert</span>(<span class="params">message, className</span>)</span> &#123;</span><br><span class="line">        <span class="comment">//創造一個新的div來產生警告視窗</span></span><br><span class="line">        <span class="keyword">const</span> div = <span class="built_in">document</span>.createElement(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">        <span class="comment">// 幫剛剛創造的div加上bootstrap的屬性產生alert視窗跟顏色message以及className的內容會在下方的Event 加入刪除書本處呼叫並且輸入</span></span><br><span class="line">        div.className = <span class="string">`alert alert-<span class="subst">$&#123;className&#125;</span>`</span>;</span><br><span class="line">        <span class="comment">//這邊是在撰寫加入meassage部分的程式碼使用appendChild方法加入createTextNode的文字內容</span></span><br><span class="line">        div.appendChild(<span class="built_in">document</span>.createTextNode(message));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//這個部分處理alert的位置，先設定好指派變數給container以及form，在使用insertBefore安插東西在...之前的概念</span></span><br><span class="line">        <span class="keyword">const</span> container = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.container&#x27;</span>);</span><br><span class="line">        <span class="keyword">const</span> form = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#book-form&#x27;</span>);</span><br><span class="line">        container.insertBefore(div, form)<span class="comment">//參數(安插物,安插物後方的元素)</span></span><br><span class="line">        <span class="comment">//Vanish in 3 seconds</span></span><br><span class="line">        <span class="comment">//setTimeout計時器方法=&gt;選取要計時的class之後輸入在時間到之後要執行的方法(remove)最後輸入計時時間(毫秒)</span></span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.alert&#x27;</span>).remove(), <span class="number">3000</span>)</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="deleteBook"><a href="#deleteBook" class="headerlink" title="deleteBook"></a>deleteBook</h4><p>這邊兩個 parentElement 的用意在於位置的關係要砍掉的是<code>&lt;td&gt;</code>外面的<code>&lt;tr&gt;</code><br><img src="https://i.imgur.com/0rYVXuv.png"></p><p><a href="https://www.w3schools.com/jsref/met_node_contains.asp">contains - w3cschool</a></p><p><a href="https://developer.mozilla.org/zh-TW/docs/Web/API/Element/classList">classList - MDN</a></p><p><a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/remove">remove - MDN</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="function"><span class="title">deleteBook</span>(<span class="params">el</span>)</span> &#123;</span><br><span class="line">        <span class="comment">// 看看元素的class有無包含delete(顯然是有的見上方圖片是X按鈕)，有則執行remove</span></span><br><span class="line">        <span class="keyword">if</span> (el.classList.contains(<span class="string">&#x27;delete&#x27;</span>)) &#123;</span><br><span class="line">            el.parentElement.parentElement.remove();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><hr><h3 id="Store-class"><a href="#Store-class" class="headerlink" title="Store class"></a>Store class</h3><p>處理 storage 的方法的 class，(local storage 也就是 browser 除非被刪除不然資料會存在那邊)<br>並且它不能存 object 只能存 string</p><h4 id="getBooks"><a href="#getBooks" class="headerlink" title="getBooks"></a>getBooks</h4><p>其實就是 return 傳入的書本的 value 陣列</p><p><a href="https://developer.mozilla.org/en-US/docs/Web/API/Storage/getItem">getItem - MDN</a></p><p>在四個需要抓取書本的地方出現:</p><ul><li>getBooks 方法本身</li><li>UI class displayBooks 要呈現書的地方就抓取了這邊的資料</li><li>addBook 方法內</li><li>removeBook 方法內</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="function"><span class="title">getBooks</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> books;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">localStorage</span>.getItem(<span class="string">&#x27;books&#x27;</span>) === <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="comment">//如果loacalStorage抓取books這個鍵的value為空的話值回復一個空的陣列</span></span><br><span class="line">            books = [];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//如果不為空則回覆取的&#x27;books&#x27;這個鍵的value</span></span><br><span class="line">            books = <span class="built_in">JSON</span>.parse(<span class="built_in">localStorage</span>.getItem(<span class="string">&#x27;books&#x27;</span>))</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> books;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="addBook"><a href="#addBook" class="headerlink" title="addBook"></a>addBook</h4><p>它是功能是在 localStorage 裡面創造鍵與值(key and value)藉由 push 的方式把參數(book)推進去’books’這個陣列裡面</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="function"><span class="title">addBook</span>(<span class="params">book</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> books = Store.getBooks();</span><br><span class="line">    books.push(book);</span><br><span class="line">    <span class="comment">// push 是在陣列後方加入一個或是多個元素在末端</span></span><br><span class="line">    <span class="built_in">localStorage</span>.setItem(<span class="string">&#x27;books&#x27;</span>, <span class="built_in">JSON</span>.stringify(books));</span><br><span class="line">    <span class="comment">// setItem(屬性名稱,value(這邊value只能是string所以使用JSON.stringify))</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="removebook"><a href="#removebook" class="headerlink" title="removebook"></a>removebook</h4><p>得先取得已經加入得書的 value，之後根據剛剛的到的資料做做判斷如果符合 isbn 則執行 splice(刪除元素)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="function"><span class="title">removebook</span>(<span class="params">isbn</span>)</span> &#123;</span><br><span class="line">    <span class="comment">//取的書本的value並且assign給books</span></span><br><span class="line">    <span class="keyword">const</span> books = Store.getBooks();</span><br><span class="line"></span><br><span class="line">    books.forEach(<span class="function">(<span class="params">book, index</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">//當書本的value傳進來之後，它的陣列index也會傳進來</span></span><br><span class="line">        <span class="keyword">if</span> (book.isbn === isbn) &#123;</span><br><span class="line">    <span class="comment">//如果書本的isbn是對的話則splice(刪除)index(檢索位置),1個元素就可以完成效果摟!</span></span><br><span class="line">            books.splice(index, <span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">//這個部分是reset，因為剛剛刪除完之後再setItem一次重設它的鍵跟值</span></span><br><span class="line">    <span class="built_in">localStorage</span>.setItem(<span class="string">&#x27;books&#x27;</span>, <span class="built_in">JSON</span>.stringify(books));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="事件監聽-addEventListener"><a href="#事件監聽-addEventListener" class="headerlink" title="事件監聽(addEventListener)"></a>事件監聽(addEventListener)</h3><h4 id="Event-展示書本在-list-裡面"><a href="#Event-展示書本在-list-裡面" class="headerlink" title="Event: 展示書本在 list 裡面"></a>Event: 展示書本在 list 裡面</h4><p>讓頁面在重整後依舊可以顯示出書本在 list 裡面</p><p><a href="https://developer.mozilla.org/zh-TW/docs/Web/Events/DOMContentLoaded">DOMContentLoaded - MDN</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.addEventListener(<span class="string">&#x27;DOMContentLoaded&#x27;</span>, UI.displayBooKs);</span><br></pre></td></tr></table></figure><h4 id="Event-加入書本"><a href="#Event-加入書本" class="headerlink" title="Event: 加入書本"></a>Event: 加入書本</h4><p>先抓取整個 input 區域後加入事件監聽在’submit’上，然後使用取得的事件的值(e)，去跑下方判斷式(前提是內容不為空(“”)</p><p><a href="https://developer.mozilla.org/zh-TW/docs/Web/API/Event/preventDefault">preventDefault - MDN</a></p><p><a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement/submit_event">submit_event - MDN</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Event: 加入書本</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//先抓取整個input區域後加入事件監聽在&#x27;submit&#x27;上，然後使用取得的事件的值(e)去跑下方的方法跟判斷式</span></span><br><span class="line"><span class="built_in">document</span>.querySelector(<span class="string">&#x27;#book-form&#x27;</span>).addEventListener(<span class="string">&#x27;submit&#x27;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//prevent actual submit</span></span><br><span class="line">    <span class="comment">//讓他提交後就停止動作</span></span><br><span class="line">    e.preventDefault();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//Get form values</span></span><br><span class="line">    <span class="comment">//把取得的值assign給變數給下面做資料驗證</span></span><br><span class="line">    <span class="keyword">const</span> title = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#title&#x27;</span>).value;</span><br><span class="line">    <span class="keyword">const</span> author = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#author&#x27;</span>).value;</span><br><span class="line">    <span class="keyword">const</span> isbn = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#isbn&#x27;</span>).value;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//Valadate (資料驗證)</span></span><br><span class="line">    <span class="keyword">if</span> (title === <span class="string">&#x27;&#x27;</span> || author === <span class="string">&#x27;&#x27;</span> || isbn === <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">        UI.showAlert(<span class="string">&#x27;Please fill in all fields&#x27;</span>, <span class="string">&#x27;danger&#x27;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//instantiate book因為book裡面的資料沒有static所以需要實體化(instantiate)</span></span><br><span class="line">        <span class="keyword">const</span> book = <span class="keyword">new</span> Book(title, author, isbn);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//經過資料驗證後開始呼叫各個靜態方法(static)</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//Add Book to UI</span></span><br><span class="line">        UI.addBookToList(book);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//Add book to store</span></span><br><span class="line"></span><br><span class="line">        Store.addBook(book);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//Show success message</span></span><br><span class="line"></span><br><span class="line">        UI.showAlert(<span class="string">&#x27;Book Added&#x27;</span>, <span class="string">&#x27;success&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//Clear fields</span></span><br><span class="line">        UI.clearFields();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="Event-移除書本"><a href="#Event-移除書本" class="headerlink" title="Event: 移除書本"></a>Event: 移除書本</h4><p>一樣抓取完 input 區域後設定事件監聽使用取得的值(e)，去呼叫下方的靜態方法</p><p>UI 的部分刪除完成後再刪除 Store 的部分重新整理頁面就不會再跑回來瞜</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.querySelector(<span class="string">&#x27;#book-list&#x27;</span>).addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//remove books from UI</span></span><br><span class="line">    UI.deleteBook(e.target)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//remove book from store 這段的目的讓刪除的書本不會再重整頁面後再度出現所以要從store裡面刪除</span></span><br><span class="line">   <span class="comment">//e.target的目標是delete button，使用parentElement會到&lt;td&gt;但是目標是要找到isbn所以要找到sibling裡面的textContent</span></span><br><span class="line">    Store.removebook(e.target.parentElement.previousElementSibling.textContent);</span><br><span class="line"></span><br><span class="line">    UI.showAlert(<span class="string">&#x27;Book Removed&#x27;</span>, <span class="string">&#x27;success&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;JavaScript-BookList-App-可以加入或刪去物件的清單&quot;&gt;&lt;a href=&quot;#JavaScript-BookList-App-可以加入或刪去物件的清單&quot; class=&quot;headerlink&quot; title=&quot;JavaScript BookList </summary>
      
    
    
    
    <category term="Javascript作品" scheme="http://example.com/categories/Javascript%E4%BD%9C%E5%93%81/"/>
    
    
    <category term="HTML" scheme="http://example.com/tags/HTML/"/>
    
    <category term="CSS" scheme="http://example.com/tags/CSS/"/>
    
    <category term="JavaScript" scheme="http://example.com/tags/JavaScript/"/>
    
    <category term="Bootstrap" scheme="http://example.com/tags/Bootstrap/"/>
    
  </entry>
  
  <entry>
    <title>實作練習-Javascript 30 05 - Flex Panel Gallery</title>
    <link href="http://example.com/2020/11/22/Javascript%2030%2005%20-%20Flex%20Panel%20Gallery/"/>
    <id>http://example.com/2020/11/22/Javascript%2030%2005%20-%20Flex%20Panel%20Gallery/</id>
    <published>2020-11-22T12:27:12.000Z</published>
    <updated>2021-04-04T14:14:10.277Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Javascript-30-05-Flex-Panel-Gallery"><a href="#Javascript-30-05-Flex-Panel-Gallery" class="headerlink" title="Javascript 30 05 - Flex Panel Gallery"></a>Javascript 30 05 - Flex Panel Gallery</h1><hr><h2 id="tags-Javascript-relate"><a href="#tags-Javascript-relate" class="headerlink" title="tags: Javascript relate"></a>tags: Javascript relate</h2><h6 id="tags-Javascript"><a href="#tags-Javascript" class="headerlink" title="tags: Javascript"></a>tags: <code>Javascript</code></h6><p>跟著做 JS 30 第四個作品 FLEX 排版/CSS class 切換/transition 動畫事件的處理</p><p><img src="https://i.imgur.com/Nj77C3V.png"></p><p><a href="https://chiehliu.github.io/git-projects/05%20-%20Flex%20Panel%20Gallery/index-START.html">跟著做出來的範例</a></p><h2 id="想法示意"><a href="#想法示意" class="headerlink" title="想法示意"></a>想法示意</h2><ul><li>運用 CSS flex 做各種置中排版</li><li>點擊每個格子，會整體視窗放大，然後跳出文字出現的動畫</li></ul><h3 id="HTML"><a href="#HTML" class="headerlink" title="HTML:"></a>HTML:</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;panels&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;panel panel1&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>Hey<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>Let&#x27;s<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>Dance<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;panel panel2&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>Give<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>Take<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>Receive<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;panel panel3&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>Experience<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>It<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>Today<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;panel panel4&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>Give<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>All<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>You can<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;panel panel5&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>Life<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>In<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>Motion<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="CSS"><a href="#CSS" class="headerlink" title="CSS:"></a>CSS:</h2><p>這個部分主要會針對數個地方直接使用 flex 去做排版以及置中</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.panel</span> &#123;</span><br><span class="line">      //這邊是把最外面的五個大視窗做<span class="attribute">flex</span>並且做同樣的一等分</span><br><span class="line">      <span class="attribute">flex</span>: <span class="number">1</span>;</span><br><span class="line">      <span class="attribute">display</span>: flex;</span><br><span class="line">      <span class="attribute">flex-direction</span>: column;</span><br><span class="line">      <span class="attribute">justify-content</span>: center;</span><br><span class="line">      <span class="attribute">background</span>: <span class="number">#6B0F9C</span>;</span><br><span class="line">      .</span><br><span class="line">      .以下省略</span><br><span class="line">      .</span><br><span class="line">      .</span><br></pre></td></tr></table></figure><p>比較重要的地方並且搭配 JS 做使用的是這個部分</p><ul><li>“open” 是點擊視窗後文字以及視窗都放大的效果</li><li>“*“ 這個部分是觸發之前的<code>&lt;p&gt;</code>的狀態:往螢幕上下移動</li><li>“open-active” 是觸發後<code>&lt;p&gt;</code>的狀態:回到原位</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.panel</span>&gt;*<span class="selector-pseudo">:first</span>-child &#123;</span><br><span class="line">     <span class="attribute">transform</span>: <span class="built_in">translateY</span>(-<span class="number">100%</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="selector-class">.panel</span><span class="selector-class">.open-active</span>&gt;*<span class="selector-pseudo">:first</span>-child &#123;</span><br><span class="line">     <span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">0</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="selector-class">.panel</span>&gt;*<span class="selector-pseudo">:last-child</span> &#123;</span><br><span class="line">     <span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">100%</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="selector-class">.panel</span><span class="selector-class">.open-active</span>&gt;*<span class="selector-pseudo">:last-child</span> &#123;</span><br><span class="line">     <span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">0</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="selector-class">.panel</span> <span class="selector-tag">p</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>) &#123;</span><br><span class="line">     <span class="attribute">font-size</span>: <span class="number">4em</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="selector-class">.panel</span><span class="selector-class">.open</span> &#123;</span><br><span class="line">     <span class="attribute">font-size</span>: <span class="number">40px</span>;</span><br><span class="line">     <span class="attribute">flex</span>: <span class="number">3</span>;</span><br><span class="line">     <span class="comment">/* 手風琴張開特效配上 .panel 裡面的transition可以很方便做到 */</span></span><br><span class="line"></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h2 id="JS"><a href="#JS" class="headerlink" title="JS:"></a>JS:</h2><p>一開始會先製作比較簡單的點擊後放大視窗以及文字:</p><ol><li>直接使用<code>querySeletorAll</code>抓取<code>.panel</code>作為變數<code>panels</code>的值</li><li>對<code>panel</code>做事件監聽使用”click”點擊後觸發後方函式<code>clickHandler</code></li><li>撰寫<code>clickHandler</code>函式，會開或關 open 這個 class，這時點擊視窗以及文字就會放大了</li><li>接下來處理文字特效，對<code>panel</code>增加一個事件”transitionend”來關閉 transform 特效並且使用函式 transitionendHandler</li><li>撰寫 transitionendHandler 函式，因為要先找出影響動畫的 propertyName 可以先 console.log(e)看一下得出是 flex-grow 這個屬性，所以使用判斷式如果是包含 flex 的 propertyName 的話則開或關 open-active 這個 class</li></ol><h3 id="小補充"><a href="#小補充" class="headerlink" title="小補充:"></a>小補充:</h3><ul><li>Safari transitionend event.propertyName === flex</li><li>Chrome + FF transitionend event.propertyName === flex-grow</li><li>querySelectorAll 選取後得到的是一個 NodeList 他不具陣列的所有功能所以使用 forEach</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    ;</span><br><span class="line">    (<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">const</span> panels = <span class="built_in">document</span>.querySelectorAll(<span class="string">&#x27;.panel&#x27;</span>);</span><br><span class="line">      <span class="comment">//抓出來的東西不是陣列所以只能用forEach</span></span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">function</span> <span class="title">clickHandler</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.classList.toggle(<span class="string">&quot;open&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">function</span> <span class="title">transitionHandler</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(e);</span><br><span class="line">        <span class="keyword">if</span> (e.propertyName.indexOf(<span class="string">&#x27;flex&#x27;</span>) !== -<span class="number">1</span>) &#123;</span><br><span class="line">          <span class="built_in">this</span>.classList.toggle(<span class="string">&#x27;open-active&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      panels.forEach(<span class="function"><span class="params">panel</span> =&gt;</span> &#123;</span><br><span class="line">        panel.addEventListener(<span class="string">&quot;click&quot;</span>, <span class="string">`clickHandler</span></span><br><span class="line"><span class="string">clickHandler</span></span><br><span class="line"><span class="string">clickHandler`</span>);</span><br><span class="line">        panel.addEventListener(<span class="string">&quot;transitionend&quot;</span>, transitionHandler);</span><br><span class="line">      &#125;)</span><br><span class="line"></span><br><span class="line">    &#125;)()</span><br><span class="line">  &lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Javascript-30-05-Flex-Panel-Gallery&quot;&gt;&lt;a href=&quot;#Javascript-30-05-Flex-Panel-Gallery&quot; class=&quot;headerlink&quot; title=&quot;Javascript 30 05 - Fle</summary>
      
    
    
    
    <category term="Javascript作品" scheme="http://example.com/categories/Javascript%E4%BD%9C%E5%93%81/"/>
    
    
    <category term="HTML" scheme="http://example.com/tags/HTML/"/>
    
    <category term="CSS" scheme="http://example.com/tags/CSS/"/>
    
    <category term="JavaScript" scheme="http://example.com/tags/JavaScript/"/>
    
    <category term="Flex" scheme="http://example.com/tags/Flex/"/>
    
  </entry>
  
  <entry>
    <title>實作練習-Javascript 30 04 - Array Cardio Day 1</title>
    <link href="http://example.com/2020/11/19/Javascript%2030%2004%20-%20Array%20Cardio%20Day%201/"/>
    <id>http://example.com/2020/11/19/Javascript%2030%2004%20-%20Array%20Cardio%20Day%201/</id>
    <published>2020-11-19T03:21:11.000Z</published>
    <updated>2021-04-04T14:13:57.404Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Javascript-30-04-Array-Cardio-Day-1"><a href="#Javascript-30-04-Array-Cardio-Day-1" class="headerlink" title="Javascript 30 04 - Array Cardio Day 1"></a>Javascript 30 04 - Array Cardio Day 1</h1><hr><h2 id="tags-Javascript-relate"><a href="#tags-Javascript-relate" class="headerlink" title="tags: Javascript relate"></a>tags: Javascript relate</h2><h6 id="tags-Javascript"><a href="#tags-Javascript" class="headerlink" title="tags: Javascript"></a>tags: <code>Javascript</code></h6><p>跟著做 JS 30 第四個作品，不過這集比較多在介紹 array 裡面的內容，像是一些功能介紹等等</p><p><img src="https://i.imgur.com/V70zMHQ.png"></p><p>上圖是 12 筆資料待會要開跑 array 的 methods</p><h2 id="1-Filter-the-list-of-inventors-for-those-who-were-born-in-the-1500’s"><a href="#1-Filter-the-list-of-inventors-for-those-who-were-born-in-the-1500’s" class="headerlink" title="1. Filter -the list of inventors for those who were born in the 1500’s"></a>1. <code>Filter</code> -the list of inventors for those who were born in the 1500’s</h2><p>使用 filter 印出出生約在 1500~1600 左右的人</p><p><code>Array.prototype.filter() </code></p><p><code>filter</code> 對內容作過濾後抽出幾個符合條件的然後做為一個”新陣列”產生，且不會影響原始的資料</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> ans = inventors.filter(<span class="function"><span class="params">inventor</span> =&gt;</span> inventor.year &gt;= <span class="number">1500</span> &amp;&amp; inventor.year &lt; <span class="number">1600</span>)</span><br><span class="line"><span class="comment">//箭頭函式在箭頭後面的就是return的內容</span></span><br><span class="line"><span class="built_in">console</span>.table(ans) <span class="comment">//這邊使用table可以印出表格</span></span><br></pre></td></tr></table></figure><p>結果:<br><img src="https://i.imgur.com/ZGYzXUv.png"></p><h2 id="2-map-Give-us-an-array-of-the-inventors-first-and-last-names"><a href="#2-map-Give-us-an-array-of-the-inventors-first-and-last-names" class="headerlink" title="2. map-Give us an array of the inventors first and last names"></a>2. <code>map</code>-Give us an array of the inventors first and last names</h2><p>給出一個 inventors 的新陣列包含了它們的 first 跟 last names</p><p><code>Array.prototype.map()</code></p><p><code>map</code>產生”新陣列”列出符合條件的內容並且其內容可以針對 return 的東西</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> ans = inventors.map(<span class="function"><span class="params">inventor</span> =&gt;</span> inventor.first + <span class="string">&#x27; &#x27;</span> + inventor.last);</span><br><span class="line"><span class="built_in">console</span>.table(ans);</span><br></pre></td></tr></table></figure><h3 id="補充-forEach-的部分做一樣的題目"><a href="#補充-forEach-的部分做一樣的題目" class="headerlink" title="補充 forEach 的部分做一樣的題目"></a>補充 forEach 的部分做一樣的題目</h3><p><code>Array.prototype.forEach()</code></p><p><code>forEach</code> 是對某些數量的東西各做一件甚麼事，如果沒有要產生新陣列時可以使用，有點像是加東西上去的概念</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> ans = [];</span><br><span class="line">inventors.forEach(<span class="function"><span class="params">inventor</span> =&gt;</span> ans.push(inventor.first + <span class="string">&#x27; &#x27;</span> + inventor.last));</span><br><span class="line"><span class="built_in">console</span>.table(ans);</span><br></pre></td></tr></table></figure><p>map 跟 forEach 產出的結果:</p><p><img src="https://i.imgur.com/GuBBKDS.png"></p><h2 id="3-Sort-the-inventors-by-birthdate-oldest-to-youngest"><a href="#3-Sort-the-inventors-by-birthdate-oldest-to-youngest" class="headerlink" title="3. Sort - the inventors by birthdate, oldest to youngest"></a>3. <code>Sort</code> - the inventors by birthdate, oldest to youngest</h2><p><code>Array.prototype.sort()</code></p><ul><li>若 sort(a, b) 的回傳值小於 0，則會把 a 排在小於 b 之索引的位置，即 a 排在 b 前面。</li><li>若 sort(a, b) 的回傳值大於 0，則會把 b 排在小於 a 之索引的位置，即 b 排在 a 前面。<br>如果我們是為了比較簡單的數字，可以利用 a 減 b。（由小到大）</li></ul><p>let ary =[3,2,8,6,4,9] 這個使用 sort 之後會產生 由小排到大的預設[2,3,4,6,8,9]]</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> ans = inventors.sort(<span class="function">(<span class="params">a, b</span>) =&gt;</span> a.year - b.year)</span><br><span class="line"><span class="comment">//&lt; 0 會往後排 == 0 保持原位 &gt; 0 會往前排</span></span><br><span class="line"><span class="built_in">console</span>.table(ans)</span><br></pre></td></tr></table></figure><p>根據生日前後排出來的結果:<br><img src="https://i.imgur.com/eWG6x69.png"></p><h2 id="4-reduce-How-many-years-did-all-the-inventors-live-all-together"><a href="#4-reduce-How-many-years-did-all-the-inventors-live-all-together" class="headerlink" title="4. reduce - How many years did all the inventors live all together?"></a>4. <code>reduce</code> - How many years did all the inventors live all together?</h2><p><code>Array.prototype.reduce()</code></p><blockquote><p>我們會有一個暫存值，進入陣列去跟每個值做運算，最後回傳這個暫存值。</p></blockquote><p>簡單來說就是使用加法做加總</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> total = <span class="number">0</span>;</span><br><span class="line">    inventors.forEach(<span class="function">(<span class="params">inventor</span>) =&gt;</span> &#123;</span><br><span class="line">    total += inventor.passed - inventor.year</span><br><span class="line">&#125;) <span class="comment">//傳統作法會使用forEach</span></span><br></pre></td></tr></table></figure><p><code>reduce</code>作法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> total = inventors.reduce(<span class="function">(<span class="params">total, inventor</span>) =&gt;</span> &#123;</span><br><span class="line">   <span class="keyword">return</span> total + inventor.passed - inventor.year</span><br><span class="line"> &#125;, <span class="number">0</span>)</span><br><span class="line"> <span class="comment">//參數 前面是function 後面0是初始起始值</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><p>以下是練習題</p><h2 id="5-Sort-the-inventors-by-years-lived"><a href="#5-Sort-the-inventors-by-years-lived" class="headerlink" title="5. Sort - the inventors by years lived"></a>5. <code>Sort</code> - the inventors by years lived</h2><p>照活的歲數排序</p><p>跟上面的操作差不多</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> ans = inventors.sort(<span class="function">(<span class="params">a, b</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> (a.passed - a.year) - (b.passed - b.year)</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.table(ans);</span><br></pre></td></tr></table></figure><p>印出結果:</p><p><img src="https://i.imgur.com/8K35h14.png"></p><h2 id="6-create-a-list-of-Boulevards-in-Paris-that-contain-‘de’-anywhere-in-the-name"><a href="#6-create-a-list-of-Boulevards-in-Paris-that-contain-‘de’-anywhere-in-the-name" class="headerlink" title="6. create a list of Boulevards in Paris that contain ‘de’ anywhere in the name"></a>6. create a list of Boulevards in Paris that contain ‘de’ anywhere in the name</h2><p>從下面這個頁面找出有多少個字包含了’de’這兩個字母在裡面</p><p><a href="https://en.wikipedia.org/wiki/Category:Boulevards_in_Paris">https://en.wikipedia.org/wiki/Category:Boulevards_in_Paris</a></p><p>首先創造一個先陣列 ary</p><p>選取所有的 Boulevards 會發現我們要的文字內容 text 會在<code>.mw-category-group li a</code>這邊找到</p><p>接下來<code>forEach</code>每一個[]並且 push 進去選取到的文字組合這邊會得到 38 個項目</p><p>下一步來做<code>filte</code>r 篩選出要得’de’在 text 裡面尋找完全不一樣是-1 完全一樣是 1 不相關是 0</p><p><img src="https://i.imgur.com/rJk7kkx.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> ary = [];</span><br><span class="line">      <span class="built_in">document</span>.querySelectorAll(<span class="string">&#x27;.mw-category-group li a&#x27;</span>).forEach(<span class="function">(<span class="params">a</span>) =&gt;</span> &#123;</span><br><span class="line">      ary.push(a.text);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">let</span> ans = ary.filter(<span class="function"><span class="params">text</span> =&gt;</span> text.indexOf(<span class="string">&#x27;de&#x27;</span>) !== -<span class="number">1</span>);</span><br></pre></td></tr></table></figure><p>得出結果:</p><p><img src="https://i.imgur.com/BUUUqEf.png"></p><h2 id="7-sort-Exercise-Sort-the-people-alphabetically-by-last-name"><a href="#7-sort-Exercise-Sort-the-people-alphabetically-by-last-name" class="headerlink" title="7. sort - Exercise-Sort the people alphabetically by last name"></a>7. <code>sort</code> - Exercise-Sort the people alphabetically by last name</h2><p>照 abcd 順序排列所有人的 last name</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> ans = people.sort(<span class="function">(<span class="params">a, b</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> [aFirst, aLast] = a.split(<span class="string">&#x27;, &#x27;</span>)</span><br><span class="line">      <span class="keyword">let</span> [bFirst, bLast] = b.split(<span class="string">&#x27;, &#x27;</span>)</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> aLast &gt; bLast ? <span class="number">1</span> : bLast &gt; aLast ? -<span class="number">1</span> : <span class="number">0</span><span class="comment">//判斷整個單字</span></span><br><span class="line">      <span class="keyword">return</span> aLast[<span class="number">0</span>] &gt; bLast[<span class="number">0</span>] ? <span class="number">1</span> : bLast &gt; aLast[<span class="number">0</span>] ? -<span class="number">1</span> : <span class="number">0</span><span class="comment">//只判斷第一個字</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">//如果a&gt;b則 1 如果不是則繼續 b&gt;a 如果&quot;是&quot;則反應 -1 否則為 0</span></span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><p>印出結果(片段…後面太長卡掉)</p><p><img src="https://i.imgur.com/7Lu3UhN.png"></p><h2 id="8-Reduce-Exercise-Sum-up-the-instances-of-each-of-these"><a href="#8-Reduce-Exercise-Sum-up-the-instances-of-each-of-these" class="headerlink" title="8. Reduce - Exercise -Sum up the instances of each of these"></a>8. <code>Reduce</code> - Exercise -Sum up the instances of each of these</h2><p>加總 data 內部的字串數量有多少</p><p>得到的結果應該會長這樣:<br>{<br>car: …<br>truck:…<br>bike:…</p><p>}</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> data = [<span class="string">&#x27;car&#x27;</span>, <span class="string">&#x27;car&#x27;</span>, <span class="string">&#x27;truck&#x27;</span>, <span class="string">&#x27;truck&#x27;</span>, <span class="string">&#x27;bike&#x27;</span>, <span class="string">&#x27;walk&#x27;</span>, <span class="string">&#x27;car&#x27;</span>, <span class="string">&#x27;van&#x27;</span>, <span class="string">&#x27;bike&#x27;</span>, <span class="string">&#x27;walk&#x27;</span>, <span class="string">&#x27;car&#x27;</span>, <span class="string">&#x27;van&#x27;</span>, <span class="string">&#x27;car&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;truck&#x27;</span></span><br><span class="line">    ];</span><br><span class="line"><span class="keyword">let</span> ans = data.reduce(<span class="function">(<span class="params">obj, content</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!obj[content]) obj[content] = <span class="number">1</span> <span class="comment">//當obj內容不等於物件內容的時候回覆1 ， 除此之外回覆 obj[content]++ ，之後再跑回迴圈return obj</span></span><br><span class="line">        <span class="keyword">else</span> obj[content] += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> obj</span><br><span class="line">&#125;, &#123;&#125;)</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.table(ans)</span><br></pre></td></tr></table></figure><p>結果如下</p><p><img src="https://i.imgur.com/RzMkuvZ.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Javascript-30-04-Array-Cardio-Day-1&quot;&gt;&lt;a href=&quot;#Javascript-30-04-Array-Cardio-Day-1&quot; class=&quot;headerlink&quot; title=&quot;Javascript 30 04 - Arr</summary>
      
    
    
    
    <category term="Javascript作品" scheme="http://example.com/categories/Javascript%E4%BD%9C%E5%93%81/"/>
    
    
    <category term="HTML" scheme="http://example.com/tags/HTML/"/>
    
    <category term="CSS" scheme="http://example.com/tags/CSS/"/>
    
    <category term="JavaScript" scheme="http://example.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JS-Crash Course (ES5 &amp; ES6)</title>
    <link href="http://example.com/2020/11/17/p/"/>
    <id>http://example.com/2020/11/17/p/</id>
    <published>2020-11-17T03:17:17.000Z</published>
    <updated>2021-04-04T14:11:28.599Z</updated>
    
    <content type="html"><![CDATA[<h1 id="JavaScript-Crash-Course-For-Beginners"><a href="#JavaScript-Crash-Course-For-Beginners" class="headerlink" title="JavaScript Crash Course For Beginners"></a>JavaScript Crash Course For Beginners</h1><hr><h2 id="tags-Javascript-relate"><a href="#tags-Javascript-relate" class="headerlink" title="tags: Javascript relate"></a>tags: Javascript relate</h2><h6 id="tags-Javascript"><a href="#tags-Javascript" class="headerlink" title="tags: Javascript"></a>tags: <code>Javascript</code></h6><h2 id="學習大綱以及準備"><a href="#學習大綱以及準備" class="headerlink" title="學習大綱以及準備"></a>學習大綱以及準備</h2><h3 id="What-is-Javascript"><a href="#What-is-Javascript" class="headerlink" title="What is Javascript"></a>What is Javascript</h3><ul><li>高級語言 編譯過的程式語言(不需要編譯器)</li><li>符合ECMAScript的規範</li><li>多重編程範式 是一種可以支援超過一種編程範式的程式語言。</li><li>執行於客戶/瀏覽器端同時也作用時伺服器端(Node.js)</li></ul><h3 id="Why-learn-Javascript"><a href="#Why-learn-Javascript" class="headerlink" title="Why learn Javascript"></a>Why learn Javascript</h3><ul><li>JS是瀏覽器語言 如果你要操作瀏覽器必學</li><li>建構互動性高的UI藉著React</li><li>建構客戶端的server以及全端的app</li><li>建構行動裝置的app(React Native, NativeScript,Lonic)</li><li>建構桌機端的app(Electron JS)</li></ul><h3 id="What-you-will-learn-in-this-course"><a href="#What-you-will-learn-in-this-course" class="headerlink" title="What you will learn in this course"></a>What you will learn in this course</h3><ul><li>變數&amp;數據型態(Variables &amp; Data Type)</li><li>陣列(Arrays)</li><li>物件實字(object literals)</li><li>操作字串、陣列、物件的方法(Methods for string, arrays, objects,etc)</li><li>迴圈(Loops - for, while, for…of, forEach, map)</li><li>條件式(conditionals - if, ternary&amp;switch</li><li>函式(function&amp;arrow)</li><li>物件導向(OOP-prototype&amp;classes)</li><li>DOM選取器介紹(DOM Selection)</li><li>DOM操作</li><li>事件(Events)</li><li>基本的驗證(basic validation)</li></ul><h3 id="建議可以使用的VScode-配件"><a href="#建議可以使用的VScode-配件" class="headerlink" title="建議可以使用的VScode 配件"></a>建議可以使用的VScode 配件</h3><p>可以即時的看做的改變而不用一直做重新整理:<br><img src="https://i.imgur.com/JB1QncD.png"></p><h3 id="幾種在HTML檔案使用JS的位置"><a href="#幾種在HTML檔案使用JS的位置" class="headerlink" title="幾種在HTML檔案使用JS的位置"></a>幾種在HTML檔案使用JS的位置</h3><p>放在body最底層直接撰寫JS程式碼</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;header&gt;</span><br><span class="line">        &lt;h1&gt;JS Crash Course&lt;/h1&gt;</span><br><span class="line">    &lt;/header&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        alert(<span class="string">&#x27;HEllo world&#x27;</span>);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p>引用到外面的檔案(推薦使用)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;header&gt;</span><br><span class="line">        &lt;h1&gt;JS Crash Course&lt;/h1&gt;</span><br><span class="line">    &lt;/header&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script src=<span class="string">&quot;main.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><h2 id="Console"><a href="#Console" class="headerlink" title="Console"></a>Console</h2><p>印出結果跟debug可以使用的地方</p><p><img src="https://i.imgur.com/o0oiise.png"></p><p>推薦使用chrome瀏覽器的工具相容性高</p><p><img src="https://i.imgur.com/GJlEbeB.png"></p><p>一般我們常見的<code>console.log()</code>的log的部分其實是方法(methods)</p><p><a href="https://developer.mozilla.org/zh-TW/docs/Web/API/Console">console常見的方法 - MDN</a></p><h2 id="變數-amp-數據型態-Variables-amp-Data-Type"><a href="#變數-amp-數據型態-Variables-amp-Data-Type" class="headerlink" title="變數&amp;數據型態(Variables &amp; Data Type)"></a>變數&amp;數據型態(Variables &amp; Data Type)</h2><h3 id="var"><a href="#var" class="headerlink" title="var"></a>var</h3><ul><li>最早版本的變數</li><li>是全域範圍的變數容易導致衝突</li><li>現在多已使用下面兩個變數居多</li></ul><h3 id="let"><a href="#let" class="headerlink" title="let"></a>let</h3><p>let 可以重新被指派變數</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> age = <span class="number">30</span>;</span><br><span class="line">age = <span class="number">31</span></span><br><span class="line"><span class="built_in">console</span>.log(age);</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/YtZaHI2.png"></p><h3 id="const"><a href="#const" class="headerlink" title="const"></a>const</h3><p>作者建議多多使用<code>const</code>除非你知道你會使用其他值來做重新指派那就使用<code>let</code></p><p>const 變數被指派的值不能被改變並且一定要有起始值(initializer)不然會報錯:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> age = <span class="number">30</span>(起始值);</span><br><span class="line">age = <span class="number">31</span></span><br><span class="line"><span class="built_in">console</span>.log(age);</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/4qbuFcC.png"></p><h3 id="Primitive-Data-Type"><a href="#Primitive-Data-Type" class="headerlink" title="Primitive Data Type"></a>Primitive Data Type</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> name = <span class="string">&#x27;John&#x27;</span>; <span class="comment">//string</span></span><br><span class="line"><span class="keyword">const</span> age = <span class="number">30</span>;<span class="comment">//number</span></span><br><span class="line"><span class="keyword">const</span> rating = <span class="number">4.5</span>;<span class="comment">//number</span></span><br><span class="line"><span class="keyword">const</span> isCool = <span class="literal">true</span>;<span class="comment">//boolean</span></span><br><span class="line"><span class="keyword">const</span> x = <span class="literal">null</span> <span class="comment">// 代表空的，會跑出object但其實是個錯誤</span></span><br><span class="line"><span class="keyword">const</span> y = <span class="literal">undefined</span>;<span class="comment">//undefined</span></span><br><span class="line"><span class="keyword">let</span> z; <span class="comment">// undefined</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> name);</span><br></pre></td></tr></table></figure><h3 id="串接-Concatenation"><a href="#串接-Concatenation" class="headerlink" title="串接(Concatenation)"></a>串接(Concatenation)</h3><h4 id="比較老的字串串接寫法"><a href="#比較老的字串串接寫法" class="headerlink" title="比較老的字串串接寫法:"></a>比較老的字串串接寫法:</h4><p>當字串較長且變數很多的時候會很痛苦</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;my name is &#x27;</span> + name + <span class="string">&#x27; and i am &#x27;</span> + age);</span><br></pre></td></tr></table></figure><h4 id="Template-string"><a href="#Template-string" class="headerlink" title="Template string:"></a>Template string:</h4><p>主要使用(~)下面那個符號讓字串串接變的很容易</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">`my name is <span class="subst">$&#123;name&#125;</span> and i am <span class="subst">$&#123;age&#125;</span>`</span>);</span><br></pre></td></tr></table></figure><p>甚至可以把它們指派給變數</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> hello = <span class="string">`my name is <span class="subst">$&#123;name&#125;</span> and i am <span class="subst">$&#123;age&#125;</span>`</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(hello);</span><br></pre></td></tr></table></figure><h4 id="字串的methods"><a href="#字串的methods" class="headerlink" title="字串的methods"></a>字串的methods</h4><p>計算文字長度(會包含空格)</p><p><img src="https://i.imgur.com/I0RkgaB.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> s = <span class="string">&#x27;hello world&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(s.length);</span><br></pre></td></tr></table></figure><h4 id="轉換至大寫"><a href="#轉換至大寫" class="headerlink" title="轉換至大寫:"></a>轉換至大寫:</h4><p>這邊的方法因為是function所以需要加上()來做呼叫<br>(也有轉換到小寫toLowercase)</p><p><img src="https://i.imgur.com/0T5xOpa.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> s = <span class="string">&#x27;hello world&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(s.toUpperCase());</span><br></pre></td></tr></table></figure><h4 id="擷取文字"><a href="#擷取文字" class="headerlink" title="擷取文字:"></a>擷取文字:</h4><p>()內的參數代表(起始位置,結束位置)</p><p><img src="https://i.imgur.com/j87feJH.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> s = <span class="string">&#x27;hello world&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(s.substring(<span class="number">0</span>, <span class="number">5</span>));</span><br></pre></td></tr></table></figure><p>方法也可以做串接使用(.)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> s = <span class="string">&#x27;hello world&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(s.substring(<span class="number">0</span>, <span class="number">5</span>).toUpperCase());</span><br></pre></td></tr></table></figure><h4 id="split"><a href="#split" class="headerlink" title="split:"></a>split:</h4><p>在參數內是要用來隔開內容的比方說</p><p>這邊參數內寫入的是空白因此會得到全部用’’隔開的array</p><p><img src="https://i.imgur.com/arjdTiU.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> s = <span class="string">&#x27;hello world&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(s.split(<span class="string">&#x27;&#x27;</span>));</span><br></pre></td></tr></table></figure><p>如果要把用逗號串接的字串轉換成array的話:</p><p><img src="https://i.imgur.com/lqvwLmN.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> s = <span class="string">&#x27;technology, computers, it, code&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(s.split(<span class="string">&#x27;,&#x27;</span>));</span><br></pre></td></tr></table></figure><h2 id="陣列-Arrays"><a href="#陣列-Arrays" class="headerlink" title="陣列(Arrays)"></a>陣列(Arrays)</h2><p>擁有不只一個value的變數就是array</p><p>number的array:</p><p><img src="https://i.imgur.com/r4dYwra.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> numbers = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>);<span class="comment">//new Array這個部分是建構子(constructor)</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(numbers);</span><br></pre></td></tr></table></figure><p>字串的array:</p><p><img src="https://i.imgur.com/MC7o0p1.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fruits = [<span class="string">&#x27;apples&#x27;</span>, <span class="string">&#x27;oranges&#x27;</span>, <span class="string">&#x27;pears&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(fruits);</span><br></pre></td></tr></table></figure><p>arrays是以0為基底所以這樣去使用的話會得到:</p><p><img src="https://i.imgur.com/v1GufuH.png"></p><p><code>console.log(fruits[1]);</code></p><p>如果要多串一些物件上去可以這樣使用:</p><p><img src="https://i.imgur.com/TR1FZGh.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fruits = [<span class="string">&#x27;apples&#x27;</span>, <span class="string">&#x27;oranges&#x27;</span>, <span class="string">&#x27;pears&#x27;</span>];</span><br><span class="line"></span><br><span class="line">fruits[<span class="number">3</span>] = <span class="string">&#x27;grapes&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(fruits);</span><br></pre></td></tr></table></figure><p>下面是不行的狀況把const變數指派給新的array就會報錯搂</p><p><img src="https://i.imgur.com/254TWXS.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fruits = [<span class="string">&#x27;apples&#x27;</span>, <span class="string">&#x27;oranges&#x27;</span>, <span class="string">&#x27;pears&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> fruits = [];</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(fruits);</span><br></pre></td></tr></table></figure><p>然而大多數的情況下你不一定都會知道array裡面的物件數量，所以這時就可以使用</p><p><code>push</code>這個methods直接把新的物件加到最後一個位置不管總數為何</p><p><img src="https://i.imgur.com/HLK72bw.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fruits = [<span class="string">&#x27;apples&#x27;</span>, <span class="string">&#x27;oranges&#x27;</span>, <span class="string">&#x27;pears&#x27;</span>];</span><br><span class="line"></span><br><span class="line">fruits[<span class="number">3</span>] = <span class="string">&#x27;grapes&#x27;</span>;</span><br><span class="line"></span><br><span class="line">fruits.push(<span class="string">&#x27;mangos&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(fruits);</span><br></pre></td></tr></table></figure><p>如果要把物件加到開頭可以使用<code>unshift</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fruits = [<span class="string">&#x27;apples&#x27;</span>, <span class="string">&#x27;oranges&#x27;</span>, <span class="string">&#x27;pears&#x27;</span>];</span><br><span class="line"></span><br><span class="line">fruits[<span class="number">3</span>] = <span class="string">&#x27;grapes&#x27;</span>;</span><br><span class="line"></span><br><span class="line">fruits.push(<span class="string">&#x27;mangos&#x27;</span>);</span><br><span class="line"></span><br><span class="line">fruits.unshift(<span class="string">&#x27;strawberries&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(fruits);</span><br></pre></td></tr></table></figure><h3 id="一些常見的方法"><a href="#一些常見的方法" class="headerlink" title="一些常見的方法:"></a>一些常見的方法:</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">fruits.push(<span class="string">&#x27;mangos&#x27;</span>); <span class="comment">//加到最後方</span></span><br><span class="line"></span><br><span class="line">fruits.unshift(<span class="string">&#x27;strawberries&#x27;</span>);<span class="comment">//加到最前方</span></span><br><span class="line"></span><br><span class="line">fruits.pop();<span class="comment">//砍掉最後一個</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Array</span>.isArray(fruits))<span class="comment">//檢測是不是arrays 會返回 true or false</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(fruits.indexOf(<span class="string">&#x27;oranges&#x27;</span>))<span class="comment">// 會跑出檢索號碼oranges會跑出 1 </span></span><br></pre></td></tr></table></figure><h2 id="物件實字-object-literals"><a href="#物件實字-object-literals" class="headerlink" title="物件實字(object literals)"></a>物件實字(object literals)</h2><p>優點是因為封裝的關係可以減少一些全域變數會造成的衝突(不知道是否過時這段說法)</p><p>物件實字的語法重點：</p><p>會用大括號表示。<br>裡面的屬性 (Properties) 用鍵值對 (name(key)-value pairs) 表示。ex.(title: ‘Book one’,)<br>多個屬性以逗號 (comma) 分隔。<br>宣告完後，還是可以再增加 Properties 進去。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> person = &#123;</span><br><span class="line"></span><br><span class="line">    firstName: <span class="string">&#x27;John&#x27;</span>,<span class="comment">//firsName就是porperty也是key John是value</span></span><br><span class="line">    lastName: <span class="string">&#x27;Doe&#x27;</span>,</span><br><span class="line">    age: <span class="number">30</span>,</span><br><span class="line">    hobbies: [<span class="string">&#x27;music&#x27;</span>, <span class="string">&#x27;movies&#x27;</span>, <span class="string">&#x27;sports&#x27;</span>],</span><br><span class="line">    address: &#123;</span><br><span class="line">        street: <span class="string">&#x27;50 main st&#x27;</span>,</span><br><span class="line">        city: <span class="string">&#x27;Boston&#x27;</span>,</span><br><span class="line">        state: <span class="string">&#x27;MA&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>取得hobbies底下的movies:</p><p><code>console.log(person.hobbies[1])</code></p><p>取的address底下的city:</p><p><code>console.log(person.address.city)</code></p><h3 id="解構賦值-Destructuring-assignment"><a href="#解構賦值-Destructuring-assignment" class="headerlink" title="解構賦值(Destructuring assignment):"></a>解構賦值(Destructuring assignment):</h3><p>ES6的東西</p><p>可以從array中取出值(value)<br>可以從object中取出property<br>並且指派給新的變數</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123;</span><br><span class="line">    firstName,<span class="comment">//取出來的值</span></span><br><span class="line">    lastName,</span><br><span class="line">    address: &#123;<span class="comment">//取出來的property</span></span><br><span class="line">        city</span><br><span class="line">    &#125;</span><br><span class="line">&#125; = person;<span class="comment">//被指派的變數</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(city);<span class="comment">// 這樣就可以直接取得他的值Boston</span></span><br></pre></td></tr></table></figure><p>加入新的property:</p><p><img src="https://i.imgur.com/8hVM9wm.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">person.email = <span class="string">&#x27;1234@hotmail.com.tw&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(person)</span><br></pre></td></tr></table></figure><h3 id="從array中的物件取得value"><a href="#從array中的物件取得value" class="headerlink" title="從array中的物件取得value:"></a>從array中的物件取得value:</h3><p>想要取得’Meeting with boss’這個字串的方法如下:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> todos = [&#123;</span><br><span class="line">        id: <span class="number">1</span>,</span><br><span class="line">        text: <span class="string">&#x27;take out trash&#x27;</span>,</span><br><span class="line">        isCompeleted: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        id: <span class="number">2</span>,</span><br><span class="line">        text: <span class="string">&#x27;Meeting with boss&#x27;</span>,</span><br><span class="line">        isCompeleted: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        id: <span class="number">3</span>,</span><br><span class="line">        text: <span class="string">&#x27;Dentist app&#x27;</span>,</span><br><span class="line">        isCompeleted: <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(todos[<span class="number">1</span>].text)</span><br></pre></td></tr></table></figure><h3 id="轉換成JSON格式"><a href="#轉換成JSON格式" class="headerlink" title="轉換成JSON格式"></a>轉換成JSON格式</h3><p>JSON是一種資料的格式，再傳送資料給server的時候會用JSON這個格式傳跟接收，跟上面物件實字的格式有點像差別在於沒有(‘’)都是(“”)，並且所以的key的部分都要加上雙引號(“”)，值的部分除了數字也都要上(“”)</p><p>簡單操作把array轉換成JSON格式使用<code>JSON.stringify</code></p><p><img src="https://i.imgur.com/TqnR9Tb.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> todos = [&#123;</span><br><span class="line">        id: <span class="number">1</span>,</span><br><span class="line">        text: <span class="string">&#x27;take out trash&#x27;</span>,</span><br><span class="line">        isCompeleted: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        id: <span class="number">2</span>,</span><br><span class="line">        text: <span class="string">&#x27;Meeting with boss&#x27;</span>,</span><br><span class="line">        isCompeleted: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        id: <span class="number">3</span>,</span><br><span class="line">        text: <span class="string">&#x27;Dentist app&#x27;</span>,</span><br><span class="line">        isCompeleted: <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> todoJSON = <span class="built_in">JSON</span>.stringify(todos);</span><br><span class="line"><span class="built_in">console</span>.log(todoJSON);</span><br></pre></td></tr></table></figure><h2 id="迴圈-Loops-for-while-for…of-forEach-map"><a href="#迴圈-Loops-for-while-for…of-forEach-map" class="headerlink" title="迴圈(Loops - for, while, for…of, forEach, map)"></a>迴圈(Loops - for, while, for…of, forEach, map)</h2><h3 id="For-Loop"><a href="#For-Loop" class="headerlink" title="For Loop"></a>For Loop</h3><ul><li>第一個分號之前initializes整個loop，同時定義binding</li><li>第二個部分check整個loop要不要繼續跑</li><li>最後一個部分更新整個loop狀態在每一次迴圈結束之後</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="while-Loop"><a href="#while-Loop" class="headerlink" title="while Loop"></a>while Loop</h3><p>其實跟for很像只是比較囉嗦一點</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (i &lt; <span class="number">10</span>) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i);</span><br><span class="line">    i++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="陣列套用迴圈-loop-through-arrays"><a href="#陣列套用迴圈-loop-through-arrays" class="headerlink" title="陣列套用迴圈(loop through arrays)"></a>陣列套用迴圈(loop through arrays)</h3><p>使用length這個方法就可以取得check要不要跑得部分得數字並使用<code>todos[i].text</code>印出文字</p><p><img src="https://i.imgur.com/fG7SJTz.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> todos = [&#123;</span><br><span class="line">        id: <span class="number">1</span>,</span><br><span class="line">        text: <span class="string">&#x27;take out trash&#x27;</span>,</span><br><span class="line">        isCompeleted: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        id: <span class="number">2</span>,</span><br><span class="line">        text: <span class="string">&#x27;Meeting with boss&#x27;</span>,</span><br><span class="line">        isCompeleted: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        id: <span class="number">3</span>,</span><br><span class="line">        text: <span class="string">&#x27;Dentist app&#x27;</span>,</span><br><span class="line">        isCompeleted: <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; todos.length; i++) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(todos[i].text);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="for…of-Loop"><a href="#for…of-Loop" class="headerlink" title="for…of Loop"></a>for…of Loop</h3><p>印出物件<code>console.log(todo)</code><br><img src="https://i.imgur.com/NxLwveS.png"></p><p>印出文字<code>console.log(todo.text)</code><br><img src="https://i.imgur.com/qVQMhlP.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> todos = [&#123;</span><br><span class="line">        id: <span class="number">1</span>,</span><br><span class="line">        text: <span class="string">&#x27;take out trash&#x27;</span>,</span><br><span class="line">        isCompeleted: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        id: <span class="number">2</span>,</span><br><span class="line">        text: <span class="string">&#x27;Meeting with boss&#x27;</span>,</span><br><span class="line">        isCompeleted: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        id: <span class="number">3</span>,</span><br><span class="line">        text: <span class="string">&#x27;Dentist app&#x27;</span>,</span><br><span class="line">        isCompeleted: <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> todo <span class="keyword">of</span> todos) &#123;<span class="comment">//這邊的todo可以自定義</span></span><br><span class="line">    <span class="built_in">console</span>.log(todo);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> todo <span class="keyword">of</span> todos) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(todo.text); <span class="comment">//這邊一樣可以印出文字</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="High-order-array-methods-forEach-map-filter"><a href="#High-order-array-methods-forEach-map-filter" class="headerlink" title="High order array methods(forEach, map, filter)"></a>High order array methods(forEach, map, filter)</h3><p>這邊的high order arrays method都會把一個function當作參數放進去作執行</p><h4 id="forEach"><a href="#forEach" class="headerlink" title="forEach"></a>forEach</h4><p>印出每一個()內的參數以及它的property或是方法</p><p>下方的例子會得到每個todo的text<br><img src="https://i.imgur.com/7I7VFM3.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">todos.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">todo</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(todo.text);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="map"><a href="#map" class="headerlink" title="map"></a>map</h4><p>map會產出一個新的array，下面的範例只產出包含text的array</p><p><img src="https://i.imgur.com/KahrdhH.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> todoText = todos.map(<span class="function"><span class="keyword">function</span> (<span class="params">todo</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> todo.text;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(todoText);</span><br></pre></td></tr></table></figure><h4 id="filter"><a href="#filter" class="headerlink" title="filter"></a>filter</h4><p>會有條件做篩選</p><p>下方的條件是todo.isComplete是否為true是的話則印出新的array來包含被篩選後的內容</p><p><img src="https://i.imgur.com/HKo2jSB.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> todoComplete = todos.filter(<span class="function"><span class="keyword">function</span> (<span class="params">todo</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> todo.isCompeleted === <span class="literal">true</span>;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(todoComplete);</span><br></pre></td></tr></table></figure><h4 id="綜合使用"><a href="#綜合使用" class="headerlink" title="綜合使用"></a>綜合使用</h4><p>下方的例子要使用filter中有true的內容後map出只有text的內容</p><p><img src="https://i.imgur.com/67gdQAP.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> todoComplete = todos.filter(<span class="function"><span class="keyword">function</span> (<span class="params">todo</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> todo.isCompeleted === <span class="literal">true</span>;</span><br><span class="line">&#125;).map(<span class="function"><span class="keyword">function</span> (<span class="params">todo</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> todo.text;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(todoComplete);</span><br></pre></td></tr></table></figure><h2 id="條件式-conditionals-if-ternary-amp-switch"><a href="#條件式-conditionals-if-ternary-amp-switch" class="headerlink" title="條件式(conditionals - if, ternary&amp;switch"></a>條件式(conditionals - if, ternary&amp;switch</h2><h3 id="if-else-if-else的用法"><a href="#if-else-if-else的用法" class="headerlink" title="if, else if, else的用法:"></a>if, else if, else的用法:</h3><p>符合if的條件跑他的{}不然就往下走跑else if，都不符合則跑else</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> x = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (x === <span class="number">10</span>) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;x is 10&#x27;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (x &gt; <span class="number">10</span>) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;x is greater than 10&#x27;</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;x is less than 10&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="邏輯-OR-運算子"><a href="#邏輯-OR-運算子" class="headerlink" title="邏輯 OR 運算子 (||)"></a>邏輯 OR 運算子 (||)</h3><p>只要有一格成立就可以跑下面的程式</p><p><img src="https://i.imgur.com/vJmzenG.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> x = <span class="number">4</span>;</span><br><span class="line"><span class="keyword">const</span> y = <span class="number">11</span>;</span><br><span class="line"><span class="keyword">if</span> (x &gt; <span class="number">5</span> || y &gt; <span class="number">10</span>) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;x is more 10 or y is more than 10&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="邏輯-AND-運算子-amp-amp"><a href="#邏輯-AND-運算子-amp-amp" class="headerlink" title="邏輯 AND 運算子(&amp;&amp;)"></a>邏輯 AND 運算子(&amp;&amp;)</h3><p>並須兩邊都符合，所以下面的程式碼不會跑</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> x = <span class="number">4</span>;</span><br><span class="line"><span class="keyword">const</span> y = <span class="number">11</span>;</span><br><span class="line"><span class="keyword">if</span> (x &gt; <span class="number">5</span> &amp;&amp; y &gt; <span class="number">10</span>) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;x is more 10 or y is more than 10&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="三元-ternary-運算子"><a href="#三元-ternary-運算子" class="headerlink" title="三元 ternary 運算子(? :)"></a>三元 ternary 運算子(? :)</h3><dl><dt>問號前面是條件<br>問號代表then</dt><dd>分號左邊代表條件式成立，右邊是不成立</dd></dl><p>所以我們看下方的程式可以這樣解釋:</p><p>color = 如果X大於10那麼則是red，沒有大於的話則是blue</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> x = <span class="number">11</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> color = x &gt; <span class="number">10</span> ? <span class="string">&#x27;red&#x27;</span> : <span class="string">&#x27;blue&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(color);</span><br></pre></td></tr></table></figure><h3 id="switch"><a href="#switch" class="headerlink" title="switch"></a>switch</h3><p>像開關一樣哪個條件符合則使用哪一段程式碼，記得要加上break跳出迴圈</p><p><img src="https://i.imgur.com/Xaf9yKL.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> x = <span class="number">21</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> color = x &gt; <span class="number">10</span> ? <span class="string">&#x27;red&#x27;</span> : <span class="string">&#x27;blue&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (color) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;red&#x27;</span>:</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;color is red&#x27;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;blue&#x27;</span>:</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;color is blue&#x27;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="built_in">console</span>.loe(<span class="string">&#x27;color is not red or blue&#x27;</span>)</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="函式-function-amp-arrow"><a href="#函式-function-amp-arrow" class="headerlink" title="函式(function&amp;arrow)"></a>函式(function&amp;arrow)</h2><ul><li>建構階段(可以預設參數，然後預設參數是可以被呼叫階段的參數取代)</li><li>呼叫階段(如果有預設參數則不需要放參數進去這邊)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">addNums</span>(<span class="params">num1, num2</span>) </span>&#123;<span class="comment">//建構函式階段</span></span><br><span class="line">    <span class="built_in">console</span>.log(num1 + num2);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">addNums(<span class="number">1</span>, <span class="number">2</span>);<span class="comment">//呼叫函式出來使用並且帶入參數</span></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/ZQzRKtb.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">addNums</span>(<span class="params">num1=<span class="number">1</span>, num2=<span class="number">2</span></span>) </span>&#123;<span class="comment">//也可以使用預設參數就不需要帶入參數</span></span><br><span class="line">    <span class="built_in">console</span>.log(num1 + num2);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">addNums(<span class="number">5</span>,<span class="number">5</span>);</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/1QLN11T.png"></p><h3 id="這樣的寫法會比較常見"><a href="#這樣的寫法會比較常見" class="headerlink" title="這樣的寫法會比較常見:"></a>這樣的寫法會比較常見:</h3><p>使用return帶入並且在console.log()處呼叫函式</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">addNums</span>(<span class="params">num1 = <span class="number">1</span>, num2 = <span class="number">2</span></span>) </span>&#123; </span><br><span class="line">    <span class="keyword">return</span> num1 + num2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(addNums(<span class="number">5</span>, <span class="number">5</span>));</span><br></pre></td></tr></table></figure><h3 id="箭頭函式-arrow-function"><a href="#箭頭函式-arrow-function" class="headerlink" title="箭頭函式(arrow function)"></a>箭頭函式(arrow function)</h3><p>會用創建變數的方式取代function字樣並且在{}前面加入箭頭(=&gt;)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> addNums = <span class="function">(<span class="params">num1 = <span class="number">1</span>, num2 = <span class="number">1</span></span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> num1 + num2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(addNums(<span class="number">5</span>, <span class="number">5</span>));</span><br></pre></td></tr></table></figure><p>如果後方的{}裡面只有一個表達式，甚至可以省略到 reutrn以及 {}(這邊要注意如果要加回來return跟{}要一起加不然會報錯) :</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> addNums = <span class="function">(<span class="params">num1 = <span class="number">1</span>, num2 = <span class="number">1</span></span>) =&gt;</span> num1 + num2;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(addNums(<span class="number">5</span>, <span class="number">5</span>));</span><br></pre></td></tr></table></figure><p>甚至當只有一個參數的時候連前面的()都可以省略:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> addNums = <span class="function"><span class="params">num1</span> =&gt;</span> num1 + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(addNums(<span class="number">5</span>));</span><br></pre></td></tr></table></figure><h2 id="物件導向-OOP-prototype-amp-classes-簡介"><a href="#物件導向-OOP-prototype-amp-classes-簡介" class="headerlink" title="物件導向(OOP-prototype&amp;classes)簡介"></a>物件導向(OOP-prototype&amp;classes)簡介</h2><h3 id="物件的構成及基本操作"><a href="#物件的構成及基本操作" class="headerlink" title="物件的構成及基本操作:"></a>物件的構成及基本操作:</h3><ul><li>屬性(property) 這就好比車子的廠牌 大小 人的姓名年齡等等各種資訊</li><li>方法(method) 就像是物件的運行方式，車子的發動、煞車，人的吃飯睡覺行走等等</li></ul><h4 id="建構子-constructor"><a href="#建構子-constructor" class="headerlink" title="建構子(constructor):"></a>建構子(constructor):</h4><ul><li>建構物件</li><li>實體化物件</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// console.log(addNums(5));</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">firstName, lastName, dob</span>) </span>&#123;<span class="comment">//建構物件</span></span><br><span class="line">    <span class="built_in">this</span>.firstName = firstName;</span><br><span class="line">    <span class="built_in">this</span>.lastName = lastName;</span><br><span class="line">    <span class="built_in">this</span>.dob = dob;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Instantiate object(實體化物件)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> person1 = <span class="keyword">new</span> Person(<span class="string">&#x27;John&#x27;</span>, <span class="string">&#x27;Doe&#x27;</span>, <span class="string">&#x27;4-3-1980&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> person2 = <span class="keyword">new</span> Person(<span class="string">&#x27;Mary&#x27;</span>, <span class="string">&#x27;Smith&#x27;</span>, <span class="string">&#x27;3-6-1970&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(person1.firstName);</span><br></pre></td></tr></table></figure><h3 id="new-Date-物件來呈現時間"><a href="#new-Date-物件來呈現時間" class="headerlink" title="new Date()物件來呈現時間"></a><code>new Date()</code>物件來呈現時間</h3><p>設定方式如下，使用<code>new Date()</code>的方式設定就可以使用他的方法瞜!</p><p><img src="https://i.imgur.com/nyZFrDn.png"></p><p><code>console.log(person2.dob);</code>因為下方dob被設定好了日期所以會呈現出這些完整的資訊</p><p><img src="https://i.imgur.com/DYifrBN.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">firstName, lastName, dob</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.firstName = firstName;</span><br><span class="line">    <span class="built_in">this</span>.lastName = lastName;</span><br><span class="line">    <span class="built_in">this</span>.dob = <span class="keyword">new</span> <span class="built_in">Date</span>(dob);<span class="comment">//被設定好了!!</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> person1 = <span class="keyword">new</span> Person(<span class="string">&#x27;John&#x27;</span>, <span class="string">&#x27;Doe&#x27;</span>, <span class="string">&#x27;4-3-1980&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> person2 = <span class="keyword">new</span> Person(<span class="string">&#x27;Mary&#x27;</span>, <span class="string">&#x27;Smith&#x27;</span>, <span class="string">&#x27;3-6-1970&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(person2.dob);</span><br></pre></td></tr></table></figure><h3 id="物件內的function-使用"><a href="#物件內的function-使用" class="headerlink" title="物件內的function 使用"></a>物件內的function 使用</h3><p>在物件中建立getBirthYear這個funciton，然後在外面呼叫這個函式<code>console.log(person1.getBirthYear())</code><br><code>console.log(person1.getFullName());</code></p><p><img src="https://i.imgur.com/feisIyC.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">firstName, lastName, dob</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.firstName = firstName;</span><br><span class="line">    <span class="built_in">this</span>.lastName = lastName;</span><br><span class="line">    <span class="built_in">this</span>.dob = <span class="keyword">new</span> <span class="built_in">Date</span>(dob);</span><br><span class="line">    <span class="built_in">this</span>.getBirthYear = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.dob.getFullYear();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">this</span>.getFullName = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;<span class="built_in">this</span>.firstName&#125;</span> <span class="subst">$&#123;<span class="built_in">this</span>.lastName&#125;</span>`</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Instantiate object</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> person1 = <span class="keyword">new</span> Person(<span class="string">&#x27;John&#x27;</span>, <span class="string">&#x27;Doe&#x27;</span>, <span class="string">&#x27;4-3-1980&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> person2 = <span class="keyword">new</span> Person(<span class="string">&#x27;Mary&#x27;</span>, <span class="string">&#x27;Smith&#x27;</span>, <span class="string">&#x27;3-6-1970&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(person1.getBirthYear());</span><br><span class="line"><span class="built_in">console</span>.log(person1.getFullName());</span><br></pre></td></tr></table></figure><h3 id="把物件的function放到prototype"><a href="#把物件的function放到prototype" class="headerlink" title="把物件的function放到prototype"></a>把物件的function放到prototype</h3><p>上面有介紹到了建構function在物件裡面的方法，這邊這個方法比較泛用把function放到prototype裡面</p><p><img src="https://i.imgur.com/G8iKLoP.png"></p><p>這樣使用的原因是不是每個物件都要使用方法所以直接往外拉出來需要的再去抓取使用就好</p><p><img src="https://i.imgur.com/feisIyC.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">firstName, lastName, dob</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.firstName = firstName;</span><br><span class="line">    <span class="built_in">this</span>.lastName = lastName;</span><br><span class="line">    <span class="built_in">this</span>.dob = <span class="keyword">new</span> <span class="built_in">Date</span>(dob);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// prototype的使用可以讓方法變的更靈活需要時再取用</span></span><br><span class="line"></span><br><span class="line">Person.prototype.getFullName = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;<span class="built_in">this</span>.firstName&#125;</span> <span class="subst">$&#123;<span class="built_in">this</span>.lastName&#125;</span>`</span></span><br><span class="line">&#125;</span><br><span class="line">Person.prototype.getBirthYear = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">this</span>.dob.getFullYear();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Instantiate object</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> person1 = <span class="keyword">new</span> Person(<span class="string">&#x27;John&#x27;</span>, <span class="string">&#x27;Doe&#x27;</span>, <span class="string">&#x27;4-3-1980&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> person2 = <span class="keyword">new</span> Person(<span class="string">&#x27;Mary&#x27;</span>, <span class="string">&#x27;Smith&#x27;</span>, <span class="string">&#x27;3-6-1970&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(person1.getBirthYear());</span><br><span class="line"><span class="built_in">console</span>.log(person1.getFullName());</span><br></pre></td></tr></table></figure><h3 id="ES6-class"><a href="#ES6-class" class="headerlink" title="ES6 -class"></a>ES6 -class</h3><p>得到的結果跟上方一模一樣只是更好閱讀不同語言的使用者也更看的懂</p><p>這就是語法糖(不一樣的包裝一樣的內容物)</p><p><img src="https://i.imgur.com/A4CbBl6.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">firstName, lastName, dob</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.firstName = firstName;</span><br><span class="line">        <span class="built_in">this</span>.lastName = lastName;</span><br><span class="line">        <span class="built_in">this</span>.dob = <span class="keyword">new</span> <span class="built_in">Date</span>(dob);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">getBirthYear</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.dob.getFullYear();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="title">getFullName</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;<span class="built_in">this</span>.firstName&#125;</span> <span class="subst">$&#123;<span class="built_in">this</span>.lastName&#125;</span>`</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Instantiate object</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> person1 = <span class="keyword">new</span> Person(<span class="string">&#x27;John&#x27;</span>, <span class="string">&#x27;Doe&#x27;</span>, <span class="string">&#x27;4-3-1980&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> person2 = <span class="keyword">new</span> Person(<span class="string">&#x27;Mary&#x27;</span>, <span class="string">&#x27;Smith&#x27;</span>, <span class="string">&#x27;3-6-1970&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(person1.getBirthYear());</span><br><span class="line"><span class="built_in">console</span>.log(person1);</span><br></pre></td></tr></table></figure><h2 id="DOM選取器介紹-DOM-Selection"><a href="#DOM選取器介紹-DOM-Selection" class="headerlink" title="DOM選取器介紹 (DOM Selection)"></a>DOM選取器介紹 (DOM Selection)</h2><p>操作選取的物件就是DOM在做的事情</p><p>document就是HTML檔案也通常是DOM作用的地方</p><p><img src="https://i.imgur.com/zoMZWC9.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">document</span>)</span><br></pre></td></tr></table></figure><h3 id="取得單一的元素"><a href="#取得單一的元素" class="headerlink" title="取得單一的元素"></a>取得單一的元素</h3><h4 id="getElementById"><a href="#getElementById" class="headerlink" title="getElementById"></a><code>getElementById</code></h4><p><img src="https://i.imgur.com/CG9edMJ.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Single element </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">document</span>.getElementById(<span class="string">&#x27;my-form&#x27;</span>))</span><br></pre></td></tr></table></figure><h4 id="把抓取到的元素指派給變數"><a href="#把抓取到的元素指派給變數" class="headerlink" title="把抓取到的元素指派給變數"></a>把抓取到的元素指派給變數</h4><p><img src="https://i.imgur.com/CG9edMJ.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> form = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;my-form&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(form);</span><br></pre></td></tr></table></figure><h4 id="比較新的用法querySeletor"><a href="#比較新的用法querySeletor" class="headerlink" title="比較新的用法querySeletor"></a>比較新的用法<code>querySeletor</code></h4><p>可以抓取任何物件、class、id、各種tag，但是他是單一的選取器所以只會取得第一個就算他是負數</p><p><img src="https://i.imgur.com/KEdRbtu.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">document</span>.querySelector(<span class="string">&#x27;h1&#x27;</span>))</span><br></pre></td></tr></table></figure><h3 id="取得複數的元素"><a href="#取得複數的元素" class="headerlink" title="取得複數的元素"></a>取得複數的元素</h3><h4 id="querySeletorAll"><a href="#querySeletorAll" class="headerlink" title="querySeletorAll"></a><code>querySeletorAll</code></h4><p>作者建議都使用這個因為其他方法比較舊</p><p>他抓取出來的物件很像array</p><p><img src="https://i.imgur.com/Mn2Kjig.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">document</span>.querySelectorAll(<span class="string">&#x27;.item&#x27;</span>))</span><br></pre></td></tr></table></figure><p>也可以使用array的一些方法如<code>forEach</code>但不是全部畢竟他不是array</p><p><img src="https://i.imgur.com/LVRarEe.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> items = <span class="built_in">document</span>.querySelectorAll(<span class="string">&#x27;.item&#x27;</span>);</span><br><span class="line"></span><br><span class="line">items.forEach(<span class="function">(<span class="params">item</span>) =&gt;</span> <span class="built_in">console</span>.log(item));</span><br></pre></td></tr></table></figure><h2 id="DOM操作"><a href="#DOM操作" class="headerlink" title="DOM操作"></a>DOM操作</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//把選取的物件指派給變數方便操作</span></span><br><span class="line"><span class="keyword">const</span> ul = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.items&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//刪除選取的物件</span></span><br><span class="line">ul.remove();</span><br><span class="line"></span><br><span class="line"><span class="comment">//刪除選取的元素最後一個物件</span></span><br><span class="line">ul.lastElementChild.remove();</span><br><span class="line"></span><br><span class="line"><span class="comment">//選取的元素的第一個物件文字內容改變</span></span><br><span class="line">ul.firstElementChild.textContent = <span class="string">&#x27;Hello&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//選取的元素的[1]物件文字內容改變</span></span><br><span class="line">ul.children[<span class="number">1</span>].innerHTML = <span class="string">&#x27;Brad&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//選取的元素的HTML內容改變</span></span><br><span class="line">ul.lastElementChild.innerHTML = <span class="string">&#x27;&lt;h1&gt;HELLO&lt;h1&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//選取的元素的CSS改變</span></span><br><span class="line"><span class="keyword">const</span> btn = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.btn&#x27;</span>);</span><br><span class="line">btn.style.background = <span class="string">&#x27;red&#x27;</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="事件監聽addEventListener"><a href="#事件監聽addEventListener" class="headerlink" title="事件監聽addEventListener"></a>事件監聽<code>addEventListener</code></h3><p>建立事件監聽的方法如下:</p><p>在addEventListener後面的參數(事件,事件發生時執行的函式)</p><p>印出點擊這個事件<br><img src="https://i.imgur.com/CUxT9m9.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> btn = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.btn&#x27;</span>);</span><br><span class="line"></span><br><span class="line">btn.addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">    e.preventDefault();</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;click&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>印出所有事件的屬性(attribute)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> btn = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.btn&#x27;</span>);</span><br><span class="line"></span><br><span class="line">btn.addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">    e.preventDefault();</span><br><span class="line">    <span class="built_in">console</span>.log(e)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><code>console.log(e.target)</code>這個屬性可以印出e所taget地方的元素像這邊就是點擊哪邊就印出哪邊的元素</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> btn = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.btn&#x27;</span>);</span><br><span class="line"></span><br><span class="line">btn.addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">    e.preventDefault();</span><br><span class="line">    <span class="built_in">console</span>.log(e.target)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><code>console.log(e.target.className)</code>可以繼續使用屬性像這邊就可以取得className</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> btn = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.btn&#x27;</span>);</span><br><span class="line"></span><br><span class="line">btn.addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">    e.preventDefault();</span><br><span class="line">    <span class="built_in">console</span>.log(e.target.className)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="DOM實例"><a href="#DOM實例" class="headerlink" title="DOM實例"></a>DOM實例</h2><p>實作一個小小的提交表</p><p>點擊送出的時候會在下方產生區塊顯示剛剛submit的內容</p><p>HTML:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;header&gt;</span><br><span class="line">        &lt;h1&gt;JS For Beginners&lt;&#x2F;h1&gt;</span><br><span class="line">    &lt;&#x2F;header&gt;</span><br><span class="line"></span><br><span class="line">    &lt;section class&#x3D;&quot;container&quot;&gt;</span><br><span class="line">        &lt;form id&#x3D;&quot;my-form&quot;&gt;</span><br><span class="line">            &lt;h1&gt;Add User&lt;&#x2F;h1&gt;</span><br><span class="line">            &lt;div class&#x3D;&quot;msg&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">            &lt;div&gt;</span><br><span class="line">                &lt;label for&#x3D;&quot;name&quot;&gt;Name:&lt;&#x2F;label&gt;</span><br><span class="line">                &lt;input type&#x3D;&quot;text&quot; id&#x3D;&quot;name&quot;&gt;</span><br><span class="line">            &lt;&#x2F;div&gt;</span><br><span class="line">            &lt;div&gt;</span><br><span class="line">                &lt;label for&#x3D;&quot;email&quot;&gt;Email:&lt;&#x2F;label&gt;</span><br><span class="line">                &lt;input type&#x3D;&quot;text&quot; id&#x3D;&quot;email&quot;&gt;</span><br><span class="line">            &lt;&#x2F;div&gt;</span><br><span class="line">            &lt;input class&#x3D;&quot;btn&quot; type&#x3D;&quot;submit&quot; value&#x3D;&quot;Submit&quot;&gt;</span><br><span class="line">        &lt;&#x2F;form&gt;</span><br><span class="line"></span><br><span class="line">        &lt;ul id&#x3D;&quot;users&quot;&gt;&lt;&#x2F;ul&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- &lt;ul class&#x3D;&quot;items&quot;&gt;</span><br><span class="line">            &lt;li class&#x3D;&quot;item&quot;&gt;Item 1&lt;&#x2F;li&gt;</span><br><span class="line">            &lt;li class&#x3D;&quot;item&quot;&gt;Item 2&lt;&#x2F;li&gt;</span><br><span class="line">            &lt;li class&#x3D;&quot;item&quot;&gt;Item 3&lt;&#x2F;li&gt;</span><br><span class="line">        &lt;&#x2F;ul&gt; --&gt;</span><br><span class="line">    &lt;&#x2F;section&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;main.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure><h3 id="教學一些小技巧"><a href="#教學一些小技巧" class="headerlink" title="教學一些小技巧"></a>教學一些小技巧</h3><h4 id="點擊時產生效果"><a href="#點擊時產生效果" class="headerlink" title="點擊時產生效果"></a>點擊時產生效果</h4><p>點擊前<br><img src="https://i.imgur.com/Z30jXcH.png"></p><p>點擊後<br><img src="https://i.imgur.com/19S3u6f.png"></p><h3 id="事件-Evemt"><a href="#事件-Evemt" class="headerlink" title="事件(Evemt)"></a>事件(Evemt)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> btn = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.btn&#x27;</span>);</span><br><span class="line"></span><br><span class="line">btn.addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">    e.preventDefault();</span><br><span class="line">    <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#my-form&#x27;</span>).style.background = <span class="string">&#x27;#ccc&#x27;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>使用<code>classList.add()</code>裡面放入預先做好的class內容就可以在點擊的時候跳出這個被景色</p><p><img src="https://i.imgur.com/dQfkMQE.png"></p><p><img src="https://i.imgur.com/Rf87eeN.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> btn = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.btn&#x27;</span>);</span><br><span class="line"></span><br><span class="line">btn.addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">    e.preventDefault();</span><br><span class="line">    <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#my-form&#x27;</span>).style.background = <span class="string">&#x27;#ccc&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">document</span>.querySelector(<span class="string">&#x27;body&#x27;</span>).classList.add(<span class="string">&#x27;bg-dark&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>改變文字內容當點擊的時候</p><p><img src="https://i.imgur.com/uJ9jciN.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">document</span>.querySelector(<span class="string">&#x27;.items&#x27;</span>).lastElementChild.innerHTML = <span class="string">&#x27;&lt;h1&gt;hello&lt;/h1&gt;&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="正式內容"><a href="#正式內容" class="headerlink" title="正式內容:"></a>正式內容:</h3><p><img src="https://i.imgur.com/M8fHz33.png"></p><p><a href="https://chiehliu.github.io/git-projects/JSCCFB/index.html">完成品</a></p><p>第一步把所有的DOM elements轉換成變數</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// USER FORM SCRIPT</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Put DOM elements into variables</span></span><br><span class="line"><span class="keyword">const</span> myForm = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#my-form&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> nameInput = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#name&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> emailInput = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#email&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> msg = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.msg&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> userList = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#users&#x27;</span>);</span><br></pre></td></tr></table></figure><p>加入事件監聽，並建立變數指派給onSubmit這個function並把其內容寫在下方</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">myForm.addEventListener(<span class="string">&#x27;submit&#x27;</span>, onSubmit);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>這邊因為想要取得名字的值</p><p>可以使用 想要取得值的 <code>變數.value</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">onSubmit</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    e.preventDefault();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">console</span>.log(nameInput.value);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="事件的驗證-Event-Validation"><a href="#事件的驗證-Event-Validation" class="headerlink" title="事件的驗證(Event Validation)"></a>事件的驗證(Event Validation)</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">onSubmit</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">  e.preventDefault();</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span>(nameInput.value === <span class="string">&#x27;&#x27;</span> || emailInput.value === <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">    <span class="comment">// 下方的msg處理警告文字並且加入額外寫好的CSS</span></span><br><span class="line">    msg.classList.add(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">    msg.innerHTML = <span class="string">&#x27;Please enter all fields&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 計時3 秒鐘 移除警告</span></span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> msg.remove(), <span class="number">3000</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 如果不是上面的狀況則創造新的&lt;li&gt;元素</span></span><br><span class="line">    <span class="keyword">const</span> li = <span class="built_in">document</span>.createElement(<span class="string">&#x27;li&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 處理新的&lt;li&gt;裡面的文字內容</span></span><br><span class="line">    li.appendChild(<span class="built_in">document</span>.createTextNode(<span class="string">`<span class="subst">$&#123;nameInput.value&#125;</span>: <span class="subst">$&#123;emailInput.value&#125;</span>`</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Add HTML</span></span><br><span class="line">    <span class="comment">// li.innerHTML = `&lt;strong&gt;$&#123;nameInput.value&#125;&lt;/strong&gt;e: $&#123;emailInput.value&#125;`;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 把剛剛新增的&lt;li&gt;加到userList裡面</span></span><br><span class="line">    userList.appendChild(li);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 讓他預設為空所以在做完任何動作之後會恢復空白</span></span><br><span class="line">    nameInput.value = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    emailInput.value = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;JavaScript-Crash-Course-For-Beginners&quot;&gt;&lt;a href=&quot;#JavaScript-Crash-Course-For-Beginners&quot; class=&quot;headerlink&quot; title=&quot;JavaScript Crash C</summary>
      
    
    
    
    <category term="Javascript" scheme="http://example.com/categories/Javascript/"/>
    
    
    <category term="Javascript" scheme="http://example.com/tags/Javascript/"/>
    
  </entry>
  
</feed>
